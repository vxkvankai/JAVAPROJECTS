!*****> !style_green[4. TRANSACTIONS]
!*****>  Create Test Data

''Create Accounts''

!|Execute|!-insert into [OLB_ACCOUNT]([BRANCH_ID],[STATUS],[INTERFACE_ID],[ACCOUNT_NAME],[ACCOUNT_NUMBER],[ACCOUNT_TYPE],[ACCOUNT_CLASS]
      ,[BALANCE],[SYNC_DATE],[CREATED_DATE],[ACCOUNT_STATUS],[AVAILABLE_BALANCE],[DIRECT_CONNECT],[DIRECT_ID]
      ,[OUTSTANDING_BALANCE],[INTEREST_RATE],[LOAN_AMOUNT],[ACCOUNT_OPEN_DATE]
      ,[APR]) values (1, 'accountstatus.open', null,'TransactionSearchTest1', null, 'accounttype.annuity', 
      'accountclass.otherasset', 10.17, SYSDATETIME(), SYSDATETIME(), null, 10.17, 0, 'TestDirectID1', 10.00, 12.11, 12000.00, SYSDATETIME(), 15)-!|

!|Query|!-select [ACCOUNT_ID] from [OLB_ACCOUNT] where ACCOUNT_NAME = 'TransactionSearchTest1'-!|
|[ACCOUNT_ID]?|
|>>account1|

!|Execute|!-insert into [USER_ACCOUNT_JOIN]([USER_ID],[ACCOUNT_ID],[NICKNAME],[EXCLUDED],[HIDDEN],[HIDE_BY_ADMIN]) 
		  values (-!@userID2!-, -!@account1!-, SYSDATETIME(), 0,0,0)-!|

!|Query|!-select ID from [USER_ACCOUNT_JOIN] where ACCOUNT_ID =-!@account1|
|[ID]?|
|>>userAccJoinID1|


!|Execute|!-insert into [OLB_ACCOUNT]([BRANCH_ID],[STATUS],[INTERFACE_ID],[ACCOUNT_NAME],[ACCOUNT_NUMBER],[ACCOUNT_TYPE],[ACCOUNT_CLASS]
      ,[BALANCE],[SYNC_DATE],[CREATED_DATE],[ACCOUNT_STATUS],[AVAILABLE_BALANCE],[DIRECT_CONNECT],[DIRECT_ID]
      ,[OUTSTANDING_BALANCE],[INTEREST_RATE],[LOAN_AMOUNT],[ACCOUNT_OPEN_DATE]
      ,[APR]) values (1, 'accountstatus.open', null,'TransactionSearchTest2', null, 'accounttype.annuity', 
      'accountclass.otherasset', 10.17, SYSDATETIME(), SYSDATETIME(), null, 10.17, 0, null, 10.00, 12.11, 12000.00, SYSDATETIME(), 15)-!|

!|Query|!-select [ACCOUNT_ID] from [OLB_ACCOUNT] where ACCOUNT_NAME = 'TransactionSearchTest2'-!|
|[ACCOUNT_ID]?|
|>>account2|

!|Execute|!-insert into [USER_ACCOUNT_JOIN]([USER_ID],[ACCOUNT_ID],[NICKNAME],[EXCLUDED],[HIDDEN],[HIDE_BY_ADMIN]) 
		  values (-!@userID2!-, -!@account2!-, SYSDATETIME(), 0,0,0)-!|

!|Query|!-select ID from [USER_ACCOUNT_JOIN] where ACCOUNT_ID =-!@account2|
|[ID]?|
|>>userAccJoinID2|

''Create Transactions''

!|Execute|!-insert into [OLB_TRANSACTION]([ACCOUNT_ID],[INTERFACE_ID],[TYPE],[NAME],[AMOUNT],[POST_DATE],[CREATED_DATE],[DIRECT_ID])
		values (-!@account1!-,null, 0 , 'FitTestTransaction', 20.45, SYSDATETIME(), SYSDATETIME(), 'FitTestTrDirectID100')-!|

!|Query|!-select ID from [OLB_TRANSACTION] where DIRECT_ID = 'FitTestTrDirectID100'-!|
| [ID]?|
|>>trID|

!|Execute|!-insert into [USER_TRANSACTION_JOIN]([TRANSACTION_ID],[USER_ID]) values(-!@trID!-, -!@userID2!-)-!|

!|Query|!-select t2.ID from [OLB_TRANSACTION] as t1, [USER_TRANSACTION_JOIN] as t2 where t1.ID=t2.TRANSACTION_ID and t1.DIRECT_ID = 'FitTestTrDirectID100'-!|
| ID?|
|>>userTransactionJoinID|


!|Execute|!-insert into[SPLIT_CATEGORIZATION]([USER_TRANSACTION_JOIN_ID],[CATEGORY_ID],[SPLIT_AMOUNT]) values(-!@userTransactionJoinID!-, 101, 20.45)-!|

!|Query|!-SELECT ID from [SPLIT_CATEGORIZATION] where [USER_TRANSACTION_JOIN_ID] = -!@userTransactionJoinID|
| ID?|
|>>splitID|




!|Execute|!-insert into [OLB_TRANSACTION]([ACCOUNT_ID],[INTERFACE_ID],[TYPE],[NAME],[AMOUNT],[POST_DATE],[CREATED_DATE],[DIRECT_ID])
		values (-!@account1!-,null, 0 , 'FitTestTransaction', -200.45, SYSDATETIME(), SYSDATETIME(), 'FitTestTrDirectID200')-!|

!|Query|!-select ID from [OLB_TRANSACTION] where DIRECT_ID = 'FitTestTrDirectID200'-!|
| [ID]?|
|>>trID200|

!|Execute|!-insert into [USER_TRANSACTION_JOIN]([TRANSACTION_ID],[USER_ID]) values(-!@trID200!-, -!@userID2!-)-!|

!|Query|!-select t2.ID from [OLB_TRANSACTION] as t1, [USER_TRANSACTION_JOIN] as t2 where t1.ID=t2.TRANSACTION_ID and t1.DIRECT_ID = 'FitTestTrDirectID200'-!|
| ID?|
|>>userTransactionJoinID200|


!|Execute|!-insert into[SPLIT_CATEGORIZATION]([USER_TRANSACTION_JOIN_ID],[CATEGORY_ID],[SPLIT_AMOUNT]) values(-!@userTransactionJoinID200!-, 101, -200.45)-!|

!|Query|!-SELECT ID from [SPLIT_CATEGORIZATION] where [USER_TRANSACTION_JOIN_ID] = -!@userTransactionJoinID200|
| ID?|
|>>splitID200|



!|Query|!-SELECT Convert(varchar,Year(DATEADD(DAY, -540, SYSDATETIME())))  + '-'+Convert(varchar,Month(SYSDATETIME())) + '-'+
                 Convert(varchar,Day (SYSDATETIME())) as lastYear -!|
|lastYear?|
|>>lastYear|

!|Execute|!-insert into [OLB_TRANSACTION]([ACCOUNT_ID],[INTERFACE_ID],[TYPE],[NAME],[AMOUNT],[POST_DATE],[CREATED_DATE],[DIRECT_ID])
		values (-!@account1!-,null, 0 , 'FitTestTransaction', 100.46, SYSDATETIME(), SYSDATETIME(), 'FitTestTrDirectID1')
             insert into [OLB_TRANSACTION]([ACCOUNT_ID],[INTERFACE_ID],[TYPE],[NAME],[AMOUNT],[POST_DATE],[CREATED_DATE],[DIRECT_ID])
		values (-!@account1!-,null, 0 , 'FitTestTransaction', 200.46, DATEADD(DAY, -1, SYSDATETIME()), SYSDATETIME(), 'FitTestTrDirectID2')
             insert into [OLB_TRANSACTION]([ACCOUNT_ID],[INTERFACE_ID],[TYPE],[NAME],[AMOUNT],[POST_DATE],[CREATED_DATE],[DIRECT_ID])
		values (-!@account1!-,null, 0 , 'FitTestTransaction', 300.46, DATEADD(DAY, -60, SYSDATETIME()), SYSDATETIME(), 'FitTestTrDirectID3')
             insert into [OLB_TRANSACTION]([ACCOUNT_ID],[INTERFACE_ID],[TYPE],[NAME],[AMOUNT],[POST_DATE],[CREATED_DATE],[DIRECT_ID])
		values (-!@account1!-,null, 0 , 'FitTestTransaction', 400.46, DATEADD(DAY, -120, SYSDATETIME()), SYSDATETIME(), 'FitTestTrDirectID4')
             insert into [OLB_TRANSACTION]([ACCOUNT_ID],[INTERFACE_ID],[TYPE],[NAME],[AMOUNT],[POST_DATE],[CREATED_DATE],[DIRECT_ID])
		values (-!@account1!-,null, 0 , 'FitTestTransaction', 500.46, DATEADD(DAY, -180, SYSDATETIME()), SYSDATETIME(), 'FitTestTrDirectID5')
             insert into [OLB_TRANSACTION]([ACCOUNT_ID],[INTERFACE_ID],[TYPE],[NAME],[AMOUNT],[POST_DATE],[CREATED_DATE],[DIRECT_ID])
		values (-!@account1!-,null, 0 , 'FitTestTransaction', 600.46, DATEADD(DAY, -240, SYSDATETIME()), SYSDATETIME(), 'FitTestTrDirectID6')
             insert into [OLB_TRANSACTION]([ACCOUNT_ID],[INTERFACE_ID],[TYPE],[NAME],[AMOUNT],[POST_DATE],[CREATED_DATE],[DIRECT_ID])
		values (-!@account1!-,null, 0 , 'FitTestTransaction', 700.46, DATEADD(DAY, -300, SYSDATETIME()), SYSDATETIME(), 'FitTestTrDirectID7')
             insert into [OLB_TRANSACTION]([ACCOUNT_ID],[INTERFACE_ID],[TYPE],[NAME],[AMOUNT],[POST_DATE],[CREATED_DATE],[DIRECT_ID])
		values (-!@account1!-,null, 0 , 'FitTestTransaction', -100.46, DATEADD(DAY, -360, SYSDATETIME()), SYSDATETIME(), 'FitTestTrDirectID8')
             insert into [OLB_TRANSACTION]([ACCOUNT_ID],[INTERFACE_ID],[TYPE],[NAME],[AMOUNT],[POST_DATE],[CREATED_DATE],[DIRECT_ID])
		values (-!@account1!-,null, 0 , 'FitTestTransaction', -200.46, DATEADD(DAY, -420, SYSDATETIME()), SYSDATETIME(), 'FitTestTrDirectID9')
             insert into [OLB_TRANSACTION]([ACCOUNT_ID],[INTERFACE_ID],[TYPE],[NAME],[AMOUNT],[POST_DATE],[CREATED_DATE],[DIRECT_ID])
		values (-!@account1!-,null, 0 , 'FitTestTransaction', -300.46, DATEADD(DAY, -480, SYSDATETIME()), SYSDATETIME(), 'FitTestTrDirectID10')
             insert into [OLB_TRANSACTION]([ACCOUNT_ID],[INTERFACE_ID],[TYPE],[NAME],[AMOUNT],[POST_DATE],[CREATED_DATE],[DIRECT_ID])
		values (-!@account1!-,null, 0 , 'bFitTestTransaction', -600.46, -!@lastYear!-, SYSDATETIME(), 'FitTestTrDirectID11')
             insert into [OLB_TRANSACTION]([ACCOUNT_ID],[INTERFACE_ID],[TYPE],[NAME],[AMOUNT],[POST_DATE],[CREATED_DATE],[DIRECT_ID])
		values (-!@account1!-,null, 0 , 'aFitTestTransaction', -500.46, -!@lastYear!-, SYSDATETIME(), 'FitTestTrDirectID12')-!|
!|Query|!-select ID from [OLB_TRANSACTION] where DIRECT_ID = 'FitTestTrDirectID1'-!|
| [ID]?|
|>>trID1|
!|Query|!-select ID from [OLB_TRANSACTION] where DIRECT_ID = 'FitTestTrDirectID2'-!|
| [ID]?|
|>>trID2|
!|Query|!-select ID from [OLB_TRANSACTION] where DIRECT_ID = 'FitTestTrDirectID3'-!|
| [ID]?|
|>>trID3|
!|Query|!-select ID from [OLB_TRANSACTION] where DIRECT_ID = 'FitTestTrDirectID4'-!|
| [ID]?|
|>>trID4|
!|Query|!-select ID from [OLB_TRANSACTION] where DIRECT_ID = 'FitTestTrDirectID5'-!|
| [ID]?|
|>>trID5|
!|Query|!-select ID from [OLB_TRANSACTION] where DIRECT_ID = 'FitTestTrDirectID6'-!|
| [ID]?|
|>>trID6|
!|Query|!-select ID from [OLB_TRANSACTION] where DIRECT_ID = 'FitTestTrDirectID7'-!|
| [ID]?|
|>>trID7|
!|Query|!-select ID from [OLB_TRANSACTION] where DIRECT_ID = 'FitTestTrDirectID8'-!|
| [ID]?|
|>>trID8|
!|Query|!-select ID from [OLB_TRANSACTION] where DIRECT_ID = 'FitTestTrDirectID9'-!|
| [ID]?|
|>>trID9|
!|Query|!-select ID from [OLB_TRANSACTION] where DIRECT_ID = 'FitTestTrDirectID10'-!|
| [ID]?|
|>>trID10|
!|Query|!-select ID from [OLB_TRANSACTION] where DIRECT_ID = 'FitTestTrDirectID11'-!|
| [ID]?|
|>>trID11|
!|Query|!-select ID from [OLB_TRANSACTION] where DIRECT_ID = 'FitTestTrDirectID12'-!|
| [ID]?|
|>>trID12|
!|Execute|!-insert into [USER_TRANSACTION_JOIN]([TRANSACTION_ID],[USER_ID]) values(-!@trID1!-, -!@userID2!-)
            insert into [USER_TRANSACTION_JOIN]([TRANSACTION_ID],[USER_ID]) values(-!@trID2!-, -!@userID2!-)
            insert into [USER_TRANSACTION_JOIN]([TRANSACTION_ID],[USER_ID]) values(-!@trID3!-, -!@userID2!-)
            insert into [USER_TRANSACTION_JOIN]([TRANSACTION_ID],[USER_ID]) values(-!@trID4!-, -!@userID2!-)
            insert into [USER_TRANSACTION_JOIN]([TRANSACTION_ID],[USER_ID]) values(-!@trID5!-, -!@userID2!-)
            insert into [USER_TRANSACTION_JOIN]([TRANSACTION_ID],[USER_ID]) values(-!@trID6!-, -!@userID2!-)
            insert into [USER_TRANSACTION_JOIN]([TRANSACTION_ID],[USER_ID]) values(-!@trID7!-, -!@userID2!-)
            insert into [USER_TRANSACTION_JOIN]([TRANSACTION_ID],[USER_ID]) values(-!@trID8!-, -!@userID2!-)
            insert into [USER_TRANSACTION_JOIN]([TRANSACTION_ID],[USER_ID]) values(-!@trID9!-, -!@userID2!-)
            insert into [USER_TRANSACTION_JOIN]([TRANSACTION_ID],[USER_ID]) values(-!@trID10!-, -!@userID2!-)
            insert into [USER_TRANSACTION_JOIN]([TRANSACTION_ID],[USER_ID]) values(-!@trID11!-, -!@userID2!-)
            insert into [USER_TRANSACTION_JOIN]([TRANSACTION_ID],[USER_ID]) values(-!@trID12!-, -!@userID2!-)-!|

!|Query|!-select t2.ID from [OLB_TRANSACTION] as t1, [USER_TRANSACTION_JOIN] as t2 where t1.ID=t2.TRANSACTION_ID and t1.DIRECT_ID = 'FitTestTrDirectID1'-!|
| ID?|
|>>userTransactionJoinID1|
!|Query|!-select t2.ID from [OLB_TRANSACTION] as t1, [USER_TRANSACTION_JOIN] as t2 where t1.ID=t2.TRANSACTION_ID and t1.DIRECT_ID = 'FitTestTrDirectID2'-!|
| ID?|
|>>userTransactionJoinID2|
!|Query|!-select t2.ID from [OLB_TRANSACTION] as t1, [USER_TRANSACTION_JOIN] as t2 where t1.ID=t2.TRANSACTION_ID and t1.DIRECT_ID = 'FitTestTrDirectID3'-!|
| ID?|
|>>userTransactionJoinID3|
!|Query|!-select t2.ID from [OLB_TRANSACTION] as t1, [USER_TRANSACTION_JOIN] as t2 where t1.ID=t2.TRANSACTION_ID and t1.DIRECT_ID = 'FitTestTrDirectID4'-!|
| ID?|
|>>userTransactionJoinID4|
!|Query|!-select t2.ID from [OLB_TRANSACTION] as t1, [USER_TRANSACTION_JOIN] as t2 where t1.ID=t2.TRANSACTION_ID and t1.DIRECT_ID = 'FitTestTrDirectID5'-!|
| ID?|
|>>userTransactionJoinID5|
!|Query|!-select t2.ID from [OLB_TRANSACTION] as t1, [USER_TRANSACTION_JOIN] as t2 where t1.ID=t2.TRANSACTION_ID and t1.DIRECT_ID = 'FitTestTrDirectID6'-!|
| ID?|
|>>userTransactionJoinID6|
!|Query|!-select t2.ID from [OLB_TRANSACTION] as t1, [USER_TRANSACTION_JOIN] as t2 where t1.ID=t2.TRANSACTION_ID and t1.DIRECT_ID = 'FitTestTrDirectID7'-!|
| ID?|
|>>userTransactionJoinID7|
!|Query|!-select t2.ID from [OLB_TRANSACTION] as t1, [USER_TRANSACTION_JOIN] as t2 where t1.ID=t2.TRANSACTION_ID and t1.DIRECT_ID = 'FitTestTrDirectID8'-!|
| ID?|
|>>userTransactionJoinID8|
!|Query|!-select t2.ID from [OLB_TRANSACTION] as t1, [USER_TRANSACTION_JOIN] as t2 where t1.ID=t2.TRANSACTION_ID and t1.DIRECT_ID = 'FitTestTrDirectID9'-!|
| ID?|
|>>userTransactionJoinID9|
!|Query|!-select t2.ID from [OLB_TRANSACTION] as t1, [USER_TRANSACTION_JOIN] as t2 where t1.ID=t2.TRANSACTION_ID and t1.DIRECT_ID = 'FitTestTrDirectID10'-!|
| ID?|
|>>userTransactionJoinID10|
!|Query|!-select t2.ID from [OLB_TRANSACTION] as t1, [USER_TRANSACTION_JOIN] as t2 where t1.ID=t2.TRANSACTION_ID and t1.DIRECT_ID = 'FitTestTrDirectID11'-!|
| ID?|
|>>userTransactionJoinID11|
!|Query|!-select t2.ID from [OLB_TRANSACTION] as t1, [USER_TRANSACTION_JOIN] as t2 where t1.ID=t2.TRANSACTION_ID and t1.DIRECT_ID = 'FitTestTrDirectID12'-!|
| ID?|
|>>userTransactionJoinID12|

!|Execute|!-insert into[SPLIT_CATEGORIZATION]([USER_TRANSACTION_JOIN_ID],[CATEGORY_ID],[SPLIT_AMOUNT]) values(-!@userTransactionJoinID1!-, 1, 100.46)
            insert into[SPLIT_CATEGORIZATION]([USER_TRANSACTION_JOIN_ID],[CATEGORY_ID],[SPLIT_AMOUNT]) values(-!@userTransactionJoinID2!-, 1, 200.46)
            insert into[SPLIT_CATEGORIZATION]([USER_TRANSACTION_JOIN_ID],[CATEGORY_ID],[SPLIT_AMOUNT]) values(-!@userTransactionJoinID3!-, 1, 300.46)
            insert into[SPLIT_CATEGORIZATION]([USER_TRANSACTION_JOIN_ID],[CATEGORY_ID],[SPLIT_AMOUNT]) values(-!@userTransactionJoinID4!-, 1, 400.46)
            insert into[SPLIT_CATEGORIZATION]([USER_TRANSACTION_JOIN_ID],[CATEGORY_ID],[SPLIT_AMOUNT]) values(-!@userTransactionJoinID5!-, 1, 500.46)
            insert into[SPLIT_CATEGORIZATION]([USER_TRANSACTION_JOIN_ID],[CATEGORY_ID],[SPLIT_AMOUNT]) values(-!@userTransactionJoinID6!-, 1, 600.46)
            insert into[SPLIT_CATEGORIZATION]([USER_TRANSACTION_JOIN_ID],[CATEGORY_ID],[SPLIT_AMOUNT]) values(-!@userTransactionJoinID7!-, 1, 700.46)
            insert into[SPLIT_CATEGORIZATION]([USER_TRANSACTION_JOIN_ID],[CATEGORY_ID],[SPLIT_AMOUNT]) values(-!@userTransactionJoinID8!-, 1, -100.46)
            insert into[SPLIT_CATEGORIZATION]([USER_TRANSACTION_JOIN_ID],[CATEGORY_ID],[SPLIT_AMOUNT]) values(-!@userTransactionJoinID9!-, 1, -200.46)
            insert into[SPLIT_CATEGORIZATION]([USER_TRANSACTION_JOIN_ID],[CATEGORY_ID],[SPLIT_AMOUNT]) values(-!@userTransactionJoinID10!-, 1, -300.46)
            insert into[SPLIT_CATEGORIZATION]([USER_TRANSACTION_JOIN_ID],[CATEGORY_ID],[SPLIT_AMOUNT]) values(-!@userTransactionJoinID11!-, 1, -600.46)
            insert into[SPLIT_CATEGORIZATION]([USER_TRANSACTION_JOIN_ID],[CATEGORY_ID],[SPLIT_AMOUNT]) values(-!@userTransactionJoinID12!-, 1, -500.46)-!|

!|Query|!-SELECT ID from [SPLIT_CATEGORIZATION] where [USER_TRANSACTION_JOIN_ID] = -!@userTransactionJoinID1|
| ID?|
|>>splitID1|
!|Query|!-SELECT ID from [SPLIT_CATEGORIZATION] where [USER_TRANSACTION_JOIN_ID] = -!@userTransactionJoinID2|
| ID?|
|>>splitID2|
!|Query|!-SELECT ID from [SPLIT_CATEGORIZATION] where [USER_TRANSACTION_JOIN_ID] = -!@userTransactionJoinID3|
| ID?|
|>>splitID3|
!|Query|!-SELECT ID from [SPLIT_CATEGORIZATION] where [USER_TRANSACTION_JOIN_ID] = -!@userTransactionJoinID4|
| ID?|
|>>splitID4|
!|Query|!-SELECT ID from [SPLIT_CATEGORIZATION] where [USER_TRANSACTION_JOIN_ID] = -!@userTransactionJoinID5|
| ID?|
|>>splitID5|
!|Query|!-SELECT ID from [SPLIT_CATEGORIZATION] where [USER_TRANSACTION_JOIN_ID] = -!@userTransactionJoinID6|
| ID?|
|>>splitID6|
!|Query|!-SELECT ID from [SPLIT_CATEGORIZATION] where [USER_TRANSACTION_JOIN_ID] = -!@userTransactionJoinID7|
| ID?|
|>>splitID7|
!|Query|!-SELECT ID from [SPLIT_CATEGORIZATION] where [USER_TRANSACTION_JOIN_ID] = -!@userTransactionJoinID8|
| ID?|
|>>splitID8|
!|Query|!-SELECT ID from [SPLIT_CATEGORIZATION] where [USER_TRANSACTION_JOIN_ID] = -!@userTransactionJoinID9|
| ID?|
|>>splitID9|
!|Query|!-SELECT ID from [SPLIT_CATEGORIZATION] where [USER_TRANSACTION_JOIN_ID] = -!@userTransactionJoinID10|
| ID?|
|>>splitID10|
!|Query|!-SELECT ID from [SPLIT_CATEGORIZATION] where [USER_TRANSACTION_JOIN_ID] = -!@userTransactionJoinID11|
| ID?|
|>>splitID11|
!|Query|!-SELECT ID from [SPLIT_CATEGORIZATION] where [USER_TRANSACTION_JOIN_ID] = -!@userTransactionJoinID12|
| ID?|
|>>splitID12|	
!|DatabaseEnvironment|
|commit|
****!
!*****> '''4.1 POST TRANSACTIONS'''
!*****> '''4.1.1 POST TRANSACTIONS (/transactions)'''
!*****> '''4.1.1.1 POST TRANSACTIONS (/transactions - create an offline transaction)'''

'''4.1.1.1.1 POST TRANSACTIONS (/transactions - accountID null)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": 0, 
        "id": 0, 
        "amount": null, 
        "memo": null, 
        "name": null, 
        "originalName": null, 
        "offline": null, 
        "pending": null, 
        "postDate": null, 
        "postingSeq": null, 
        "type": 0, 
        "transactionId": 0, 
        "categoryName": null, 
        "categoryId": null, 
        "accountName": null, 
        "hidden": null, 
        "excluded": null
    }
}-!|
|POST|/transactions|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200001 - Argument transactionSplit-UserAccountId is invalid.-!|true|

'''4.1.1.1.2 POST TRANSACTIONS (/transactions - non-offline account)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": -!%userAccJoinID1%!-, 
        "id": 375, 
        "amount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 100.46
            }
        }, 
        "memo": "This is test memo", 
        "name": "FitTestTransaction", 
        "originalName": "FitTestTransaction", 
        "offline": null, 
        "pending": false, 
        "postDate": {
            "Date": {
                "year": 2013, 
                "month": 1, 
                "day": 4, 
                "displayValue": "01/04/2013"
            }
        }, 
        "postingSeq": 1, 
        "type": 0, 
        "transactionId": null, 
        "categoryName": "Uncategorized Income", 
        "categoryId": 1, 
        "accountName": "2013-01-04 11:36:31.6312730", 
        "hidden": false, 
        "excluded": false
    }
}-!|
|POST|/transactions|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200202 - Operation for transaction only allowed on offline account.-!|true|

'''4.1.1.1.3 POST TRANSACTIONS (/transactions - offline account(type=0))'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": -!%userAccJoinID2%!-, 
        "id": 375, 
        "amount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 100.46
            }
        }, 
        "memo": "This is test memo", 
        "name": "OfflineTransactionTest", 
        "originalName": "OfflineTransactionTest", 
        "offline": null, 
        "pending": false, 
        "postDate": {
            "Date": {
                "year": 2013, 
                "month": 1, 
                "day": 4, 
                "displayValue": "01/04/2013"
            }
        }, 
        "postingSeq": 12, 
        "type": 0, 
        "transactionId": null, 
        "categoryName": "Uncategorized Income", 
        "categoryId": 1, 
        "accountName": "2013-01-04 11:36:31.6312730", 
        "hidden": false, 
        "excluded": false
    }
}-!|
|POST|/transactions|200|||
|let||js|!-response.jsonbody.Transaction.accountId-!|%userAccJoinID2%|
|let|$offlineTrSplitID1|js|!-response.jsonbody.Transaction.id-!||
|let||js|!-response.jsonbody.Transaction.amount.Money.currencyCode-!|!-USD-!|
|let||js|!-response.jsonbody.Transaction.amount.Money.precision-!|!-2-!|
|let||js|!-response.jsonbody.Transaction.amount.Money.value-!|!-100.46-!|
|let||js|!-response.jsonbody.Transaction.memo-!|!-This is test memo-!|
|let||js|!-response.jsonbody.Transaction.name-!|!-OfflineTransactionTest-!|
|let||js|!-response.jsonbody.Transaction.originalName-!|!-OfflineTransactionTest-!|
|let||js|!-response.jsonbody.Transaction.offline-!||
|let||js|!-response.jsonbody.Transaction.pending-!|!-false-!|
|let||js|!-response.jsonbody.Transaction.postDate.Date.year-!|!-2013-!|
|let||js|!-response.jsonbody.Transaction.postDate.Date.month-!||
|let||js|!-response.jsonbody.Transaction.postDate.Date.day-!|!-4-!|
|let||js|!-response.jsonbody.Transaction.postDate.Date.displayValue-!|!-01/04/2013-!|
|let||js|!-response.jsonbody.Transaction.postingSeq-!|!-12-!|
|let||js|!-response.jsonbody.Transaction.type-!|0.0|
|let|$offlineTrID1|js|!-response.jsonbody.Transaction.transactionId-!||
|let||js|!-response.jsonbody.Transaction.categoryName-!|!-Uncategorized Income-!|
|let||js|!-response.jsonbody.Transaction.categoryId-!|1.0|
|let||js|!-response.jsonbody.Transaction.accountName-!||
|let||js|!-response.jsonbody.Transaction.hidden-!|false|
|let||js|!-response.jsonbody.Transaction.excluded-!|false|

'''4.1.1.1.4 POST TRANSACTIONS (/transactions - offline account (type=1))'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": -!%userAccJoinID2%!-, 
        "id": 375, 
        "amount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 100.46
            }
        }, 
        "memo": "This is test memo", 
        "name": "OfflineTransactionTest", 
        "originalName": "OfflineTransactionTest", 
        "offline": null, 
        "pending": true, 
        "postDate": {
            "Date": {
                "year": 2013, 
                "month": 1, 
                "day": 4, 
                "displayValue": "01/04/2013"
            }
        }, 
        "postingSeq": 12, 
        "type": 1, 
        "transactionId": null, 
        "categoryName": "Uncategorized Expense", 
        "categoryId": 100, 
        "accountName": "2013-01-04 11:36:31.6312730", 
        "hidden": true, 
        "excluded": true
    }
}-!|
|POST|/transactions|200|||
|let||js|!-response.jsonbody.Transaction.accountId-!|%userAccJoinID2%|
|let|$offlineTrSplitID2|js|!-response.jsonbody.Transaction.id-!||
|let||js|!-response.jsonbody.Transaction.amount.Money.currencyCode-!|!-USD-!|
|let||js|!-response.jsonbody.Transaction.amount.Money.precision-!|!-2-!|
|let||js|!-response.jsonbody.Transaction.amount.Money.value-!|!-100.46-!|
|let||js|!-response.jsonbody.Transaction.memo-!|!-This is test memo-!|
|let||js|!-response.jsonbody.Transaction.name-!|!-OfflineTransactionTest-!|
|let||js|!-response.jsonbody.Transaction.originalName-!|!-OfflineTransactionTest-!|
|let||js|!-response.jsonbody.Transaction.offline-!||
|let||js|!-response.jsonbody.Transaction.pending-!|!-true-!|
|let||js|!-response.jsonbody.Transaction.postDate.Date.year-!|!-2013-!|
|let||js|!-response.jsonbody.Transaction.postDate.Date.month-!||
|let||js|!-response.jsonbody.Transaction.postDate.Date.day-!|!-4-!|
|let||js|!-response.jsonbody.Transaction.postDate.Date.displayValue-!|!-01/04/2013-!|
|let||js|!-response.jsonbody.Transaction.postingSeq-!|!-12-!|
|let||js|!-response.jsonbody.Transaction.type-!|1.0|
|let|$offlineTrID2|js|!-response.jsonbody.Transaction.transactionId-!||
|let||js|!-response.jsonbody.Transaction.categoryName-!|!-Uncategorized Expense-!|
|let||js|!-response.jsonbody.Transaction.categoryId-!|100|
|let||js|!-response.jsonbody.Transaction.accountName-!||
|let||js|!-response.jsonbody.Transaction.hidden-!|false|
|let||js|!-response.jsonbody.Transaction.excluded-!|false|

'''4.1.1.1.5 POST TRANSACTIONS (/transactions - amount null)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": -!%userAccJoinID2%!-, 
        "id": 0, 
        "amount": null,
        "memo": null, 
        "name": null, 
        "originalName": null, 
        "offline": null, 
        "pending": null, 
        "postDate": null, 
        "postingSeq": null, 
        "type": null, 
        "transactionId": 0, 
        "categoryName": null, 
        "categoryId": null, 
        "accountName": null, 
        "hidden": null, 
        "excluded": null
    }
}-!|
|POST|/transactions|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200002 - Argument transactionSplit-Amount is undefined but is required.-!|true|

'''4.1.1.1.6 POST TRANSACTIONS (/transactions - postDate null)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": -!%userAccJoinID2%!-, 
        "id": 0, 
        "amount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 100.46
            }
        }, 
        "memo": null, 
        "name": null, 
        "originalName": null, 
        "offline": null, 
        "pending": null, 
        "postDate": null, 
        "postingSeq": null, 
        "type": 0, 
        "transactionId": 0, 
        "categoryName": null, 
        "categoryId": null, 
        "accountName": null, 
        "hidden": null, 
        "excluded": null
    }
}-!|
|POST|/transactions|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200002 - Argument transactionSplit-PostDate is undefined but is required.-!|true|

'''4.1.1.1.7 POST TRANSACTIONS (/transactions - name null)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": -!%userAccJoinID2%!-, 
        "id": 0, 
        "amount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 100.46
            }
        }, 
        "memo": null, 
        "name": null, 
        "originalName": "This is test originalName", 
        "offline": null, 
        "pending": null, 
        "postDate": {
            "Date": {
                "year": 2013, 
                "month": 1, 
                "day": 4, 
                "displayValue": "01/04/2013"
            }
        }, 
        "postingSeq": null, 
        "type": 0, 
        "transactionId": 0, 
        "categoryName": null, 
        "categoryId": null, 
        "accountName": null, 
        "hidden": null, 
        "excluded": null
    }
}-!|
|POST|/transactions|200||||
|let|$offlineTrSplitID3|js|!-response.jsonbody.Transaction.id-!||
|let||js|!-response.jsonbody.Transaction.name-!|!-This is test originalName-!|
|let|$offlineTrID3|js|!-response.jsonbody.Transaction.transactionId-!||

'''4.1.1.1.8 POST TRANSACTIONS (/transactions - non-required fields are null)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": -!%userAccJoinID2%!-, 
        "id": 0, 
        "amount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 100.46
            }
        }, 
        "memo": null, 
        "name": "OfflineTransactionTest", 
        "originalName": null, 
        "offline": null, 
        "pending": null, 
        "postDate": {
            "Date": {
                "year": 2013, 
                "month": 1, 
                "day": 4, 
                "displayValue": "01/04/2013"
            }
        }, 
        "postingSeq": 12, 
        "type": 0, 
        "transactionId": 0, 
        "categoryName": null, 
        "categoryId": null, 
        "accountName": null, 
        "hidden": null, 
        "excluded": null
    }
}-!|
|POST|/transactions|200|||
|let||js|!-response.jsonbody.Transaction.accountId-!|%userAccJoinID2%|
|let|$offlineTrSplitID4|js|!-response.jsonbody.Transaction.id-!||
|let||js|!-response.jsonbody.Transaction.amount.Money.currencyCode-!|!-USD-!|
|let||js|!-response.jsonbody.Transaction.amount.Money.precision-!|!-2-!|
|let||js|!-response.jsonbody.Transaction.amount.Money.value-!|!-100.46-!|
|let||js|!-response.jsonbody.Transaction.memo-!|!-null-!|
|let||js|!-response.jsonbody.Transaction.name-!|!-OfflineTransactionTest-!|
|let||js|!-response.jsonbody.Transaction.originalName-!||
|let||js|!-response.jsonbody.Transaction.offline-!||
|let||js|!-response.jsonbody.Transaction.pending-!|!-false-!|
|let||js|!-response.jsonbody.Transaction.postDate.Date.year-!|!-2013-!|
|let||js|!-response.jsonbody.Transaction.postDate.Date.month-!||
|let||js|!-response.jsonbody.Transaction.postDate.Date.day-!|!-4-!|
|let||js|!-response.jsonbody.Transaction.postDate.Date.displayValue-!|!-01/04/2013-!|
|let||js|!-response.jsonbody.Transaction.postingSeq-!|!-12-!|
|let||js|!-response.jsonbody.Transaction.type-!|0.0|
|let|$offlineTrID4|js|!-response.jsonbody.Transaction.transactionId-!||
|let||js|!-response.jsonbody.Transaction.categoryName-!|!-Uncategorized Income-!|
|let||js|!-response.jsonbody.Transaction.categoryId-!|1.0|
|let||js|!-response.jsonbody.Transaction.accountName-!||
|let||js|!-response.jsonbody.Transaction.hidden-!|false|
|let||js|!-response.jsonbody.Transaction.excluded-!|false|

****!
****!
!*****> '''4.1.2 POST TRANSACTIONS (/transactions/{txnid}/split)'''

'''4.1.2.1 POST TRANSACTIONS (Split a transaction)'''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "categoryId": "101", 
    "amount": "4.45"
}-!|
|POST|/transactions/%splitID%/split|200|||
|let||js|response.jsonbody|||

!|Query|!-select COUNT(*) as TotalSplitRecord from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID = -!@userTransactionJoinID|
| TotalSplitRecord?|
|2|
!|Query|!-select SPLIT_AMOUNT from [SPLIT_CATEGORIZATION] where SPLIT_AMOUNT = 16.00 and USER_TRANSACTION_JOIN_ID = -!@userTransactionJoinID|
| SPLIT_AMOUNT?|
|16.00|
!|Query|!-select SPLIT_AMOUNT from [SPLIT_CATEGORIZATION] where SPLIT_AMOUNT = 4.45 and USER_TRANSACTION_JOIN_ID = -!@userTransactionJoinID|
| SPLIT_AMOUNT?|
|4.45|

'''4.1.2.2 POST TRANSACTIONS (Re-split a transaction)'''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "categoryId": "101", 
    "amount": "5.45"
}-!|
|POST|/transactions/%splitID%/split|200|||
|setBody|!-{
    "categoryId": "101", 
    "amount": "1.05"
}-!|
|POST|/transactions/%splitID%/split|200|||
|let||js|response.jsonbody||
!|Query|!-select COUNT(*) as TotalSplitRecord from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID = -!@userTransactionJoinID|
| TotalSplitRecord?|
|4|
!|Query|!-select SPLIT_AMOUNT from [SPLIT_CATEGORIZATION] where SPLIT_AMOUNT = 5.45 and USER_TRANSACTION_JOIN_ID = -!@userTransactionJoinID|
| SPLIT_AMOUNT?|
|5.45|
!|Query|!-select SPLIT_AMOUNT from [SPLIT_CATEGORIZATION] where SPLIT_AMOUNT = 4.45 and USER_TRANSACTION_JOIN_ID = -!@userTransactionJoinID|
| SPLIT_AMOUNT?|
|4.45|
!|Query|!-select SPLIT_AMOUNT from [SPLIT_CATEGORIZATION] where SPLIT_AMOUNT = 9.50 and USER_TRANSACTION_JOIN_ID = -!@userTransactionJoinID|
| SPLIT_AMOUNT?|
|9.50|
!|Query|!-select SPLIT_AMOUNT from [SPLIT_CATEGORIZATION] where SPLIT_AMOUNT = 1.05 and USER_TRANSACTION_JOIN_ID = -!@userTransactionJoinID|
| SPLIT_AMOUNT?|
|1.05|

'''4.1.2.3 POST TRANSACTIONS (transaction does not exist)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "categoryId": "101", 
    "amount": "5.45"
}-!|
|POST|/transactions/1234567/split|400|||
|let|$errMsg|js|response.jsonbody.developerMessage||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200002 - Argument origTransaction is undefined but is required.-!|true|

'''4.1.2.4 POST TRANSACTIONS (negative split amount)'''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "categoryId": "101", 
    "amount": "-5.02"
}-!|
|POST|/transactions/%splitID%/split|400|||
|let|$errMsg|js|response.jsonbody.developerMessage||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200300 - Transaction amount is positive - split must be positive (greater than zero.)-!|true|

'''4.1.2.5 POST TRANSACTIONS (split amount equals to 0)'''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "categoryId": "101", 
    "amount": "0.00"
}-!|
|POST|/transactions/%splitID%/split|400|||
|let|$errMsg|js|response.jsonbody.developerMessage||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200001 - Argument splitAmount is invalid.-!|true|

'''4.1.2.6 POST TRANSACTIONS (split amount greater than transaction amount)'''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "categoryId": "101", 
    "amount": "45.01"
}-!|
|POST|/transactions/%splitID%/split|400|||
|let|$errMsg|js|response.jsonbody.developerMessage||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200302 - Split amount must be less than original split amount.-!|true|

'''4.1.2.7 POST TRANSACTIONS (split amount equals to transaction amount)'''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "categoryId": "101", 
    "amount": "10.55"
}-!|
|POST|/transactions/%splitID%/split|400|||
|let|$errMsg|js|response.jsonbody.developerMessage||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200302 - Split amount must be less than original split amount. Value=-!|true|

'''4.1.2.8 POST TRANSACTIONS (incorrect CategoryID)'''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "categoryId": "478", 
    "amount": "1.55"
}-!|
|POST|/transactions/%splitID%/split|400|||
|let|$errMsg|js|response.jsonbody.developerMessage||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 30064 - Category is not valid for user-!|true|

'''4.1.2.9 POST TRANSACTIONS (Split a negative transaction amount with positive split amount)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "categoryId": "101", 
    "amount": "5.45"
}-!|
|POST|/transactions/%splitID200%/split|400|||
|let|$errMsg1|js|response.jsonbody.developerMessage||
|setBody|!-{
    "categoryId": "101", 
    "amount": "0"
}-!|
|POST|/transactions/%splitID200%/split|400|||
|let|$errMsg2|js|response.jsonbody.developerMessage||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg1|!-ErrorCode: 200301 - Transaction amount is negative - split must be negative (less than zero.)-!|true|
|errMsg2|!-ErrorCode: 200001 - Argument splitAmount is invalid.-!|true|

'''4.1.2.10 POST TRANSACTIONS (Split a negative transaction amount with negative split amount)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "categoryId": "101", 
    "amount": "-5.45"
}-!|
|POST|/transactions/%splitID200%/split|200|||
|let||js|response.jsonbody||

!|Query|!-select ID from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID = -!@userTransactionJoinID200|
| ID?|
|>>splitID201|
|>>splitID202|
!|Query|!-select SPLIT_AMOUNT from [SPLIT_CATEGORIZATION] where SPLIT_AMOUNT = -195 and USER_TRANSACTION_JOIN_ID = -!@userTransactionJoinID200|
| SPLIT_AMOUNT?|
|-195.00|
!|Query|!-select SPLIT_AMOUNT from [SPLIT_CATEGORIZATION] where SPLIT_AMOUNT = -5.45 and USER_TRANSACTION_JOIN_ID = -!@userTransactionJoinID200|
| SPLIT_AMOUNT?|
|-5.45|

'''4.1.2.11 POST TRANSACTIONS (Split a negative transaction amount with negative split amount, lower than transaction amount)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "categoryId": "101", 
    "amount": "-300.45"
}-!|
|POST|/transactions/%splitID200%/split|400|||
|let|$errMsg|js|response.jsonbody.developerMessage||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200302 - Split amount must be less than original split amount.-!|true|

'''4.1.2.12 POST TRANSACTIONS (Different user splitID)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUserToken%-!|
|setBody|!-{
    "categoryId": "101", 
    "amount": "5.45"
}-!|
|POST|/transactions/%splitID%/split|400|||
|let|$errMsg|js|response.jsonbody.developerMessage||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200201 - Transaction does not belong to user.-!|true|

'''4.1.2.13 POST TRANSACTIONS (Split an offline transaction)'''

!|Query|!-SELECT USER_TRANSACTION_JOIN_ID as ID FROM [SPLIT_CATEGORIZATION] where [ID]= -!@offlineTrSplitID3|
|ID?|
|>>id|

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "categoryId": "1", 
    "amount": "45.45"
}-!|
|POST|/transactions/%offlineTrSplitID3%/split|200|||
|let||js|response.jsonbody|||

!|Query|!-select ID from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID = -!@id|
|ID?|
|>>offSplitID1|
|>>offSplitID2|
!|Query|!-select SPLIT_AMOUNT from [SPLIT_CATEGORIZATION] where SPLIT_AMOUNT = 45.45 and USER_TRANSACTION_JOIN_ID = -!@id|
| SPLIT_AMOUNT?|
|45.45|
!|Query|!-select SPLIT_AMOUNT from [SPLIT_CATEGORIZATION] where SPLIT_AMOUNT = 55.01 and USER_TRANSACTION_JOIN_ID = -!@id|
| SPLIT_AMOUNT?|
|55.01|

****!
!*****> '''4.1.3 POST TRANSACTIONS (/transactions//{txnid}/categorize/{newCategoryId})'''
'''4.1.3.1 POST TRANSACTIONS (incorrect splitID)'''

!define newCategoryID {104}

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody||
|POST|/%trID%/categorize/${newCategoryID}|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200001 - Argument splitId is invalid.-!|true|

'''4.1.3.2 POST TRANSACTIONS (update to newCategory)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody||
|POST|/%splitID%/categorize/${newCategoryID}|200|||
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.accountId-!|%userAccJoinID1%|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.id-!|%splitID%|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.amount.Money.currencyCode-!|!-USD-!|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.amount.Money.precision-!|!-2-!|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.amount.Money.value-!|9.5|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.totalTxnAmount.Money.currencyCode-!|!-USD-!|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.totalTxnAmount.Money.precision-!|!-2-!|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.totalTxnAmount.Money.value-!|20.45|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.memo-!|!-null-!|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.name-!|!-FitTestTransaction-!|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.originalName-!|!-FitTestTransaction-!|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.offline-!||
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.pending-!|!-false-!|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.postDate.Date.year-!|!-2013-!|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.postDate.Date.month-!|%todayMonth1%|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.postDate.Date.day-!|%todayDay%|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.postDate.Date.displayValue-!||
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.postingSeq-!|!-null-!|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.type-!|0.0|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.transactionId-!|%trID%|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.categoryName-!|!-Entertainment-!|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.categoryId-!|${newCategoryID}|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.accountName-!||
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.hidden-!|false|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.excluded-!|false|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.checkNumber-!||
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.depositNumber-!||
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.imageId-!||
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.isSplit-!|true|
|let||js|!-response.jsonbody.TransactionRuleResult.transaction.Transaction.isOffline-!|false|
|let||js|!-response.jsonbody.TransactionRuleResult.ruleId-!||
|let||js|!-response.jsonbody.TransactionRuleResult.count-!||

'''4.1.3.3 POST TRANSACTIONS (re-update to newCategory)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody||
|POST|/%splitID%/categorize/${newCategoryID}|200|||

'''4.1.3.4 POST TRANSACTIONS (non-existing CategoryID)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody||
|POST|/%splitID%/categorize/12345|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 30064 - Category is not valid for user-!|true|
****!
!*****> '''4.1.4 POST TRANSACTIONS (/transactions/{txnid}/splits)'''

'''4.1.4.1 All fields are null'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "SplitCategorization":
        {
            "categoryId": null,
             "id": null,
             "splitAmount":null
            
        }
    
    }
]-!|
|POST|/transactions/%splitID2%/splits|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-Argument splits-categoryId[0] is undefined but is required.-!|true|

'''4.1.4.2 id and splitAmount set to null'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "SplitCategorization":
        {
            "categoryId": 1,
             "id": null,
             "splitAmount":null
            
        }
    
    }
]-!|
|POST|/transactions/%splitID2%/splits|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-200002 - Argument splits-splitAmount[0] is undefined but is required-!|true|

'''4.1.4.3 one split'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": 200.46 } }
            
        }
    
    }
]
-!|
|POST|/transactions/%splitID2%/splits|204|||

'''4.1.4.4 non-existent splitID'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": 200.46 } }
            
        }
    
    }
]
-!|
|POST|/transactions/98789798798798/splits|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-Argument transactionSplitId is invalid.-!|true|

'''4.1.4.4 two splits, total split amounts are not same as total transaction amount'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": 45.23 } }
            
        }
    
    },
    {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": 12.48 } }
            
        }
    
    }
]-!|
|POST|/transactions/%splitID2%/splits|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-Splits must equal total transaction amount-!|true|

'''4.1.4.5 two splits'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": 100.00} }
            
        }
    
    },
    {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": 100.46} }
            
        }
    
    }
]-!|
|POST|/transactions/%splitID2%/splits|204|||

!|Query|!-select SPLIT_AMOUNT from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID =-!@userTransactionJoinID2|
|SPLIT_AMOUNT ?|
|100.00|
|100.46|


'''4.1.4.6 re-split to multiple splits'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": 12.02} }
            
        }
    
    },
  {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": 0.53 } }
            
        }
    
    },
  {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": 0.50 } }
            
        }
    
    },
  {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": 17.00 } }
            
        }
    
    },
  {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": 100.46} }
            
        }
    
    },
  {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": 69.95} }
            
        }
    
    }
]-!|
|POST|/transactions/%splitID2%/splits|204|||

!|Query|!-select SPLIT_AMOUNT from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID =-!@userTransactionJoinID2|
|SPLIT_AMOUNT ?|
|12.02|
|0.53|
|0.50|
|17.00|
|100.46|
|69.95|

'''4.1.4.7 re-split to single split'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": 200.46} }
            
        }
    
    }
]-!|
|POST|/transactions/%splitID2%/splits|204|||

!|Query|!-select SPLIT_AMOUNT from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID =-!@userTransactionJoinID2|
|SPLIT_AMOUNT ?|
|200.46|

'''4.1.4.8 transaction amount positive, split amount is negative'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": 200.46} }
            
        }
    
    },
  {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": -0.53 } }
            
        }
    
    },
  {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": 0.53 } }
            
        }
    
    }
]-!|
|POST|/transactions/%splitID2%/splits|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-Transaction amount is positive - split must be positive (greater than zero.)-!|true|

'''4.1.4.9 transaction amount negative, split amount is negative'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": -12.02} }
            
        }
    
    },
  {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": -0.53 } }
            
        }
    
    },
  {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": -0.50 } }
            
        }
    
    },
  {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": -17.00 } }
            
        }
    
    },
  {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": -100.46} }
            
        }
    
    },
  {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": -69.95} }
            
        }
    
    }
]-!|
|POST|/transactions/%splitID9%/splits|204|||

!|Query|!-select SPLIT_AMOUNT from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID =-!@userTransactionJoinID9|
|SPLIT_AMOUNT ?|
|-12.02|
|-0.53|
|-0.50|
|-17.00|
|-100.46|
|-69.95|

'''4.1.4.10 transaction amount negative, split amount is positive'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": -200.46} }
            
        }
    
    },
  {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": -0.53 } }
            
        }
    
    },
  {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": 0.53 } }
            
        }
    
    }
]-!|
|POST|/transactions/%splitID9%/splits|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-Transaction amount is negative - split must be negative (less than zero.)-!|true|

'''4.1.4.11 transaction amount negative, split amount is negative'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "SplitCategorization":
        {
            "categoryId": 1,
             "splitAmount": 
                  { "Money": { "currencyCode": "USD", 
                               "precision": 2, "value": -200.46} }
            
        }
    
    }
]-!|
|POST|/transactions/%splitID9%/splits|204|||

!|Query|!-select SPLIT_AMOUNT from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID =-!@userTransactionJoinID9|
|SPLIT_AMOUNT ?|
|-200.46|
****!
!*****> '''4.1.5 POST TRANSACTIONS (/transactions//rules/{ruleId}/listcategory)'''

'''4.1.5.1 non-existent ruleId'''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "Transaction": {
            "transactionId": -!%trID1%!-
        }
    }
]
-!|
|POST|/transactions/rules/98745/listcategory|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-Argument ruleId is invalid.-!|true|

'''4.1.5.2 transactionId set to null'''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "Transaction": {
            "transactionId": null
        }
    }
]
-!|
|POST|/transactions/rules/${newCategoryID}/listcategory|400|||


'''4.1.5.3 re-categorize multiple tnx'''

!|Query|!-select TOP 1 ID from [CATEGORIZATION_RULE] where RULE_SUBCLASS = 'USER' and CATEGORY_ID =-!${newCategoryID}|
|ID?|
|>>ruleID|

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "Transaction": {
            "transactionId": -!%trID2%!-
        }
    },
    {
        "Transaction": {
            "transactionId": -!%trID3%!-
        }
    },
    {
        "Transaction": {
            "transactionId": -!%trID4%!-
        }
    },
    {
        "Transaction": {
            "transactionId": -!%offlineTrID4%!-
        }
    }
]
-!|
|POST|/transactions/rules/%ruleID%/listcategory|204|||

!|Query|!-select CATEGORY_ID from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID = -!@userTransactionJoinID2|
|CATEGORY_ID?|
|104|

!|Query|!-select CATEGORY_ID from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID = -!@userTransactionJoinID3|
|CATEGORY_ID?|
|104|

!|Query|!-select CATEGORY_ID from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID = -!@userTransactionJoinID4|
|CATEGORY_ID?|
|104|

!|Query|!-select CATEGORY_ID from [SPLIT_CATEGORIZATION] where ID = -!@offlineTrSplitID4|
|CATEGORY_ID?|
|104|

'''4.1.5.4 exclude account'''

!|Execute|!-update [USER_ACCOUNT_JOIN] set EXCLUDED = 1 where ACCOUNT_ID =-!@account1|

!|DatabaseEnvironment|
|commit|

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "Transaction": {
            "transactionId": -!%trID5%!-
        }
    }
]
-!|
|POST|/transactions/rules/%ruleID%/listcategory|204|||

!|Execute|!-update [USER_ACCOUNT_JOIN] set EXCLUDED = 0 where ACCOUNT_ID =-!@account1|

!|DatabaseEnvironment|
|commit|

'''4.1.5.5 hidden account''''

!|Execute|!-update [USER_ACCOUNT_JOIN] set HIDDEN= 1 where ACCOUNT_ID =-!@account1|

!|DatabaseEnvironment|
|commit|

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "Transaction": {
            "transactionId": -!%trID5%!-
        }
    }
]
-!|
|POST|/transactions/rules/%ruleID%/listcategory|204|||

!|Execute|!-update [USER_ACCOUNT_JOIN] set HIDDEN= 0 where ACCOUNT_ID =-!@account1|

!|DatabaseEnvironment|
|commit|

'''4.1.5.6 transaction with splits'''

!|Query|!-select CATEGORY_ID from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID =-!@userTransactionJoinID200|
|CATEGORY_ID?|
|>>CATEGORY_ID1|
|>>CATEGORY_ID2|

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "Transaction": {
            "transactionId": -!%trID%!-
        }
    }
]
-!|
|POST|/transactions/rules/%ruleID%/listcategory|400|||

!|Query|!-select CATEGORY_ID from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID =-!@userTransactionJoinID200|
|CATEGORY_ID?|
|<<CATEGORY_ID1|
|<<CATEGORY_ID2|

****!
!*****> '''4.1.6 POST TRANSACTIONS (/transactions//rules/{ruleId}/listrenaming)'''

!|Execute|!-insert into RENAMING_RULE (
	   USER_ID,
	   COMPANY_ID,
	   RULE_NAME,
	   OLD_DESCRIPTION,
	   NEW_DESCRIPTION,
	   GENERATED,
	   SELECT_COUNT,
	   MATCH_COUNT,
	   CREATED_DATE,
	   RULE_SUBCLASS, 
	   AMOUNT, 
	   MERCHANT_CATEGORY_CODE,
	   DAY_OF_MONTH)
   values (NULL,NULL,'FITTEST-1','FITNESSE.*TEST.*', 'FITNESSE SYSTEM TEST',0,0,0,SYSDATETIME(),'SYSTEM', '777.00',null, '20')
   insert into RENAMING_RULE (
	   USER_ID,
	   COMPANY_ID,
	   RULE_NAME,
	   OLD_DESCRIPTION,
	   NEW_DESCRIPTION,
	   GENERATED,
	   SELECT_COUNT,
	   MATCH_COUNT,
	   CREATED_DATE,
	   RULE_SUBCLASS, 
	   AMOUNT, 
	   MERCHANT_CATEGORY_CODE,
	   DAY_OF_MONTH)
   values (-!@userID2!-,NULL,'FITTEST-2','FITNESSE.*TEST.*', 'FITNESSE USER TEST',0,0,0,SYSDATETIME(),'USER', '777.00',null, '20')-!|

!|DatabaseEnvironment|
|commit|

!|Query|!-select ID from [RENAMING_RULE] where RULE_NAME = 'FITTEST-1'-!|
|[ID]?|
|>>renameRuleId1|

!|Query|!-select ID from [RENAMING_RULE] where RULE_NAME = 'FITTEST-2'-!|
|[ID]?|
|>>renameRuleId2|

'''4.1.6.1 non-existent ruleId'''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "Transaction": {
            "transactionId": -!%trID1%!-
        }
    }
]
-!|
|POST|/transactions/rules/98745/listrenaming|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-Argument ruleId is invalid.-!|true|

'''4.1.6.2 transactionId set to null'''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "Transaction": {
            "transactionId": null
        }
    }
]
-!|
|POST|/transactions/rules/%renameRuleId1%/listrenaming|400|||

'''4.1.6.3 re-categorize multiple tnx - system ruleID'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "Transaction": {
            "transactionId": -!%trID2%!-
        }
    },
    {
        "Transaction": {
            "transactionId": -!%trID3%!-
        }
    },
    {
        "Transaction": {
            "transactionId": -!%trID4%!-
        }
    },
    {
        "Transaction": {
            "transactionId": -!%offlineTrID4%!-
        }
    }
]
-!|
|POST|/transactions/rules/%renameRuleId1%/listrenaming|204|||

!|Query|!-select RENAMED from [USER_TRANSACTION_JOIN] where TRANSACTION_ID = -!@trID2|
|RENAMED?|
|FITNESSE SYSTEM TEST|

!|Query|!-select RENAMED from [USER_TRANSACTION_JOIN] where TRANSACTION_ID = -!@trID3|
|RENAMED?|
|FITNESSE SYSTEM TEST|

!|Query|!-select RENAMED from [USER_TRANSACTION_JOIN] where TRANSACTION_ID = -!@trID4|
|RENAMED?|
|FITNESSE SYSTEM TEST|

!|Query|!-select RENAMED from [USER_TRANSACTION_JOIN] where TRANSACTION_ID = -!@offlineTrID4|
|RENAMED?|
|FITNESSE SYSTEM TEST|

'''4.1.6.4 re-categorize multiple tnx - user ruleID'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "Transaction": {
            "transactionId": -!%trID2%!-
        }
    },
    {
        "Transaction": {
            "transactionId": -!%trID3%!-
        }
    },
    {
        "Transaction": {
            "transactionId": -!%trID4%!-
        }
    },
    {
        "Transaction": {
            "transactionId": -!%offlineTrID4%!-
        }
    }
]
-!|
|POST|/transactions/rules/%renameRuleId2%/listrenaming|204|||

!|Query|!-select RENAMED from [USER_TRANSACTION_JOIN] where TRANSACTION_ID = -!@trID2|
|RENAMED?|
|FITNESSE USER TEST|

!|Query|!-select RENAMED from [USER_TRANSACTION_JOIN] where TRANSACTION_ID = -!@trID3|
|RENAMED?|
|FITNESSE USER TEST|

!|Query|!-select RENAMED from [USER_TRANSACTION_JOIN] where TRANSACTION_ID = -!@trID4|
|RENAMED?|
|FITNESSE USER TEST|

!|Query|!-select RENAMED from [USER_TRANSACTION_JOIN] where TRANSACTION_ID = -!@offlineTrID4|
|RENAMED?|
|FITNESSE USER TEST|

'''4.1.6.5 exclude account'''

!|Execute|!-update [USER_ACCOUNT_JOIN] set EXCLUDED = 1 where ACCOUNT_ID =-!@account1|

!|DatabaseEnvironment|
|commit|

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "Transaction": {
            "transactionId": -!%trID5%!-
        }
    }
]
-!|
|POST|/transactions/rules/%renameRuleId1%/listrenaming|204|||

!|Execute|!-update [USER_ACCOUNT_JOIN] set EXCLUDED = 0 where ACCOUNT_ID =-!@account1|

!|DatabaseEnvironment|
|commit|

'''4.1.6.6 hidden account''''

!|Execute|!-update [USER_ACCOUNT_JOIN] set HIDDEN= 1 where ACCOUNT_ID =-!@account1|

!|DatabaseEnvironment|
|commit|

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "Transaction": {
            "transactionId": -!%trID5%!-
        }
    }
]
-!|
|POST|/transactions/rules/%renameRuleId1%/listrenaming|204|||

!|Execute|!-update [USER_ACCOUNT_JOIN] set HIDDEN= 0 where ACCOUNT_ID =-!@account1|

!|DatabaseEnvironment|
|commit|

'''4.1.6.7 transaction with splits'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-[
    {
        "Transaction": {
            "transactionId": -!%trID%!-
        }
    }
]
-!|
|POST|/transactions/rules/%renameRuleId2%/listrenaming|204|||

!|Query|!-select RENAMED from [USER_TRANSACTION_JOIN] where TRANSACTION_ID = -!@trID|
|RENAMED?|
|FITNESSE USER TEST|
****!
****!
!*****> '''4.2 PUT TRANSACTIONS'''
!*****> '''4.2.1 PUT TRANSACTIONS (/transactions/{transactionId})'''
!*****> '''INTERNAL TRANSACTION'''
'''4.2.1.1 PUT TRANSACTIONS (transactionID, not splitID)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": 0, 
        "id": 0, 
        "amount": null, 
        "memo": null, 
        "name": null, 
        "originalName": null, 
        "offline": null, 
        "pending": null, 
        "postDate": null, 
        "postingSeq": null, 
        "type": 0, 
        "transactionId": 0, 
        "categoryName": null, 
        "categoryId": null, 
        "accountName": null, 
        "hidden": null, 
        "excluded": null
    }
}-!|
|PUT|/%trID%|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200001 - Argument transactionSplit-Id is invalid.-!|true|

'''4.2.1.2 PUT TRANSACTIONS (update name and memo)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": 3682, 
        "id": null, 
        "amount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 34.34
            }
        }, 
        "memo": "This is update test memo", 
        "name": "UpdatedFitTestTransaction", 
        "originalName": "Update OFitTestTransaction", 
        "offline": null, 
        "pending": true, 
        "postDate": {
            "Date": {
                "year": 2012, 
                "month": 12, 
                "day": 12, 
                "displayValue": "12/12/2012"
            }
        }, 
        "postingSeq": 20, 
        "type": 1, 
        "transactionId": null, 
        "categoryName": "Business", 
        "categoryId": 104, 
        "accountName": "Updated Account Name", 
        "hidden": true, 
        "excluded": true
    }
}-!|
|PUT|/%splitID%|200|||
|let||js|!-response.jsonbody.Transaction.accountId-!|%userAccJoinID1%|
|let||js|!-response.jsonbody.Transaction.id-!|%splitID%|
|let||js|!-response.jsonbody.Transaction.amount.Money.currencyCode-!|USD|
|let||js|!-response.jsonbody.Transaction.amount.Money.precision-!|2|
|let||js|!-response.jsonbody.Transaction.amount.Money.value-!||
|let||js|!-response.jsonbody.Transaction.memo-!|This is update test memo|
|let||js|!-response.jsonbody.Transaction.name-!|!-UpdatedFitTestTransaction-!|
|let||js|!-response.jsonbody.Transaction.originalName-!|!-FitTestTransaction-!|
|let||js|!-response.jsonbody.Transaction.offline-!||
|let||js|!-response.jsonbody.Transaction.pending-!||
|let||js|!-response.jsonbody.Transaction.postDate.Date.year-!|%todayYear%|
|let||js|!-response.jsonbody.Transaction.postDate.Date.month-!|%todayMonth1%|
|let||js|!-response.jsonbody.Transaction.postDate.Date.day-!|%todayDay%|
|let||js|!-response.jsonbody.Transaction.postDate.Date.displayValue-!||
|let||js|!-response.jsonbody.Transaction.postingSeq-!|null|
|let||js|!-response.jsonbody.Transaction.transactionId-!|%trID%|
|let||js|!-response.jsonbody.Transaction.type-!|0.0|
|let||js|!-response.jsonbody.Transaction.categoryName-!|Entertainment|
|let||js|!-response.jsonbody.Transaction.categoryId-!|104|
|let||js|!-response.jsonbody.Transaction.accountName-!||
|let||js|!-response.jsonbody.Transaction.hidden-!|false|
|let||js|!-response.jsonbody.Transaction.excluded-!|false|


'''4.2.1.3 PUT TRANSACTIONS (amount is missing)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": 3682, 
        "id": -!%splitID%!-, 
        "memo": "This is update test memo", 
        "name": "UpdatedFitTestTransaction", 
        "originalName": "Update OFitTestTransaction", 
        "offline": null, 
        "pending": true, 
        "postDate": {
            "Date": {
                "year": 2012, 
                "month": 12, 
                "day": 12, 
                "displayValue": "12/12/2012"
            }
        }, 
        "postingSeq": 20, 
        "type": 1, 
        "transactionId": null, 
        "categoryName": "Business", 
        "categoryId": 104, 
        "accountName": "Updated Account Name", 
        "hidden": true, 
        "excluded": true
    }
}-!|
|PUT|/%splitID%|200|||
#|let||js|response.jsonbody.message|!--!|

'''4.2.1.4 PUT TRANSACTIONS (postDate is missing)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": 3682, 
        "id": -!%splitID%!-, 
        "amount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 34.34
            }
        }, 
        "memo": "This is update test memo", 
        "name": "UpdatedFitTestTransaction", 
        "originalName": "Update OFitTestTransaction", 
        "offline": null, 
        "pending": true, 
        "postingSeq": 20, 
        "type": 1, 
        "transactionId": null, 
        "categoryName": "Business", 
        "categoryId": 104, 
        "accountName": "Updated Account Name", 
        "hidden": true, 
        "excluded": true
    }
}-!|
|PUT|/%splitID%|200|||
#|let||js|response.jsonbody.message|!--!|

'''4.2.1.5 PUT TRANSACTIONS (type is missing)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": 3682, 
        "id": -!%splitID%!-, 
        "amount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 34.34
            }
        }, 
        "memo": "This is update test memo", 
        "name": "UpdatedFitTestTransaction", 
        "originalName": "Update OFitTestTransaction", 
        "offline": null, 
        "pending": true, 
        "postDate": {
            "Date": {
                "year": 2012, 
                "month": 12, 
                "day": 12, 
                "displayValue": "12/12/2012"
            }
        }, 
        "postingSeq": 20,  
        "transactionId": null, 
        "categoryName": "Business", 
        "categoryId": 104, 
        "accountName": "Updated Account Name", 
        "hidden": true, 
        "excluded": true
    }
}-!|
|PUT|/%splitID%|200|||
#|let||js|response.jsonbody.message|!--!|

'''4.2.1.6 PUT TRANSACTIONS (categoryID is missing)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": 3682, 
        "id": -!%splitID%!-, 
        "amount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 34.34
            }
        }, 
        "memo": "This is update test memo", 
        "name": "UpdatedFitTestTransaction", 
        "originalName": "Update OFitTestTransaction", 
        "offline": null, 
        "pending": true, 
        "postDate": {
            "Date": {
                "year": 2012, 
                "month": 12, 
                "day": 12, 
                "displayValue": "12/12/2012"
            }
        }, 
        "postingSeq": 20, 
        "type": 1, 
        "transactionId": null, 
        "categoryName": "Business", 
        "categoryId": null, 
        "accountName": "Updated Account Name", 
        "hidden": true, 
        "excluded": true
    }
}-!|
|PUT|/%splitID%|200|||
#|let||js|response.jsonbody.message|!--!|

'''4.2.1.7 PUT TRANSACTIONS (update name and memo to null)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": 3682, 
        "id": -!%splitID%!-, 
        "amount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 34.34
            }
        }, 
        "memo": null, 
        "name": null, 
        "originalName": "Update OFitTestTransaction", 
        "offline": null, 
        "pending": true, 
        "postDate": {
            "Date": {
                "year": 2012, 
                "month": 12, 
                "day": 12, 
                "displayValue": "12/12/2012"
            }
        }, 
        "postingSeq": 20, 
        "type": 1, 
        "transactionId": null, 
        "categoryName": "Business", 
        "categoryId": 104, 
        "accountName": "Updated Account Name", 
        "hidden": true, 
        "excluded": true
    }
}-!|
|PUT|/%splitID%|200|||
|let||js|!-response.jsonbody.Transaction.accountId-!|%userAccJoinID1%|
|let||js|!-response.jsonbody.Transaction.id-!|%splitID%|
|let||js|!-response.jsonbody.Transaction.amount.Money.currencyCode-!|USD|
|let||js|!-response.jsonbody.Transaction.amount.Money.precision-!|2|
|let||js|!-response.jsonbody.Transaction.amount.Money.value-!||
|let||js|!-response.jsonbody.Transaction.memo-!|null|
|let||js|!-response.jsonbody.Transaction.name-!|!-FitTestTransaction -!|
|let||js|!-response.jsonbody.Transaction.originalName-!|!-FitTestTransaction-!|
|let||js|!-response.jsonbody.Transaction.offline-!||
|let||js|!-response.jsonbody.Transaction.pending-!||
|let||js|!-response.jsonbody.Transaction.postDate.Date.year-!|%todayYear%|
|let||js|!-response.jsonbody.Transaction.postDate.Date.month-!|%todayMonth1%|
|let||js|!-response.jsonbody.Transaction.postDate.Date.day-!|%todayDay%|
|let||js|!-response.jsonbody.Transaction.postDate.Date.displayValue-!||
|let||js|!-response.jsonbody.Transaction.postingSeq-!|null|
|let||js|!-response.jsonbody.Transaction.transactionId-!|%trID%|
|let||js|!-response.jsonbody.Transaction.type-!|0.0|
|let||js|!-response.jsonbody.Transaction.categoryName-!|Entertainment|
|let||js|!-response.jsonbody.Transaction.categoryId-!|104|
|let||js|!-response.jsonbody.Transaction.accountName-!||
|let||js|!-response.jsonbody.Transaction.hidden-!|false|
|let||js|!-response.jsonbody.Transaction.excluded-!|false|
****!
!*****> '''OFFLINE TRANSACTION'''

'''4.2.1.1 PUT TRANSACTIONS (update name and memo)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": 3682, 
        "id": -!%offlineTrSplitID1%!-, 
        "amount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 34.34
            }
        }, 
        "memo": "This is update test memo", 
        "name": "UpdatedFitTestTransaction", 
        "originalName": "Update OFitTestTransaction", 
        "offline": null, 
        "pending": true, 
        "postDate": {
            "Date": {
                "year": 2012, 
                "month": 12, 
                "day": 12, 
                "displayValue": "12/12/2012"
            }
        }, 
        "postingSeq": 20, 
        "type": 1, 
        "transactionId": null, 
        "categoryName": "Business", 
        "categoryId": 104, 
        "accountName": "Updated Account Name", 
        "hidden": true, 
        "excluded": true
    }
}-!|
|PUT|/%offlineTrSplitID1%|200|||
|let||js|!-response.jsonbody.Transaction.accountId-!|%userAccJoinID2%|
|let||js|!-response.jsonbody.Transaction.id-!|%offlineTrSplitID1%|
|let||js|!-response.jsonbody.Transaction.amount.Money.currencyCode-!|USD|
|let||js|!-response.jsonbody.Transaction.amount.Money.precision-!|2|
|let||js|!-response.jsonbody.Transaction.amount.Money.value-!|34.34|
|let||js|!-response.jsonbody.Transaction.memo-!|This is update test memo|
|let||js|!-response.jsonbody.Transaction.name-!|!-UpdatedFitTestTransaction-!|
|let||js|!-response.jsonbody.Transaction.originalName-!|!-Update OFitTestTransaction-!|
|let||js|!-response.jsonbody.Transaction.offline-!||
|let||js|!-response.jsonbody.Transaction.pending-!|true|
|let||js|!-response.jsonbody.Transaction.postDate.Date.year-!|2012|
|let||js|!-response.jsonbody.Transaction.postDate.Date.month-!|12|
|let||js|!-response.jsonbody.Transaction.postDate.Date.day-!|12|
|let||js|!-response.jsonbody.Transaction.postDate.Date.displayValue-!|12/12/2012|
|let||js|!-response.jsonbody.Transaction.postingSeq-!|20|
|let||js|!-response.jsonbody.Transaction.transactionId-!|%offlineTrID1%|
|let||js|!-response.jsonbody.Transaction.type-!|1.0|
|let||js|!-response.jsonbody.Transaction.categoryName-!|Entertainment|
|let||js|!-response.jsonbody.Transaction.categoryId-!|104|
|let||js|!-response.jsonbody.Transaction.accountName-!||
|let||js|!-response.jsonbody.Transaction.hidden-!|false|
|let||js|!-response.jsonbody.Transaction.excluded-!|false|


'''4.2.1.2 PUT TRANSACTIONS (amount is missing)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": 3682, 
        "id": -!%offlineTrSplitID1%!-, 
        "memo": "This is update test memo", 
        "name": "UpdatedFitTestTransaction", 
        "originalName": "Update OFitTestTransaction", 
        "offline": null, 
        "pending": true, 
        "postDate": {
            "Date": {
                "year": 2012, 
                "month": 12, 
                "day": 12, 
                "displayValue": "12/12/2012"
            }
        }, 
        "postingSeq": 20, 
        "type": 1, 
        "transactionId": null, 
        "categoryName": "Business", 
        "categoryId": 104, 
        "accountName": "Updated Account Name", 
        "hidden": true, 
        "excluded": true
    }
}-!|
|PUT|/%offlineTrSplitID1%|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200002 - Argument transactionSplit-Amount is undefined but is required.-!|true|

'''4.2.1.3 PUT TRANSACTIONS (postDate is missing)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": 3682, 
        "id": -!%offlineTrSplitID1%!-, 
        "amount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 34.34
            }
        }, 
        "memo": "This is update test memo", 
        "name": "UpdatedFitTestTransaction", 
        "originalName": "Update OFitTestTransaction", 
        "offline": null, 
        "pending": true, 
        "postingSeq": 20, 
        "type": 1, 
        "transactionId": null, 
        "categoryName": "Business", 
        "categoryId": 104, 
        "accountName": "Updated Account Name", 
        "hidden": true, 
        "excluded": true
    }
}-!|
|PUT|/%offlineTrSplitID1%|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200002 - Argument transactionSplit-PostDate is undefined but is required.-!|true|

'''4.2.1.4 PUT TRANSACTIONS (type is missing)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": 3682, 
        "id": -!%offlineTrSplitID1%!-, 
        "amount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 34.34
            }
        }, 
        "memo": "This is update test memo", 
        "name": "UpdatedFitTestTransaction", 
        "originalName": "Update OFitTestTransaction", 
        "offline": null, 
        "pending": true, 
        "postDate": {
            "Date": {
                "year": 2012, 
                "month": 12, 
                "day": 12, 
                "displayValue": "12/12/2012"
            }
        }, 
        "postingSeq": 20,  
        "transactionId": null, 
        "categoryName": "Business", 
        "categoryId": 104, 
        "accountName": "Updated Account Name", 
        "hidden": true, 
        "excluded": true
    }
}-!|
|PUT|/%offlineTrSplitID1%|200|||
|let||js|!-response.jsonbody.Transaction.type-!|0.0|

'''4.2.1.5 PUT TRANSACTIONS (categoryID is null)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": 3682, 
        "id": -!%offlineTrSplitID1%!-, 
        "amount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 34.34
            }
        }, 
        "memo": "This is update test memo", 
        "name": "UpdatedFitTestTransaction", 
        "originalName": "Update OFitTestTransaction", 
        "offline": null, 
        "pending": true, 
        "postDate": {
            "Date": {
                "year": 2012, 
                "month": 12, 
                "day": 12, 
                "displayValue": "12/12/2012"
            }
        }, 
        "postingSeq": 20, 
        "type": 1, 
        "transactionId": null, 
        "categoryName": "Business", 
"categoryId": null, 
        "accountName": "Updated Account Name", 
        "hidden": true, 
        "excluded": true
    }
}-!|
|PUT|/%offlineTrSplitID1%|200|||
|let||js|!-response.jsonbody.Transaction.categoryName-!|Uncategorized Expense|
|let||js|!-response.jsonbody.Transaction.categoryId-!|100|

'''4.2.1.6 PUT TRANSACTIONS (update name and memo to null)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": 3682, 
        "id": -!%offlineTrSplitID1%!-, 
        "amount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 34.34
            }
        }, 
        "memo": null, 
        "name": null, 
        "originalName": "Update OFitTestTransaction", 
        "offline": 45, 
        "pending": true, 
        "postDate": {
            "Date": {
                "year": 2012, 
                "month": 12, 
                "day": 12, 
                "displayValue": "12/12/2012"
            }
        }, 
        "postingSeq": 20, 
        "type": 1, 
        "transactionId": null, 
        "categoryName": "Business", 
        "categoryId": 104, 
        "accountName": "Updated Account Name", 
        "hidden": true, 
        "excluded": true
    }
}-!|
|PUT|/%offlineTrSplitID1%|200|||
|let||js|!-response.jsonbody.Transaction.accountId-!|%userAccJoinID2%|
|let||js|!-response.jsonbody.Transaction.id-!|%offlineTrSplitID1%|
|let||js|!-response.jsonbody.Transaction.amount.Money.currencyCode-!|USD|
|let||js|!-response.jsonbody.Transaction.amount.Money.precision-!|2|
|let||js|!-response.jsonbody.Transaction.amount.Money.value-!|34.34|
|let||js|!-response.jsonbody.Transaction.memo-!|null|
|let||js|!-response.jsonbody.Transaction.name-!|!-Update OFitTestTransaction-!|
|let||js|!-response.jsonbody.Transaction.originalName-!|!-Update OFitTestTransaction-!|
|let||js|!-response.jsonbody.Transaction.offline-!||
|let||js|!-response.jsonbody.Transaction.pending-!|true|
|let||js|!-response.jsonbody.Transaction.postDate.Date.year-!|2012|
|let||js|!-response.jsonbody.Transaction.postDate.Date.month-!|12|
|let||js|!-response.jsonbody.Transaction.postDate.Date.day-!|12|
|let||js|!-response.jsonbody.Transaction.postDate.Date.displayValue-!|12/12/2012|
|let||js|!-response.jsonbody.Transaction.postingSeq-!|20|
|let||js|!-response.jsonbody.Transaction.transactionId-!|%offlineTrID1%|
|let||js|!-response.jsonbody.Transaction.type-!|1.0|
|let||js|!-response.jsonbody.Transaction.categoryName-!|Entertainment|
|let||js|!-response.jsonbody.Transaction.categoryId-!|104|
|let||js|!-response.jsonbody.Transaction.accountName-!||
|let||js|!-response.jsonbody.Transaction.hidden-!|false|
|let||js|!-response.jsonbody.Transaction.excluded-!|false|

'''4.2.1.7 PUT TRANSACTIONS (update all to null)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest/transactions|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "Transaction": {
        "accountId": 3682, 
        "id": -!%offlineTrSplitID1%!-, 
        "amount": null,
        "memo": null, 
        "name": null, 
        "originalName": null, 
        "offline": 45, 
        "pending": null, 
        "postDate":null,
        "postingSeq": null, 
        "type": null, 
        "transactionId": null, 
        "categoryName": "Business", 
        "categoryId": null, 
        "accountName": null, 
        "hidden": null, 
        "excluded": null
    }
}-!|
|PUT|/%offlineTrSplitID1%|400|||
|let|$errMsg|js|!-response.jsonbody.message-!||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200002 - Argument transactionSplit-Amount is undefined but is required.-!|true|
****!
****!
!*****> '''4.2.2 PUT TRANSACTIONS (/transactions/search)'''


!*****> '''4.2.2.1 SEARCHABLE TRANSACTIONS (pageRange, dateRange=null values) '''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "TransactionSelectionCriteria": {
        "pageRange": {
            "PageRange": {
                "pageIndex": 0, 
                "pageSize": 15
            }
        }, 
        "dateRange": {
            "DateRange": {
                "startDate": {
                    "Date": {
                        "year": null, 
                        "month": null, 
                        "day": null
                    }
                }, 
                "endDate": {
                    "Date": {
                        "year": null, 
                        "month": null, 
                        "day": null
                    }
                }
            }
        }
    }
}-!|
|PUT|/transactions/search|400|||
|let|$errMsg|js|!-response.jsonbody.message-!||
|setBody|!-{
    "TransactionSelectionCriteria": {
        "pageRange": {
            "PageRange": {
                "pageIndex": 0, 
                "pageSize": 15
            }
        }, 
        "dateRange": {
            "DateRange": {
                "startDate": {
                    "Date": {
                        "year": 2010, 
                        "month": 10, 
                        "day": 10
                    }
                }, 
                "endDate": {
                    "Date": {
                        "year": null, 
                        "month": null, 
                        "day": null
                    }
                }
            }
        }
    }
}-!|
|PUT|/transactions/search|200|||
|let||js|!-response.body-!|[]|

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 300003 - Argument pageRange is ill-formed.-!|true|

****!
!*****> '''4.2.2.2 SEARCHABLE TRANSACTIONS (pageRange, dateRange, sortOrder) '''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "TransactionSelectionCriteria": {
        "pageRange": {
            "PageRange": {
                "pageIndex": 0, 
                "pageSize": 15
            }
        }, 
        "dateRange": {
            "DateRange": {
                "startDate": {
                    "Date": {
                        "year": 2011, 
                        "month": 3, 
                        "day": 1
                    }
                }, 
                "endDate": {
                    "Date": {
                        "year": -!%todayYear%!-, 
                        "month": -!%todayMonth%!-, 
                        "day": -!%todayDay%!-
                    }
                }
            }
        }, 
        "sortOrder": [
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "postDate", 
                    "isDescend": false
                }
            }, 
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "name", 
                    "isDescend": false
                }
            }
        ]
    }
}-!|
|PUT|/transactions/search|200|||
|let||js|!-response.jsonbody[0].transactionId-!||
|let||js|!-response.jsonbody[1].transactionId-!||
|let||js|!-response.jsonbody[2].transactionId-!||
|let||js|!-response.jsonbody[3].transactionId-!||
|let||js|!-response.jsonbody[4].transactionId-!||
|let||js|!-response.jsonbody[5].transactionId-!||
|let||js|!-response.jsonbody[6].transactionId-!||
|let||js|!-response.jsonbody[7].transactionId-!||
|let||js|!-response.jsonbody[8].transactionId-!||
****!
!*****> '''4.2.2.3 SEARCHABLE TRANSACTIONS (pageRange, dateRange, sortOrder, accountIDs (this user accounts)) '''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "TransactionSelectionCriteria": {
        "pageRange": {
            "PageRange": {
                "pageIndex": 1, 
                "pageSize": 5
            }
        }, 
        "dateRange": {
            "DateRange": {
                "startDate": {
                    "Date": {
                        "year": 2011, 
                        "month": 3, 
                        "day": 1
                    }
                }, 
                "endDate": {
                    "Date": {
                        "year": -!%todayYear%!-, 
                        "month": -!%todayMonth%!-, 
                        "day": -!%todayDay%!-
                    }
                }
            }
        }, 
        "sortOrder": [
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "postDate", 
                    "isDescend": false
                }
            }, 
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "name", 
                    "isDescend": true
                }
            }
        ],
        "accountIds": [
            -!%userAccJoinID1%!-
        ]
    }
}-!|
|PUT|/transactions/search|200|||
|let||js|!-response.jsonbody[0].transactionId-!||
|let||js|!-response.jsonbody[1].transactionId-!||
|let||js|!-response.jsonbody[2].transactionId-!||
|let||js|!-response.jsonbody[3].transactionId-!||
|let||js|!-response.jsonbody[4].transactionId-!||
****!
!*****> '''4.2.2.4 SEARCHABLE TRANSACTIONS (pageRange, dateRange, sortOrder, accountIDs (not this user accounts)) '''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "TransactionSelectionCriteria": {
        "pageRange": {
            "PageRange": {
                "pageIndex": 0, 
                "pageSize": 15
            }
        }, 
        "dateRange": {
            "DateRange": {
                "startDate": {
                    "Date": {
                        "year": 2011, 
                        "month": 3, 
                        "day": 1
                    }
                }, 
                "endDate": {
                    "Date": {
                        "year": -!%todayYear%!-, 
                        "month": -!%todayMonth%!-, 
                        "day": -!%todayDay%!-
                    }
                }
            }
        }, 
        "sortOrder": [
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "postDate", 
                    "isDescend": false
                }
            }, 
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "name", 
                    "isDescend": true
                }
            }
        ],
        "accountIds": [
            1, 100, 2
        ]
    }
}-!|
|PUT|/transactions/search|200|||
|let||js|!-response.body-!|[]|
****!
!*****> '''4.2.2.5 SEARCHABLE TRANSACTIONS (pageRange, dateRange, sortOrder, accountIDs, categoryCodes (have accounts belong to the category)) '''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "TransactionSelectionCriteria": {
        "pageRange": {
            "PageRange": {
                "pageIndex": 0, 
                "pageSize": 5
            }
        }, 
        "dateRange": {
            "DateRange": {
                "startDate": {
                    "Date": {
                        "year": 2011, 
                        "month": 3, 
                        "day": 1
                    }
                }, 
                "endDate": {
                    "Date": {
                        "year": -!%todayYear%!-, 
                        "month": -!%todayMonth%!-, 
                        "day": -!%todayDay%!-
                    }
                }
            }
        }, 
        "sortOrder": [
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "postDate", 
                    "isDescend": false
                }
            }, 
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "name", 
                    "isDescend": false
                }
            }
        ],
        "accountIds": [
            -!%userAccJoinID1%!-
        ],
        "categoryCodes": [
            1
        ]
    }
}-!|
|PUT|/transactions/search|200|||
|let||js|!-response.jsonbody[0].transactionId-!||
|let||js|!-response.jsonbody[1].transactionId-!||
|let||js|!-response.jsonbody[2].transactionId-!||
|let||js|!-response.jsonbody[3].transactionId-!||
|let||js|!-response.jsonbody[4].transactionId-!||
****!
!*****> '''4.2.2.6 SEARCHABLE TRANSACTIONS (pageRange, dateRange, sortOrder, accountIDs, categoryCodes (no accounts belong to the category)) '''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "TransactionSelectionCriteria": {
        "pageRange": {
            "PageRange": {
                "pageIndex": 0, 
                "pageSize": 5
            }
        }, 
        "dateRange": {
            "DateRange": {
                "startDate": {
                    "Date": {
                        "year": 2011, 
                        "month": 3, 
                        "day": 1
                    }
                }, 
                "endDate": {
                    "Date": {
                        "year": -!%todayYear%!-, 
                        "month": -!%todayMonth%!-, 
                        "day": -!%todayDay%!-
                    }
                }
            }
        }, 
        "sortOrder": [
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "postDate", 
                    "isDescend": false
                }
            }, 
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "name", 
                    "isDescend": true
                }
            }
        ],
        "accountIds": [
            -!%userAccJoinID1%!-
        ],
        "categoryCodes": [
            120, 130, 140
        ]
    }
}-!|
|PUT|/transactions/search|200|||
|let||js|!-response.body-!|[]|
****!
!*****> '''4.2.2.7 SEARCHABLE TRANSACTIONS (pageRange, dateRange, sortOrder, accountIDs, categoryCodes, keyPhrases) '''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "TransactionSelectionCriteria": {
        "pageRange": {
            "PageRange": {
                "pageIndex": 0, 
                "pageSize": 5
            }
        }, 
        "dateRange": {
            "DateRange": {
                "startDate": {
                    "Date": {
                        "year": 2010, 
                        "month": 3, 
                        "day": 1
                    }
                }, 
                "endDate": {
                    "Date": {
                        "year": -!%todayYear%!-, 
                        "month": -!%todayMonth%!-, 
                        "day": -!%todayDay%!-
                    }
                }
            }
        }, 
        "sortOrder": [
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "postDate", 
                    "isDescend": false
                }
            }, 
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "name", 
                    "isDescend": true
                }
            }
        ],
        "accountIds": [
            -!%userAccJoinID1%!-
        ],
        "categoryCodes": [
            1
        ],
        "keyPhrases": [
            "bFitTestTransaction"
        ]
    }
}-!|
|PUT|/transactions/search|200|||
|let||js|!-response.jsonbody[0].transactionId-!|%trID11%|
|let||js|!-response.jsonbody[0].name-!|!-bFitTestTransaction-!|
****!
!*****> '''4.2.2.8 SEARCHABLE TRANSACTIONS (pageRange, dateRange, sortOrder, accountIDs, categoryCodes, keyPhrases, statusWords) '''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "TransactionSelectionCriteria": {
        "pageRange": {
            "PageRange": {
                "pageIndex": 0, 
                "pageSize": 1
            }
        }, 
        "dateRange": {
            "DateRange": {
                "startDate": {
                    "Date": {
                        "year": 2010, 
                        "month": 3, 
                        "day": 1
                    }
                }, 
                "endDate": {
                    "Date": {
                        "year": -!%todayYear%!-, 
                        "month": -!%todayMonth%!-, 
                        "day": -!%todayDay%!-
                    }
                }
            }
        }, 
        "sortOrder": [
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "postDate", 
                    "isDescend": false
                }
            }, 
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "name", 
                    "isDescend": true
                }
            }
        ],
        "accountIds": [
            -!%userAccJoinID1%!-
        ],
        "categoryCodes": [
            1
        ],
        "keyPhrases": [
            "bFitTestTransaction"
        ],
        "statusWords": [
            "open"
        ]
    }
}-!|
|PUT|/transactions/search|200|||
|let||js|!-response.jsonbody[0].transactionId-!|%trID11%|
****!
!*****> '''4.2.2.9 SEARCHABLE TRANSACTIONS (pageRange, dateRange, sortOrder, accountIDs, categoryCodes, keyPhrases, statusWords, startAmount) '''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "TransactionSelectionCriteria": {
        "pageRange": {
            "PageRange": {
                "pageIndex": 0, 
                "pageSize": 1
            }
        }, 
        "dateRange": {
            "DateRange": {
                "startDate": {
                    "Date": {
                        "year": 2011, 
                        "month": 3, 
                        "day": 1
                    }
                }, 
                "endDate": {
                    "Date": {
                        "year": -!%todayYear%!-, 
                        "month": -!%todayMonth%!-, 
                        "day": -!%todayDay%!-
                    }
                }
            }
        }, 
        "sortOrder": [
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "postDate", 
                    "isDescend": false
                }
            }, 
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "name", 
                    "isDescend": true
                }
            }
        ],
        "accountIds": [
            -!%userAccJoinID1%!-
        ],
        "categoryCodes": [
            1
        ],
        "keyPhrases": [
        ],
        "statusWords": [
            "open"
        ],
        "startAmount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 700.46
            }
        }
    }
}-!|
|PUT|/transactions/search|200|||
|let||js|!-response.jsonbody[0].amount.Money.value-!|700.46|
****!
!*****> '''4.2.2.10 SEARCHABLE TRANSACTIONS (pageRange, dateRange, sortOrder, accountIDs, categoryCodes, keyPhrases, statusWords, startAmount, endAmount) '''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "TransactionSelectionCriteria": {
        "pageRange": {
            "PageRange": {
                "pageIndex": 0, 
                "pageSize": 1
            }
        }, 
        "dateRange": {
            "DateRange": {
                "startDate": {
                    "Date": {
                        "year": 2011, 
                        "month": 3, 
                        "day": 1
                    }
                }, 
                "endDate": {
                    "Date": {
                        "year": -!%todayYear%!-, 
                        "month": -!%todayMonth%!-, 
                        "day": -!%todayDay%!-
                    }
                }
            }
        }, 
        "sortOrder": [
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "postDate", 
                    "isDescend": false
                }
            }, 
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "name", 
                    "isDescend": true
                }
            }
        ],
        "accountIds": [
            -!%userAccJoinID1%!-
        ],
        "categoryCodes": [
            1
        ],
        "keyPhrases": [
        ],
        "statusWords": [
            "open"
        ],
        "startAmount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 700.11
            }
        },
        "endAmount": {
            "Money": {
                "currencyCode": "USD", 
                "precision": 2, 
                "value": 700.75
            }
        }
    }
}-!|
|PUT|/transactions/search|200|||
|let||js|!-response.jsonbody[0].amount.Money.value-!|700.46|
****!
!*****> '''4.2.2.11 SEARCHABLE TRANSACTIONS (pageRange, dateRange, sortOrder, accountIDs, categoryCodes, keyPhrases, statusWords, accountTypes (no hidden accounts) '''
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "TransactionSelectionCriteria": {
        "pageRange": {
            "PageRange": {
                "pageIndex": 0, 
                "pageSize": 1
            }
        }, 
        "dateRange": {
            "DateRange": {
                "startDate": {
                    "Date": {
                        "year": 2011, 
                        "month": 3, 
                        "day": 1
                    }
                }, 
                "endDate": {
                    "Date": {
                        "year": -!%todayYear%!-, 
                        "month": -!%todayMonth%!-, 
                        "day": -!%todayDay%!-
                    }
                }
            }
        }, 
        "sortOrder": [
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "postDate", 
                    "isDescend": false
                }
            }, 
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "name", 
                    "isDescend": true
                }
            }
        ],
        "accountIds": [
            -!%userAccJoinID1%!-
        ],
        "categoryCodes": [
            1
        ],
        "keyPhrases": [
        ],
        "statusWords": [
            "open"
        ],
        "startAmount": null,
        "endAmount": null,
        "accountTypes": [
            {
                "SelectionCriteriaAccountType": {
                    "type": "hidden", 
                    "handling": "only"
                }
            }, 
            {
                "SelectionCriteriaAccountType": {
                    "type": "excluded", 
                    "handling": "only"
                }
            }
        ]
    }
}-!|
|PUT|/transactions/search|200|||
|let||js|!-response.body-!|[]|
****!
!*****> '''4.2.2.12 SEARCHABLE TRANSACTIONS (pageRange, dateRange, sortOrder, accountIDs, categoryCodes, keyPhrases, statusWords, accountTypes (hidden account exists) '''

!|Execute|!-update [USER_ACCOUNT_JOIN] set HIDDEN = 1 where ACCOUNT_ID = -!@account1|
!|DatabaseEnvironment|
|commit|
     
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "TransactionSelectionCriteria": {
        "pageRange": {
            "PageRange": {
                "pageIndex": 0, 
                "pageSize": 10
            }
        }, 
        "dateRange": {
            "DateRange": {
                "startDate": {
                    "Date": {
                        "year": 2011, 
                        "month": 3, 
                        "day": 1
                    }
                }, 
                "endDate": {
                    "Date": {
                        "year": -!%todayYear%!-, 
                        "month": -!%todayMonth%!-, 
                        "day": -!%todayDay%!-
                    }
                }
            }
        }, 
        "sortOrder": [
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "postDate", 
                    "isDescend": false
                }
            }, 
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "name", 
                    "isDescend": false
                }
            }
        ],
        "accountIds": [
            -!%userAccJoinID1%!-
        ],
        "categoryCodes": [
            1
        ],
        "keyPhrases": [
        ],
        "statusWords": [
            "open"
        ],
        "startAmount": null,
        "endAmount": null,
        "accountTypes": [
            {
                "SelectionCriteriaAccountType": {
                    "type": "hidden", 
                    "handling": "include"
                }
            }, 
            {
                "SelectionCriteriaAccountType": {
                    "type": "excluded", 
                    "handling": "exclude"
                }
            }
        ]
    }
}-!|
|PUT|/transactions/search|200|||
|let||js|!-response.jsonbody[0].transactionId-!||
|let||js|!-response.jsonbody[1].transactionId-!||
|let||js|!-response.jsonbody[2].transactionId-!||
|let||js|!-response.jsonbody[3].transactionId-!||
|let||js|!-response.jsonbody[4].transactionId-!||
|let||js|!-response.jsonbody[5].transactionId-!||
|let||js|!-response.jsonbody[6].transactionId-!||
|let||js|!-response.jsonbody[7].transactionId-!||
****!
!*****> '''4.2.2.13 SEARCHABLE TRANSACTIONS (pageRange, dateRange, sortOrder, accountIDs, categoryCodes, keyPhrases, statusWords, accountTypes (hidden account, exclude) '''
     
|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|setBody|!-{
    "TransactionSelectionCriteria": {
        "pageRange": {
            "PageRange": {
                "pageIndex": 0, 
                "pageSize": 15
            }
        }, 
        "dateRange": {
            "DateRange": {
                "startDate": {
                    "Date": {
                        "year": 2011, 
                        "month": 3, 
                        "day": 1
                    }
                }, 
                "endDate": {
                    "Date": {
                        "year": -!%todayYear%!-, 
                        "month": -!%todayMonth%!-, 
                        "day": -!%todayDay%!-
                    }
                }
            }
        }, 
        "sortOrder": [
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "postDate", 
                    "isDescend": false
                }
            }, 
            {
                "SelectionCriteriaSortOrder": {
                    "orderKey": "name", 
                    "isDescend": false
                }
            }
        ],
        "accountIds": [
            -!%userAccJoinID1%!-
        ],
        "categoryCodes": [
            1
        ],
        "keyPhrases": [
        ],
        "statusWords": [
            "open"
        ],
        "startAmount": null,
        "endAmount": null,
        "accountTypes": [
            {
                "SelectionCriteriaAccountType": {
                    "type": "hidden", 
                    "handling": "exclude"
                }
            }, 
            {
                "SelectionCriteriaAccountType": {
                    "type": "excluded", 
                    "handling": "exclude"
                }
            }
        ]
    }
}-!|
|PUT|/transactions/search|200|||
|let||js|!-response.body-!|[]|

!|Execute|!-update [USER_ACCOUNT_JOIN] set HIDDEN = 0 where ACCOUNT_ID = -!@account1|
!|DatabaseEnvironment|
|commit|
****!
****!
****!
!*****> '''4.3 GET TRANSACTIONS'''
!*****> '''4.3.1 GET TRANSACTIONS (/transactions)'''

'''4.3.1.1 GET TRANSACTIONS'''

!|Query|!- SELECT (CASE WHEN DAY(DATEADD(DAY, -1, SYSDATETIME())) = 1 THEN '1.0' ELSE DAY(DATEADD(DAY, -1, SYSDATETIME())) END) as Day-!|
|Day?|
|>>tDay|

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|GET|/transactions|200|||
|let||js|!-response.jsonbody[0].accountId-!|%userAccJoinID1%|
|let||js|!-response.jsonbody[0].id-!|%splitID2%|
|let||js|!-response.jsonbody[0].amount.Money.currencyCode-!|USD|
|let||js|!-response.jsonbody[0].amount.Money.precision-!|2|
|let||js|!-response.jsonbody[0].amount.Money.value-!|200.46|
|let||js|!-response.jsonbody[0].memo-!|null|
|let||js|!-response.jsonbody[0].name-!|!-FITNESSE USER TEST-!|
|let||js|!-response.jsonbody[0].originalName-!|!-FitTestTransaction-!|
|let||js|!-response.jsonbody[0].offline-!|null|
|let||js|!-response.jsonbody[0].pending-!|false|
|let||js|!-response.jsonbody[0].postDate.Date.year-!|%todayYear%|
|let||js|!-response.jsonbody[0].postDate.Date.month-!||
|let||js|!-response.jsonbody[0].postDate.Date.day-!|%tDay%|
|let||js|!-response.jsonbody[0].postDate.Date.displayValue-!||
|let||js|!-response.jsonbody[0].postingSeq-!|null|
|let||js|!-response.jsonbody[0].transactionId-!|%trID2%|
|let||js|!-response.jsonbody[0].type-!|0.0|
|let||js|!-response.jsonbody[0].categoryName-!|Entertainment|
|let||js|!-response.jsonbody[0].categoryId-!|104|
|let||js|!-response.jsonbody[0].accountName-!||
|let||js|!-response.jsonbody[0].hidden-!|false|
|let||js|!-response.jsonbody[0].excluded-!|false|
|let||js|!-response.jsonbody[0].checkNumber-!|null|

'''4.3.1.2 GET TRANSACTIONS (account hidden)'''
!|Execute|!-update [USER_ACCOUNT_JOIN] set HIDDEN = 1 where ACCOUNT_ID = -!@account1|
!|Execute|!-update [USER_ACCOUNT_JOIN] set HIDDEN = 1 where ACCOUNT_ID = -!@account2|
!|DatabaseEnvironment|
|commit|

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|GET|/transactions|200|||
|let||js|response.body|[]|

!|Execute|!-update [USER_ACCOUNT_JOIN] set HIDDEN = 0 where ACCOUNT_ID = -!@account1|
!|Execute|!-update [USER_ACCOUNT_JOIN] set HIDDEN = 0 where ACCOUNT_ID = -!@account2|
!|DatabaseEnvironment|
|commit|

'''4.3.1.3 GET TRANSACTIONS (account exlude)'''

!|Execute|!-update [USER_ACCOUNT_JOIN] set [EXCLUDED] = 1 where ACCOUNT_ID = -!@account1|
!|Execute|!-update [USER_ACCOUNT_JOIN] set [EXCLUDED] = 1 where ACCOUNT_ID = -!@account2|
!|DatabaseEnvironment|
|commit|

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|GET|/transactions|200|||
|let||js|response.body|[]|

!|Execute|!-update [USER_ACCOUNT_JOIN] set [EXCLUDED] = 0 where ACCOUNT_ID = -!@account1|
!|Execute|!-update [USER_ACCOUNT_JOIN] set [EXCLUDED] = 0 where ACCOUNT_ID = -!@account2|
!|DatabaseEnvironment|
|commit|

****!
!*****> '''4.3.2 GET TRANSACTIONS (/transactions/{transactionId})'''

'''4.3.2.1 GET TRANSACTIONS (valid transactionID)'''

!|Query|!- SELECT (CASE WHEN DAY(DATEADD(DAY, -120, SYSDATETIME())) = 1 THEN '1.0' ELSE DAY(DATEADD(DAY, -120, SYSDATETIME())) END) as Day-!|
|Day?|
|>>zDay|
!|Query|!- SELECT (CASE WHEN MONTH(DATEADD(DAY, -120, SYSDATETIME())) = 1 THEN '1.0' ELSE CONVERT(varchar, MONTH(DATEADD(DAY, -120, SYSDATETIME()))) END) as Month-!|
|Month?|
|>>zMonth|
!|Query|!- SELECT YEAR(DATEADD(DAY, -120, SYSDATETIME())) as Year-!|
|Year?|
|>>zYear|

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|GET|/transactions/%splitID4%|200|||
|let||js|response.body||
|let||js|!-response.jsonbody.Transaction.accountId-!|%userAccJoinID1%|
|let||js|!-response.jsonbody.Transaction.id-!|%splitID4%|
|let||js|!-response.jsonbody.Transaction.amount.Money.currencyCode-!|USD|
|let||js|!-response.jsonbody.Transaction.amount.Money.precision-!|2|
|let||js|!-response.jsonbody.Transaction.amount.Money.value-!|400.46|
|let||js|!-response.jsonbody.Transaction.memo-!|null|
|let||js|!-response.jsonbody.Transaction.name-!|!-FITNESSE USER TEST-!|
|let||js|!-response.jsonbody.Transaction.originalName-!|!-FitTestTransaction-!|
|let||js|!-response.jsonbody.Transaction.offline-!||
|let||js|!-response.jsonbody.Transaction.pending-!|false|
|let||js|!-response.jsonbody.Transaction.postDate.Date.year-!|%zYear%|
|let||js|!-response.jsonbody.Transaction.postDate.Date.month-!|%zMonth%|
|let||js|!-response.jsonbody.Transaction.postDate.Date.day-!|%zDay%|
|let||js|!-response.jsonbody.Transaction.postDate.Date.displayValue-!||
|let||js|!-response.jsonbody.Transaction.postingSeq-!|null|
|let||js|!-response.jsonbody.Transaction.transactionId-!|%trID4%|
|let||js|!-response.jsonbody.Transaction.type-!|0.0|
|let||js|!-response.jsonbody.Transaction.categoryName-!|Entertainment|
|let||js|!-response.jsonbody.Transaction.categoryId-!|104|
|let||js|!-response.jsonbody.Transaction.accountName-!||
|let||js|!-response.jsonbody.Transaction.hidden-!|false|
|let||js|!-response.jsonbody.Transaction.excluded-!|false|

'''4.3.2.2 GET TRANSACTIONS (invalid transactionID)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|GET|/transactions/%trID4%|200|||
****!
!*****> '''4.3.3 GET TRANSACTIONS (transactions/{txnid}/splits)'''

'''4.3.3.1 valid {txnid}'''

!|Query|!-select [ID] from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID = -! @userTransactionJoinID|
|[ID]?|
|>>spID1|
|>>spID2|
|>>spID3|
|>>spID4|

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|GET|/transactions/%splitID%/splits|200|||
|let||js|!-response.jsonbody[0].categoryId-!|104|
|let||js|!-response.jsonbody[0].id-!|%splitID%|
|let||js|!-response.jsonbody[0].splitAmount.Money.currencyCode-!|USD|
|let||js|!-response.jsonbody[0].splitAmount.Money.precision-!|2|
|let||js|!-response.jsonbody[0].splitAmount.Money.value-!|9.5|
|let||js|!-response.jsonbody[1].categoryId-!|101|
|let||js|!-response.jsonbody[1].id-!|%spID2%|
|let||js|!-response.jsonbody[1].splitAmount.Money.currencyCode-!|USD|
|let||js|!-response.jsonbody[1].splitAmount.Money.precision-!|2|
|let||js|!-response.jsonbody[1].splitAmount.Money.value-!|4.45|
|let||js|!-response.jsonbody[2].categoryId-!|101|
|let||js|!-response.jsonbody[2].id-!|%spID3%|
|let||js|!-response.jsonbody[2].splitAmount.Money.currencyCode-!|USD|
|let||js|!-response.jsonbody[2].splitAmount.Money.precision-!|2|
|let||js|!-response.jsonbody[2].splitAmount.Money.value-!|5.45|
|let||js|!-response.jsonbody[3].categoryId-!|101|
|let||js|!-response.jsonbody[3].id-!|%spID4%|
|let||js|!-response.jsonbody[3].splitAmount.Money.currencyCode-!|USD|
|let||js|!-response.jsonbody[3].splitAmount.Money.precision-!|2|
|let||js|!-response.jsonbody[3].splitAmount.Money.value-!|1.05|

'''4.3.3.1 invalid {txnid}'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|GET|/transactions/012348/splits|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-Argument transactionSplitId is invalid.-!|true|
****!
!*****> '''4.3.4 GET TRANSACTIONS (/images)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|GET|/transactions/%splitID12%/images|200|||

****!
!*****> '''4.3.5 GET TRANSACTIONS (/images/{imageId})'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|GET|/transactions/%splitID12%/images/123|404|||
****!
!*****> '''4.3.6 GET TRANSACTIONS (/rules/{ruleId}/listcategory'''

'''4.3.6.1 ruleId is non-existent'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|GET|/transactions/rules/%splitID12%/listcategory|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-Argument ruleId is invalid.-!|true|

'''4.3.6.2 system ruleId'''

!|Query|!-select top 1 ID FROM [CATEGORIZATION_RULE] where RULE_SUBCLASS = 'SYSTEM'-!|
|ID?|
|>>ruleID1|

!|Query|!-select top 1 ID FROM [CATEGORIZATION_RULE] where RULE_SUBCLASS = 'COMPANY' and COMPANY_ID = 1-!|
|ID?|
|>>ruleID2|

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|GET|/transactions/rules/%ruleID1%/listcategory|400|||

'''4.3.6.3 company ruleId'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|GET|/transactions/rules/%ruleID2%/listcategory|400|||

'''4.3.6.4 user ruleId'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|GET|/transactions/rules/%ruleID%/listcategory|200|||
|let||js|response.jsonbody[0].accountId||
|let||js|response.jsonbody[0].id||
|let||js|!-response.jsonbody[0].amount.Money.currencyCode-!||
|let||js|!-response.jsonbody[0].amount.Money.precision-!||
|let||js|!-response.jsonbody[0].amount.Money.value-!||
|let||js|!-response.jsonbody[0].totalTxnAmount.Money.currencyCode-!||
|let||js|!-response.jsonbody[0].totalTxnAmount.Money.precision-!||
|let||js|!-response.jsonbody[0].totalTxnAmount.Money.value-!||
|let||js|response.jsonbody[0].memo||
|let||js|response.jsonbody[0].name||
|let||js|response.jsonbody[0].originalName||
|let||js|response.jsonbody[0].offline||
|let||js|response.jsonbody[0].pending||
|let||js|!-response.jsonbody[0].postDate.Date.year-!||
|let||js|!-response.jsonbody[0].postDate.Date.month-!||
|let||js|!-response.jsonbody[0].postDate.Date.day-!||
|let||js|!-response.jsonbody[0].postDate.Date.displayValue-!||
|let||js|response.jsonbody[0].postingSeq||
|let||js|response.jsonbody[0].type||
|let||js|response.jsonbody[0].transactionId||
|let||js|response.jsonbody[0].categoryName||
|let||js|response.jsonbody[0].categoryId||
|let||js|response.jsonbody[0].accountName||
|let||js|response.jsonbody[0].hidden||
|let||js|response.jsonbody[0].excluded||
|let||js|response.jsonbody[0].checkNumber||
|let||js|response.jsonbody[0].depositNumber||
|let||js|response.jsonbody[0].imageId||
|let||js|response.jsonbody[0].isSplit||
|let||js|response.jsonbody[0].isOffline||
|comment|APDB-928, all categoryID needs to be 104|

****!
!*****> '''4.3.7 GET TRANSACTIONS (/rules/{ruleId}/listrenaming)'''

'''4.3.7.1 ruleId is non-existent'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|comment|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|GET|/transactions/rules/%splitID12%/listrenaming|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-Argument ruleId is invalid.-!|true|

'''4.3.7.2 system ruleID'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|GET|/transactions/rules/%renameRuleId1%/listrenaming|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-Argument ruleId-user is invalid.-!|true|

'''4.3.7.3 user ruleID'''

!|Execute|!-update [OLB_TRANSACTION] set NAME = 'FITNESSETestTransaction' 
            where name = 'FitTestTransaction'-!|
!|DatabaseEnvironment|
|commit|

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|GET|/transactions/rules/%renameRuleId2%/listrenaming|200|||
|let||js|!-response.jsonbody[0].originalName-!|!-FITNESSETestTransaction-!|
|let||js|!-response.jsonbody[1].originalName-!|!-FITNESSETestTransaction-!|
|let||js|!-response.jsonbody[2].originalName-!|!-FITNESSETestTransaction-!|
|let||js|!-response.jsonbody[3].originalName-!|!-FITNESSETestTransaction-!|
|let||js|!-response.jsonbody[4].originalName-!|!-FITNESSETestTransaction-!|
|let||js|!-response.jsonbody[5].originalName-!|!-FITNESSETestTransaction-!|
|let||js|!-response.jsonbody[6].originalName-!|!-FITNESSETestTransaction-!|
|let||js|!-response.jsonbody[7].originalName-!|!-FITNESSETestTransaction-!|
|let||js|!-response.jsonbody[8].originalName-!|!-FITNESSETestTransaction-!|
|let||js|!-response.jsonbody[9].originalName-!|!-FITNESSETestTransaction-!|
|let||js|!-response.jsonbody[10].originalName-!|!-FITNESSETestTransaction-!|
|let||js|!-response.jsonbody[11].originalName-!|!-FITNESSETestTransaction-!|
|let||js|!-response.jsonbody[0].transactionId-!|%trID%|
|let||js|!-response.jsonbody[1].transactionId-!|%trID200%|
|let||js|!-response.jsonbody[2].transactionId-!|%trID1%|
|let||js|!-response.jsonbody[3].transactionId-!|%trID2%|
|let||js|!-response.jsonbody[4].transactionId-!|%trID3%|
|let||js|!-response.jsonbody[5].transactionId-!|%trID4%|
|let||js|!-response.jsonbody[6].transactionId-!|%trID5%|
|let||js|!-response.jsonbody[7].transactionId-!|%trID6%|
|let||js|!-response.jsonbody[8].transactionId-!|%trID7%|
|let||js|!-response.jsonbody[9].transactionId-!|%trID8%|
|let||js|!-response.jsonbody[10].transactionId-!|%trID9%|
|let||js|!-response.jsonbody[11].transactionId-!|%trID10%|

!|Execute|!-update [OLB_TRANSACTION] set NAME = 'FitTestTransaction' 
            where name = 'FITNESSETestTransaction'-!|
!|DatabaseEnvironment|
|commit|
****!
****!
!*****> '''4.4 DELETE TRANSACTIONS'''
!*****> '''4.4.1 DELETE TRANSACTIONS (/transactions/{txnid}/split - delete the split transaction only)'''

'''4.4.1.1 DELETE TRANSACTIONS (transaction has more than one split)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|DELETE|/transactions/%spID1%/split|204|||
|DELETE|/transactions/%spID2%/split|204|||
|DELETE|/transactions/%spID3%/split|204|||
|DELETE|/transactions/%spID4%/split|400|||
|let||js|response.jsonbody||


!|Query|!-select COUNT(*) as TotalSplitRecord from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID =-! @userTransactionJoinID|
|TotalSplitRecord?|
||

'''4.4.1.2 DELETE TRANSACTIONS (transaction has only one split)'''

!|Query|!-select [ID] from [SPLIT_CATEGORIZATION] where USER_TRANSACTION_JOIN_ID = -! @userTransactionJoinID2|
|[ID]?|
||

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|DELETE|/transactions/%splitID2%/split|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 30060 - Cannot merge a single split-!|true|

'''4.4.1.3 DELETE TRANSACTIONS (invalid splitID)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|DELETE|/transactions/%trID2%/split|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200001 - Argument splitId is invalid.-!|true|

'''4.4.1.4 DELETE TRANSACTIONS (different user attempts to delete the transaction)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUserToken%-!|
|DELETE|/transactions/%splitID2%/split|403|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-Security Error - ErrorCode: 20019 - User is invalid for User Transaction-!|true|

****!
!*****> '''4.4.2 DELETE TRANSACTIONS (/transactions/{transactionId})'''

'''4.4.2.1 DELETE TRANSACTIONS (delete non-offline transaction)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|DELETE|/transactions/%splitID1%|400|||
|let|$errMsg|js|response.jsonbody.message||

!|com.lodosoftware.fitnesse.fixtures.LodosoftwareFixtures|
|symbolName|str|isContain?|
|errMsg|!-ErrorCode: 200202 - Operation for transaction only allowed on offline account.-!|true|


'''4.4.2.3 DELETE TRANSACTIONS (offline transaction)'''

|!-smartrics.rest.fitnesse.fixture.RestFixture-!|http://${serverName}/d3rest|
|setHeader|!- appKey : -!${institutionNum}!- 
Content-Type : application/json
Accept : application/json
userToken : %encodedUser2Token%-!|
|DELETE|/transactions/%offlineTrSplitID1%|204|||
|DELETE|/transactions/%offlineTrSplitID2%|204|||
|DELETE|/transactions/%offlineTrSplitID3%|204|||
|DELETE|/transactions/%offlineTrSplitID4%|204|||

!|Query|!-select [ID] from [OLB_TRANSACTION] where ID= -! @offlineTrID1|
|[ID]?|
!|Query|!-select [ID] from [OLB_TRANSACTION] where ID= -! @offlineTrID2|
|[ID]?|
!|Query|!-select [ID] from [OLB_TRANSACTION] where ID= -! @offlineTrID3|
|[ID]?|
!|Query|!-select [ID] from [OLB_TRANSACTION] where ID= -! @offlineTrID4|
|[ID]?|
****!
****!
!*****>  Clean-up Test Data

!|Execute|!-delete FROM [CATEGORIZATION_RULE] where USER_ID = -! @userID2 !-
            delete from [RENAMING_RULE] where USER_ID = -! @userID2 !-
            delete [CATEGORIZATION_RULE] where RULE_NAME like 'FITTEST%'
            delete [RENAMING_RULE] where RULE_NAME like 'FITTEST%'
            delete [TRANSIENT_USER_EVENT]-!|
!|Execute|!-delete from [SPLIT_CATEGORIZATION] where [ID] = -! @splitID !-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @splitID1 !-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @splitID2 !-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @splitID3 !-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @splitID4 !-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @splitID5 !-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @splitID6 !-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @splitID7 !-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @splitID8 !-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @splitID9 !-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @splitID10 !-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @splitID11 !-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @splitID12 !-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @splitID200 !-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @spID2!-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @spID3!-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @spID4!-
            delete from [SPLIT_CATEGORIZATION] where [ID] = -! @splitID202!-
            delete from [USER_TRANSACTION_JOIN] where [ID] = -! @userTransactionJoinID!-
            delete from [USER_TRANSACTION_JOIN] where [ID] = -! @userTransactionJoinID1!-
            delete from [USER_TRANSACTION_JOIN] where [ID] = -! @userTransactionJoinID2!-
            delete from [USER_TRANSACTION_JOIN] where [ID] = -! @userTransactionJoinID3!-
            delete from [USER_TRANSACTION_JOIN] where [ID] = -! @userTransactionJoinID4!-
            delete from [USER_TRANSACTION_JOIN] where [ID] = -! @userTransactionJoinID5!-
            delete from [USER_TRANSACTION_JOIN] where [ID] = -! @userTransactionJoinID6!-
            delete from [USER_TRANSACTION_JOIN] where [ID] = -! @userTransactionJoinID7!-
            delete from [USER_TRANSACTION_JOIN] where [ID] = -! @userTransactionJoinID8!-
            delete from [USER_TRANSACTION_JOIN] where [ID] = -! @userTransactionJoinID9!-
            delete from [USER_TRANSACTION_JOIN] where [ID] = -! @userTransactionJoinID10!-
            delete from [USER_TRANSACTION_JOIN] where [ID] = -! @userTransactionJoinID11!-
            delete from [USER_TRANSACTION_JOIN] where [ID] = -! @userTransactionJoinID12!-
            delete from [USER_TRANSACTION_JOIN] where [ID] = -! @userTransactionJoinID200!-
            delete from [OLB_TRANSACTION] where [ID] = -! @trID!-
            delete from [OLB_TRANSACTION] where [ID] = -! @trID200!-
            delete from [OLB_TRANSACTION] where [ID] = -! @trID1!-
            delete from [OLB_TRANSACTION] where [ID] = -! @trID2!-
            delete from [OLB_TRANSACTION] where [ID] = -! @trID3!-
            delete from [OLB_TRANSACTION] where [ID] = -! @trID4!-
            delete from [OLB_TRANSACTION] where [ID] = -! @trID5!-
            delete from [OLB_TRANSACTION] where [ID] = -! @trID6!-
            delete from [OLB_TRANSACTION] where [ID] = -! @trID7!-
            delete from [OLB_TRANSACTION] where [ID] = -! @trID8!-
            delete from [OLB_TRANSACTION] where [ID] = -! @trID9!-
            delete from [OLB_TRANSACTION] where [ID] = -! @trID10!-
            delete from [OLB_TRANSACTION] where [ID] = -! @trID11!-
            delete from [OLB_TRANSACTION] where [ID] = -! @trID12!-
            delete from [USER_ACCOUNT_JOIN] where [ID] = -! @userAccJoinID1!-
            delete from [USER_ACCOUNT_JOIN] where [ID] = -! @userAccJoinID2!-
            delete from [OLB_ACCOUNT] where [ACCOUNT_ID] = -! @account1!-
            delete from [OLB_ACCOUNT] where [ACCOUNT_ID] = -! @account2|
!|DatabaseEnvironment|
|commit|
****!
****!