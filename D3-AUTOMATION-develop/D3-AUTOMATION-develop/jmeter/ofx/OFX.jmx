<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="OFX" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>false</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">summary-report.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename">aggregate-graph.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename">graph-results.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>false</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">results-tree.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">ofx1-p.dnet3.com</stringProp>
        <stringProp name="HTTPSampler.port">443</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path">/d3ofx-app/ofx.cgi</stringProp>
        <stringProp name="HTTPSampler.implementation">Java</stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accpet-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate, sdch</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-type</stringProp>
            <stringProp name="Header.value">application/xml</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="false">
        <collectionProp name="UserParameters.names">
          <stringProp name="342344292">loginId</stringProp>
        </collectionProp>
        <collectionProp name="UserParameters.thread_values">
          <collectionProp name="-1055494937">
            <stringProp name="-1827134132">janedoe</stringProp>
          </collectionProp>
          <collectionProp name="544658693">
            <stringProp name="1433288595">ivanfreely</stringProp>
          </collectionProp>
          <collectionProp name="1902819736">
            <stringProp name="-918178654">samueladamsiii</stringProp>
          </collectionProp>
          <collectionProp name="-1395860853">
            <stringProp name="-1363327528">johnsmith</stringProp>
          </collectionProp>
        </collectionProp>
        <boolProp name="UserParameters.per_iteration">false</boolProp>
      </UserParameters>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Modules" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <longProp name="ThreadGroup.start_time">1464189025000</longProp>
        <longProp name="ThreadGroup.end_time">1464189025000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
          <intProp name="calcMode">0</intProp>
          <doubleProp>
            <name>throughput</name>
            <value>10.0</value>
            <savedValue>0.0</savedValue>
          </doubleProp>
        </ConstantThroughputTimer>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="maximumValue">1000000</stringProp>
          <stringProp name="minimumValue">100</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">login_id</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="342344292">loginId</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-1138117458">
              <stringProp name="-1406685342">perf-usr-uid-0-1-${login_id}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Profile Request" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request Profile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">OFXHEADER:100&#xd;
DATA:OFXSGML&#xd;
VERSION:102&#xd;
SECURITY:NONE&#xd;
ENCODING:USASCII&#xd;
CHARSET:1252&#xd;
COMPRESSION:NONE&#xd;
OLDFILEUID:NONE&#xd;
NEWFILEUID:NONE&#xd;
&#xd;
&lt;OFX&gt;&#xd;
    &lt;SIGNONMSGSRQV1&gt;&#xd;
        &lt;SONRQ&gt;&#xd;
            &lt;DTCLIENT&gt;20160208152141&#xd;
            &lt;USERID&gt;${loginId}&#xd;
            &lt;USERPASS&gt;password&#xd;
            &lt;LANGUAGE&gt;ENG&#xd;
            &lt;FI&gt;&#xd;
                &lt;ORG&gt;IBERIABANK&#xd;
                &lt;FID&gt;8019&#xd;
            &lt;/FI&gt;&#xd;
            &lt;APPID&gt;QWIN&#xd;
            &lt;APPVER&gt;2000&#xd;
        &lt;/SONRQ&gt;&#xd;
    &lt;/SIGNONMSGSRQV1&gt;&#xd;
    &lt;PROFMSGSRQV1&gt;&#xd;
        &lt;PROFTRNRQ&gt;&#xd;
            &lt;TRNUID&gt;1454944901&#xd;
            &lt;PROFRQ&gt;&#xd;
                &lt;CLIENTROUTING&gt;MSGSET&#xd;
                &lt;DTPROFUP&gt;19970101&#xd;
            &lt;/PROFRQ&gt;&#xd;
        &lt;/PROFTRNRQ&gt;&#xd;
    &lt;/PROFMSGSRQV1&gt;&#xd;
&lt;/OFX&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Signup Request" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request Signup" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">OFXHEADER:100&#xd;
DATA:OFXSGML&#xd;
VERSION:102&#xd;
SECURITY:NONE&#xd;
ENCODING:USASCII&#xd;
CHARSET:1252&#xd;
COMPRESSION:NONE&#xd;
OLDFILEUID:NONE&#xd;
NEWFILEUID:NONE&#xd;
&#xd;
&lt;OFX&gt;&#xd;
    &lt;SIGNONMSGSRQV1&gt;&#xd;
        &lt;SONRQ&gt;&#xd;
            &lt;DTCLIENT&gt;20160302231958&#xd;
            &lt;USERID&gt;${loginId}&#xd;
            &lt;USERPASS&gt;password&#xd;
            &lt;LANGUAGE&gt;ENG&#xd;
            &lt;FI&gt;&#xd;
                &lt;ORG&gt;IBERIABANK&#xd;
                &lt;FID&gt;8019&#xd;
            &lt;/FI&gt;&#xd;
            &lt;APPID&gt;QWIN&#xd;
            &lt;APPVER&gt;2000&#xd;
        &lt;/SONRQ&gt;&#xd;
    &lt;/SIGNONMSGSRQV1&gt;&#xd;
    &lt;SIGNUPMSGSRQV1&gt;&#xd;
        &lt;ACCTINFOTRNRQ&gt;&#xd;
            &lt;TRNUID&gt;1456960800&#xd;
            &lt;ACCTINFORQ&gt;&#xd;
                &lt;DTACCTUP&gt;20140101000000&#xd;
            &lt;/ACCTINFORQ&gt;&#xd;
        &lt;/ACCTINFOTRNRQ&gt;&#xd;
    &lt;/SIGNUPMSGSRQV1&gt;&#xd;
&lt;/OFX&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACCOUNT_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ACCOUNT_ID</stringProp>
              <stringProp name="RegexExtractor.regex">(ACCTID&gt;)(\w+(-\w+)+)(&lt;/ACCTID)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default">MISSING</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACCOUNT_TYPE" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ACCOUNT_TYPE</stringProp>
              <stringProp name="RegexExtractor.regex">(ACCTTYPE&gt;)(\w+)(&lt;/ACCTTYPE)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default">MISSING</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BANK_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">BANK_ID</stringProp>
              <stringProp name="RegexExtractor.regex">(BANKID&gt;)(\d+)(&lt;/BANKID)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default">MISSING</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="TRANSACTION_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">TRANSACTION_ID</stringProp>
              <stringProp name="RegexExtractor.regex">(TRNUID&gt;)(\d+)(&lt;/TRNUID)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default">MISSING</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="Scope.variable">TRANSACTION_ID</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Bank Statement Download Request" enabled="true"/>
        <hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Account IDs" enabled="true">
            <stringProp name="ForeachController.inputVal">ACCOUNT_ID</stringProp>
            <stringProp name="ForeachController.returnVal">ACCTID</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
          </ForeachController>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Account Types" enabled="true">
            <stringProp name="ForeachController.inputVal">ACCOUNT_TYPE</stringProp>
            <stringProp name="ForeachController.returnVal">ACCTTYPE</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
          </ForeachController>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Bank IDs" enabled="true">
            <stringProp name="ForeachController.inputVal">BANK_ID</stringProp>
            <stringProp name="ForeachController.returnVal">BNKID</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
          </ForeachController>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Transaction IDs" enabled="true">
            <stringProp name="ForeachController.inputVal">TRANSACTION_ID</stringProp>
            <stringProp name="ForeachController.returnVal">TRANSID</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
          </ForeachController>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request Download" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">OFXHEADER:100&#xd;
DATA:OFXSGML&#xd;
VERSION:102&#xd;
SECURITY:NONE&#xd;
ENCODING:USASCII&#xd;
CHARSET:1252&#xd;
COMPRESSION:NONE&#xd;
OLDFILEUID:NONE&#xd;
NEWFILEUID:NONE&#xd;
&#xd;
&lt;OFX&gt;&#xd;
    &lt;SIGNONMSGSRQV1&gt;&#xd;
        &lt;SONRQ&gt;&#xd;
            &lt;DTCLIENT&gt;20071015021529.000[-8:PST]&#xd;
            &lt;USERID&gt;${loginId}&#xd;
            &lt;USERPASS&gt;password&#xd;
            &lt;LANGUAGE&gt;ENG&#xd;
            &lt;FI&gt;&#xd;
                &lt;ORG&gt;IBERIABANK&#xd;
                &lt;FID&gt;8019&#xd;
            &lt;/FI&gt;&#xd;
            &lt;APPID&gt;QWIN&#xd;
            &lt;APPVER&gt;0900&#xd;
        &lt;/SONRQ&gt;&#xd;
    &lt;/SIGNONMSGSRQV1&gt;&#xd;
    &lt;BANKMSGSRQV1&gt;&#xd;
        &lt;STMTTRNRQ&gt;&#xd;
            &lt;TRNUID&gt;${TRANSID}&#xd;
            &lt;STMTRQ&gt;&#xd;
                &lt;BANKACCTFROM&gt;&#xd;
                    &lt;BANKID&gt;${BNKID}&#xd;
                    &lt;ACCTID&gt;${ACCTID}&#xd;
                    &lt;ACCTTYPE&gt;${ACCTTYPE}&#xd;
                &lt;/BANKACCTFROM&gt;&#xd;
                &lt;INCTRAN&gt;&#xd;
&#xd;
                    &lt;INCLUDE&gt;Y&#xd;
                &lt;/INCTRAN&gt;&#xd;
            &lt;/STMTRQ&gt;&#xd;
        &lt;/STMTTRNRQ&gt;&#xd;
        &lt;STMTTRNRQ&gt;&#xd;
            &lt;TRNUID&gt;${TRANSID}&#xd;
            &lt;STMTRQ&gt;&#xd;
                &lt;BANKACCTFROM&gt;&#xd;
                    &lt;BANKID&gt;${BNKID}&#xd;
                    &lt;ACCTID&gt;${ACCTID}&#xd;
                    &lt;ACCTTYPE&gt;${ACCTTYPE}&#xd;
                &lt;/BANKACCTFROM&gt;&#xd;
                &lt;INCTRAN&gt;&#xd;
&#xd;
                    &lt;INCLUDE&gt;Y&#xd;
                &lt;/INCTRAN&gt;&#xd;
            &lt;/STMTRQ&gt;&#xd;
        &lt;/STMTTRNRQ&gt;&#xd;
    &lt;/BANKMSGSRQV1&gt;&#xd;
&lt;/OFX&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Bank Statement End Request" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request End" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">OFXHEADER:100&#xd;
DATA:OFXSGML&#xd;
VERSION:102&#xd;
SECURITY:NONE&#xd;
ENCODING:USASCII&#xd;
CHARSET:1252&#xd;
COMPRESSION:NONE&#xd;
OLDFILEUID:NONE&#xd;
NEWFILEUID:NONE&#xd;
&#xd;
&lt;OFX&gt;&#xd;
    &lt;SIGNONMSGSRQV1&gt;&#xd;
        &lt;SONRQ&gt;&#xd;
            &lt;DTCLIENT&gt;20160225225949&#xd;
            &lt;USERID&gt;${loginId}&#xd;
            &lt;USERPASS&gt;password&#xd;
            &lt;LANGUAGE&gt;ENG&#xd;
            &lt;FI&gt;&#xd;
                &lt;ORG&gt;IBERIABANK&#xd;
                &lt;FID&gt;8019&#xd;
            &lt;/FI&gt;&#xd;
            &lt;APPID&gt;QWIN&#xd;
            &lt;APPVER&gt;2000&#xd;
        &lt;/SONRQ&gt;&#xd;
    &lt;/SIGNONMSGSRQV1&gt;&#xd;
    &lt;BANKMSGSRQV1&gt;&#xd;
        &lt;STMTENDTRNRQ&gt;&#xd;
            &lt;TRNUID&gt;${TRANSID}&#xd;
            &lt;STMTENDRQ&gt;&#xd;
                &lt;BANKACCTFROM&gt;&#xd;
                    &lt;BANKID&gt;${BNKID}&#xd;
                    &lt;ACCTID&gt;${ACCTID}&#xd;
                    &lt;ACCTTYPE&gt;${ACCTTYPE}&#xd;
                &lt;/BANKACCTFROM&gt;&#xd;
            &lt;/STMTENDRQ&gt;&#xd;
        &lt;/STMTENDTRNRQ&gt;&#xd;
        &lt;STMTENDTRNRQ&gt;&#xd;
            &lt;TRNUID&gt;${TRANSID}&#xd;
            &lt;STMTENDRQ&gt;&#xd;
                &lt;BANKACCTFROM&gt;&#xd;
                    &lt;BANKID&gt;${BNKID}&#xd;
                    &lt;ACCTID&gt;${ACCTID}&#xd;
                    &lt;ACCTTYPE&gt;${ACCTTYPE}&#xd;
                &lt;/BANKACCTFROM&gt;&#xd;
            &lt;/STMTENDRQ&gt;&#xd;
        &lt;/STMTENDTRNRQ&gt;&#xd;
    &lt;/BANKMSGSRQV1&gt;&#xd;
&lt;/OFX&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
