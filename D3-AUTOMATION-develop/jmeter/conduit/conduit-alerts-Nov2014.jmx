<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ALERTS Migration" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptestnow</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1416947799000</longProp>
        <longProp name="ThreadGroup.end_time">1416947799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="startUserId" elementType="Argument">
              <stringProp name="Argument.name">startUserId</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endUserId" elementType="Argument">
              <stringProp name="Argument.name">endUserId</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="databaseToUse" elementType="Argument">
              <stringProp name="Argument.name">databaseToUse</stringProp>
              <stringProp name="Argument.value">MySql</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="numOfTxnsPerAccts" elementType="Argument">
              <stringProp name="Argument.name">numOfTxnsPerAccts</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="conduitFileDropPath" elementType="Argument">
              <stringProp name="Argument.name">conduitFileDropPath</stringProp>
              <stringProp name="Argument.value">/Users/dariusz</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="User Range" enabled="true">
          <stringProp name="BeanShellSampler.query">
vars.put(&quot;usrIdFrom&quot;, &quot;${startUserId}&quot;);
vars.put(&quot;usrIdTo&quot;, &quot;${endUserId}&quot;);

vars.put(&quot;pageNo&quot;, &quot;0&quot;);
vars.put(&quot;pageSize&quot;, &quot;3&quot;);

vars.put(&quot;results&quot;, &quot;true&quot;);
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Sql Server" enabled="true">
          <stringProp name="IfController.condition">&quot;${databaseToUse}&quot; == &quot;SqlServer&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="Sql Server DB Connection" enabled="true">
            <boolProp name="autocommit">true</boolProp>
            <stringProp name="checkQuery">Select 1</stringProp>
            <stringProp name="connectionAge">5000</stringProp>
            <stringProp name="dataSource">Connection-1</stringProp>
            <stringProp name="dbUrl">jdbc:jtds:sqlserver://10.1.1.40:1433;databaseName=d3cluster_v233</stringProp>
            <stringProp name="driver">net.sourceforge.jtds.jdbc.Driver</stringProp>
            <boolProp name="keepAlive">true</boolProp>
            <stringProp name="password">d3qa</stringProp>
            <stringProp name="poolMax">1</stringProp>
            <stringProp name="timeout">10000</stringProp>
            <stringProp name="transactionIsolation">TRANSACTION_NONE</stringProp>
            <stringProp name="trimInterval">6000</stringProp>
            <stringProp name="username">d3qa</stringProp>
          </JDBCDataSource>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If My Sql" enabled="true">
          <stringProp name="IfController.condition">&quot;${databaseToUse}&quot; == &quot;MySql&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="MySql DB Connection" enabled="true">
            <stringProp name="dataSource">Connection-2</stringProp>
            <stringProp name="poolMax">1</stringProp>
            <stringProp name="timeout">10000</stringProp>
            <stringProp name="trimInterval">6000</stringProp>
            <boolProp name="autocommit">true</boolProp>
            <stringProp name="transactionIsolation">DEFAULT</stringProp>
            <boolProp name="keepAlive">true</boolProp>
            <stringProp name="connectionAge">5000</stringProp>
            <stringProp name="checkQuery">Select 1</stringProp>
            <stringProp name="dbUrl">jdbc:mysql://localhost:3306/d3v2</stringProp>
            <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
            <stringProp name="username">d3</stringProp>
            <stringProp name="password">d3</stringProp>
          </JDBCDataSource>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Conduit Header" enabled="true">
          <stringProp name="BeanShellSampler.query">
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;


String tstamp = &quot;&quot;+System.currentTimeMillis();	
String fileName = &quot;conduit-&quot;+tstamp+ &quot;-alerts-migration-range-${startUserId}-${endUserId}&quot;;
vars.put(&quot;filename&quot;, fileName);
String filePath = &quot;${conduitFileDropPath}/&quot; + fileName + &quot;.txt&quot;;
vars.put(&quot;filePath&quot;, filePath);

File file = new File(filePath);
FileWriter fw = new FileWriter(file);
BufferedWriter bw = new BufferedWriter(fw);

bw.write(&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\n&quot; +
		&quot;&lt;conduit&gt;\n&quot; +
		&quot;  &lt;hdr&gt;\n&quot; +
		&quot;    &lt;ver&gt;2.0&lt;/ver&gt;\n&quot; +
		&quot;    &lt;rqid&gt;&quot;+tstamp+&quot;&lt;/rqid&gt;\n&quot; +
		&quot;  &lt;/hdr&gt;\n\n&quot; + 
		&quot;&lt;usrmiglst&gt;\n\n&quot;);
bw.flush();
bw.close();
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Have Users" enabled="true">
          <stringProp name="WhileController.condition">${results}</stringProp>
        </WhileController>
        <hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Sql Server" enabled="true">
            <stringProp name="IfController.condition">&quot;${databaseToUse}&quot; == &quot;SqlServer&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Sql Server-QueryGetUserHostIdFromDB" enabled="true">
              <stringProp name="dataSource">Connection-1</stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="query">select host_id from d3_user with (nolock) where deleted &lt;&gt; 1 and id between ${usrIdFrom} and ${usrIdTo} order by id OFFSET ${pageNo} ROWS FETCH NEXT ${pageSize} ROWS ONLY;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">host_id</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If My Sql" enabled="true">
            <stringProp name="IfController.condition">&quot;${databaseToUse}&quot; == &quot;MySql&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="MySql-QueryGetUserHostIdFromDB" enabled="true">
              <stringProp name="dataSource">Connection-2</stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="query">select host_id from d3_user where deleted &lt;&gt; 1 and id between ${usrIdFrom} and ${usrIdTo} order by id limit ${pageNo},${pageSize};</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">host_id</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach User" enabled="true">
            <stringProp name="ForeachController.inputVal">host_id</stringProp>
            <stringProp name="ForeachController.returnVal">hostId</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">${host_id_#}</stringProp>
          </ForeachController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Start &lt;usrmig&gt;" enabled="true">
              <stringProp name="BeanShellSampler.query">
String hostIdHash = Integer.toHexString(&quot;${hostId}&quot;.hashCode());
String xml = &quot;&lt;!-- ${hostId} - &quot; + hostIdHash + &quot; --&gt;\n&quot;;
xml += &quot;&lt;usrmig uid=\&quot;${hostId}\&quot;&gt;\n&quot;;

vars.put(&quot;hostIdHash&quot;, hostIdHash);
vars.put(&quot;xml&quot;, xml);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Dest &lt;alertdestlst&gt;" enabled="true">
              <stringProp name="BeanShellSampler.query">
String xml = vars.get(&quot;xml&quot;);
xml += &quot;&lt;alertdestlst&gt;\n&quot; +
//     &quot;   &lt;alertdest uid=&quot;dest-uid-001&quot;&gt;\n&quot; +
//     &quot;     &lt;nm&gt;My Email&lt;/nm&gt;\n&quot; +
//     &quot;     &lt;tp&gt;email&lt;/tp&gt;\n&quot; +
//     &quot;     &lt;dest&gt;joe.dest@email.com&lt;/dest&gt;\n&quot; +
//     &quot;   &lt;/alertdest&gt;\n&quot; +
     &quot;   &lt;alertdest uid=\&quot;inbox-${hostIdHash}\&quot;&gt;\n&quot; +
     &quot;     &lt;nm&gt;Inbox&lt;/nm&gt;\n&quot; +
     &quot;     &lt;tp&gt;inbox&lt;/tp&gt;\n&quot; +
     &quot;   &lt;/alertdest&gt;\n&quot; +
     &quot;   &lt;alertdest uid=\&quot;prime-${hostIdHash}\&quot;&gt;\n&quot; +
     &quot;     &lt;nm&gt;Email&lt;/nm&gt;\n&quot; +
     &quot;     &lt;tp&gt;email&lt;/tp&gt;\n&quot; +
     &quot;     &lt;pridest&gt;1&lt;/pridest&gt;\n&quot; +
     &quot;   &lt;/alertdest&gt;\n&quot; +
     &quot;&lt;/alertdestlst&gt;\n&quot;;

vars.put(&quot;xml&quot;, xml);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Cats &lt;catlst&gt;" enabled="false">
              <stringProp name="BeanShellSampler.query">
String xml = vars.get(&quot;xml&quot;);
xml += &quot;&lt;catlst&gt;\n&quot; +
      &quot;  &lt;cat uid=\&quot;cat-${hostIdHash}-Internet\&quot;&gt;\n&quot; +
      &quot;    &lt;tp&gt;expense&lt;/tp&gt;\n&quot; +
      &quot;    &lt;lvl&gt;user&lt;/lvl&gt;\n&quot; +
      &quot;    &lt;grp&gt;Utilities&lt;/grp&gt;\n&quot; +
      &quot;    &lt;nm&gt;Internet&lt;/nm&gt;\n&quot; +
      &quot;  &lt;/cat&gt;\n&quot; +
      &quot;  &lt;cat uid=\&quot;cat-${hostIdHash}-Housing\&quot;&gt;\n&quot; +
      &quot;    &lt;tp&gt;expense&lt;/tp&gt;\n&quot; +
      &quot;    &lt;lvl&gt;user&lt;/lvl&gt;\n&quot; +
      &quot;    &lt;grp&gt;Housing&lt;/grp&gt;\n&quot; +
      &quot;    &lt;nm&gt;Housing&lt;/nm&gt;\n&quot; +
      &quot;  &lt;/cat&gt;\n&quot; +

      &quot;&lt;/catlst&gt;\n&quot;;

vars.put(&quot;xml&quot;, xml);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Alerts &lt;catlst&gt;" enabled="true">
              <stringProp name="BeanShellSampler.query">
String[] txNames = {&quot;WALMART&quot;,&quot;SHELL&quot;,&quot;TARGET&quot;,&quot;MICRO CENTER&quot;,&quot;ATT&quot;};

String txName = txNames[new Random().nextInt(txNames.length)];
txName = txNames[0]; // all the same for now

String xml = vars.get(&quot;xml&quot;);
xml += &quot;&lt;alertlst&gt;\n&quot; +
      &quot;  &lt;alert uid=\&quot;alert-${hostIdHash}-merchant\&quot;&gt;\n&quot; +
      &quot;    &lt;tp&gt;transaction.merchant&lt;/tp&gt;\n&quot; +
      &quot;    &lt;desc&gt;Transaction Merchant&lt;/desc&gt;\n&quot; +
      &quot;    &lt;enbl&gt;1&lt;/enbl&gt;\n&quot; +
      &quot;    &lt;freq&gt;always&lt;/freq&gt;\n&quot; +
      &quot;    &lt;destlst&gt;\n&quot; +
      &quot;      &lt;dest uid=\&quot;inbox-${hostIdHash}\&quot;/&gt;\n&quot; +
      &quot;    &lt;/destlst&gt;\n&quot; +
      &quot;    &lt;alst&gt;\n&quot; +
      &quot;      &lt;a n=\&quot;merchant\&quot;&gt;&quot; + txName + &quot;&lt;/a&gt;\n&quot; +
      &quot;    &lt;/alst&gt;\n&quot; +
      &quot;  &lt;/alert&gt;\n&quot; +
      &quot;&lt;/alertlst&gt;\n&quot;;

vars.put(&quot;xml&quot;, xml);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="End &lt;usrmig&gt;" enabled="true">
              <stringProp name="BeanShellSampler.query">
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;

String xml = vars.get(&quot;xml&quot;);

xml += &quot;&lt;/usrmig&gt;\n\n&quot;;

File file = new File(vars.get(&quot;filePath&quot;));
FileWriter fw = new FileWriter(file, true);
BufferedWriter bw = new BufferedWriter(fw);

bw.write(xml);
bw.flush();
bw.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Reset Paging" enabled="true">
            <stringProp name="BeanShellSampler.query">
//log.error(vars.get(&quot;results&quot;));
//log.error(vars.get(&quot;host_id_#&quot;));
//log.error(vars.get(&quot;host_id_1&quot;));

vars.put(&quot;results&quot;, ((new Integer(&quot;${host_id_#}&quot;) &gt; 0) ? &quot;true&quot; : &quot;false&quot;));
vars.put(&quot;pageNo&quot;, &quot;&quot;+(new Integer(&quot;${pageNo}&quot;)+new Integer(&quot;${pageSize}&quot;)));	
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Conduit End" enabled="true">
          <stringProp name="BeanShellSampler.query">
File file = new File(vars.get(&quot;filePath&quot;));
FileWriter fw = new FileWriter(file.getAbsoluteFile(), true);
BufferedWriter bw = new BufferedWriter(fw);	

bw.write(&quot;&lt;/usrmiglst&gt;\n\n&lt;/conduit&gt;\n&quot;);
bw.flush();
bw.close();
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="RenameConduitFiles" enabled="true">
          <stringProp name="BeanShellSampler.query">
String path = &quot;${conduitFileDropPath}/&quot;;
String name = &quot;${filename}&quot;;

File txtFile = new File(path+name+&quot;.txt&quot;);	
File xmlFile = new File(path+name+&quot;.xml&quot;);

txtFile.renameTo(xmlFile);
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
