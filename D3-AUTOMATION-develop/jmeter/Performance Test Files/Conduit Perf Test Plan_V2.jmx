<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.4" jmeter="2.9 r1437961">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Conduit Perf Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="conduitFileDropPath" elementType="Argument">
            <stringProp name="Argument.name">conduitFileDropPath</stringProp>
            <stringProp name="Argument.value">C:\\dev\\incomingData\\</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dbURL" elementType="Argument">
            <stringProp name="Argument.name">dbURL</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dbName" elementType="Argument">
            <stringProp name="Argument.name">dbName</stringProp>
            <stringProp name="Argument.value">d3v2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dbUserName" elementType="Argument">
            <stringProp name="Argument.name">dbUserName</stringProp>
            <stringProp name="Argument.value">d3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dbPassword" elementType="Argument">
            <stringProp name="Argument.name">dbPassword</stringProp>
            <stringProp name="Argument.value">d3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="numOfThreads" elementType="Argument">
            <stringProp name="Argument.name">numOfThreads</stringProp>
            <stringProp name="Argument.value">16</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rumpUpPeriodInSecs" elementType="Argument">
            <stringProp name="Argument.name">rumpUpPeriodInSecs</stringProp>
            <stringProp name="Argument.value">32</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="numOfLoops" elementType="Argument">
            <stringProp name="Argument.name">numOfLoops</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="includeCompAcctsTxnLstInFile" elementType="Argument">
            <stringProp name="Argument.name">includeCompAcctsTxnLstInFile</stringProp>
            <stringProp name="Argument.value">true</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="numOfCompany" elementType="Argument">
            <stringProp name="Argument.name">numOfCompany</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="numOfAcctProdsPerCompany" elementType="Argument">
            <stringProp name="Argument.name">numOfAcctProdsPerCompany</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="numOfUsers" elementType="Argument">
            <stringProp name="Argument.name">numOfUsers</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="numOfAccts" elementType="Argument">
            <stringProp name="Argument.name">numOfAccts</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="numOfTxnsPerAccts" elementType="Argument">
            <stringProp name="Argument.name">numOfTxnsPerAccts</stringProp>
            <stringProp name="Argument.value">200</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="includeUserMigListInFile" elementType="Argument">
            <stringProp name="Argument.name">includeUserMigListInFile</stringProp>
            <stringProp name="Argument.value">false</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="numOfCategoryPerUser" elementType="Argument">
            <stringProp name="Argument.name">numOfCategoryPerUser</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="numOfAlertDestPerUser" elementType="Argument">
            <stringProp name="Argument.name">numOfAlertDestPerUser</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="numOfAlertsPerUser" elementType="Argument">
            <stringProp name="Argument.name">numOfAlertsPerUser</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="numOfMsgsPerUser" elementType="Argument">
            <stringProp name="Argument.name">numOfMsgsPerUser</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="numbOfCharsInMsgBody" elementType="Argument">
            <stringProp name="Argument.name">numbOfCharsInMsgBody</stringProp>
            <stringProp name="Argument.value">500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Conduit Performance Tests" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${numOfLoops}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${numOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rumpUpPeriodInSecs}</stringProp>
        <longProp name="ThreadGroup.start_time">1360810051000</longProp>
        <longProp name="ThreadGroup.end_time">1360810051000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="partialFileName" elementType="Argument">
              <stringProp name="Argument.name">partialFileName</stringProp>
              <stringProp name="Argument.value">conduit-jmeter-test</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="partialCompUid" elementType="Argument">
              <stringProp name="Argument.name">partialCompUid</stringProp>
              <stringProp name="Argument.value">comp-uid-00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="partialFileNameForUpdate" elementType="Argument">
              <stringProp name="Argument.name">partialFileNameForUpdate</stringProp>
              <stringProp name="Argument.value">conduit-jmeter-update-test</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="DB Connection" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">Select 1</stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="dataSource">Connection-1</stringProp>
          <stringProp name="dbUrl">jdbc:jtds:sqlserver:/${dbURL};${dbName}</stringProp>
          <stringProp name="driver">net.sourceforge.jtds.jdbc.Driver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">${dbPassword}</stringProp>
          <stringProp name="poolMax">10</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">${dbUserName}</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="CreateDataWithConduit" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="DropCreateDataConduitFile" enabled="false">
            <stringProp name="BeanShellSampler.query">String conduitProccessDir = &quot;${conduitFileDropPath}&quot;;
String fileName = &quot;${partialFileName}${__threadNum}&quot;;
String filePath = conduitProccessDir + fileName + &quot;.txt&quot;;
File file = new File(filePath);	    
FileWriter fw = new FileWriter(file.getAbsoluteFile());
BufferedWriter bw = new BufferedWriter(fw);	

String acctProds = &quot;&quot;;
String comps = &quot;&quot;;
for (int c = 0; c&lt;${numOfCompany}; c++)
{
	comps = comps + 
			&quot;    &lt;comp uid=\&quot;${partialCompUid}1-${__threadNum}-&quot;+(c+1)+&quot;\&quot; puid=\&quot;${partialCompUid}${__threadNum}1\&quot;&gt;\r\n&quot; + 
			&quot;     &lt;tp&gt;branch&lt;/tp&gt;\r\n&quot; + 
			&quot;     &lt;busn&gt;\r\n&quot; + 
			&quot;       &lt;nm&gt;JMeterBusinessNameBranch&lt;/nm&gt;\r\n&quot; + 
			&quot;       &lt;ph&gt;3035555656&lt;/ph&gt;\r\n&quot; + 
			&quot;       &lt;paddr&gt;\r\n&quot; + 
			&quot;         &lt;a1&gt;304 S INVERNESS&lt;/a1&gt;\r\n&quot; + 
			&quot;         &lt;a2&gt;Suite 395&lt;/a2&gt;\r\n&quot; + 
			&quot;         &lt;ct&gt;Englewood&lt;/ct&gt;\r\n&quot; + 
			&quot;         &lt;st&gt;CO&lt;/st&gt;\r\n&quot; + 
			&quot;         &lt;cc&gt;US&lt;/cc&gt;\r\n&quot; + 
			&quot;         &lt;pc&gt;80110&lt;/pc&gt;\r\n&quot; + 
			&quot;         &lt;ln&gt;-94.20885579&lt;/ln&gt;\r\n&quot; + 
			&quot;         &lt;lt&gt;36.3731619&lt;/lt&gt;\r\n&quot; + 
			&quot;       &lt;/paddr&gt;\r\n&quot; + 
			&quot;       &lt;maddr&gt;\r\n&quot; + 
			&quot;         &lt;a1&gt;PO BOX 189&lt;/a1&gt;\r\n&quot; + 
			&quot;         &lt;ct&gt;Denver&lt;/ct&gt;\r\n&quot; + 
			&quot;         &lt;st&gt;CO&lt;/st&gt;\r\n&quot; + 
			&quot;         &lt;cc&gt;US&lt;/cc&gt;\r\n&quot; + 
			&quot;         &lt;pc&gt;80287-0001&lt;/pc&gt;\r\n&quot; + 
			&quot;       &lt;/maddr&gt;\r\n&quot; + 
			&quot;       &lt;ct1&gt;\r\n&quot; + 
			&quot;         &lt;fn&gt;JMeterFirstName1&lt;/fn&gt;\r\n&quot; + 
			&quot;         &lt;mn&gt;M&lt;/mn&gt;\r\n&quot; + 
			&quot;         &lt;ln&gt;Smith&lt;/ln&gt;\r\n&quot; + 
			&quot;         &lt;pem&gt;anna.pri@smith.com&lt;/pem&gt;\r\n&quot; + 
			&quot;         &lt;aem&gt;anna.alt@smith.com&lt;/aem&gt;\r\n&quot; + 
			&quot;         &lt;hph&gt;8885551111&lt;/hph&gt;\r\n&quot; + 
			&quot;         &lt;wph&gt;8885551112&lt;/wph&gt;\r\n&quot; + 
			&quot;         &lt;mph&gt;8885551113&lt;/mph&gt;\r\n&quot; + 
			&quot;         &lt;emp&gt;0&lt;/emp&gt;\r\n&quot; + 
			&quot;          &lt;paddr&gt;\r\n&quot; + 
			&quot;            &lt;a1&gt;1210 Physical Address St&lt;/a1&gt;\r\n&quot; + 
			&quot;            &lt;ct&gt;Denver&lt;/ct&gt;\r\n&quot; + 
			&quot;            &lt;st&gt;CO&lt;/st&gt;\r\n&quot; + 
			&quot;            &lt;pc&gt;80112&lt;/pc&gt;\r\n&quot; + 
			&quot;          &lt;/paddr&gt;\r\n&quot; + 
			&quot;          &lt;maddr&gt;\r\n&quot; + 
			&quot;            &lt;a1&gt;1410 Mailing Address St&lt;/a1&gt;\r\n&quot; + 
			&quot;            &lt;ct&gt;Denver&lt;/ct&gt;\r\n&quot; + 
			&quot;            &lt;st&gt;CO&lt;/st&gt;\r\n&quot; + 
			&quot;            &lt;pc&gt;80114&lt;/pc&gt;\r\n&quot; + 
			&quot;          &lt;/maddr&gt;\r\n&quot; + 
			&quot;       &lt;/ct1&gt;\r\n&quot; + 
			&quot;       &lt;ct2&gt;\r\n&quot; + 
			&quot;         &lt;fn&gt;JMeterFirstName2&lt;/fn&gt;\r\n&quot; + 
			&quot;         &lt;ln&gt;Doe&lt;/ln&gt;\r\n&quot; + 
			&quot;         &lt;pem&gt;jane.pri@doe2.com&lt;/pem&gt;\r\n&quot; + 
			&quot;         &lt;aem&gt;jane.alt@doe2.com&lt;/aem&gt;\r\n&quot; + 
			&quot;         &lt;hph&gt;8885552221&lt;/hph&gt;\r\n&quot; + 
			&quot;         &lt;wph&gt;8885552222&lt;/wph&gt;\r\n&quot; + 
			&quot;         &lt;mph&gt;8885552223&lt;/mph&gt;\r\n&quot; + 
			&quot;         &lt;emp&gt;f&lt;/emp&gt;\r\n&quot; + 
			&quot;       &lt;/ct2&gt;\r\n&quot; + 
			&quot;     &lt;/busn&gt;\r\n&quot; + 
			&quot;	 &lt;acctprodlst&gt;\r\n&quot;;	
	        acctProds = &quot;&quot;;
			for (int c1 = 0; c1&lt;${numOfAcctProdsPerCompany}; c1++)
			{
				acctProds = acctProds + 
						&quot;       &lt;acctprod uid=\&quot;prod-uid-00${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;\&quot;&gt;\r\n&quot; + 
						&quot;         &lt;nm&gt;brokerage&lt;/nm&gt;\r\n&quot; + 
						&quot;         &lt;tp&gt;brokerage&lt;/tp&gt;\r\n&quot; + 
						&quot;       &lt;/acctprod&gt;\r\n&quot; ;
			}
			comps = comps + acctProds +
			&quot;     &lt;/acctprodlst&gt;\r\n&quot; + 
			&quot;   &lt;/comp&gt;\r\n&quot;;
}

String txns = &quot;&quot;;
String accts = &quot;&quot;;
for (int c = 0; c&lt;${numOfAccts}; c++)
{
	accts = accts + 
			&quot;    &lt;acct uid=\&quot;acct-uid-00${__threadNum}&quot;+(c+1)+&quot;\&quot; cuid=\&quot;${partialCompUid}1-${__threadNum}-1\&quot;&gt;\r\n&quot; + 
			&quot;      &lt;produid&gt;prod-uid-00${__threadNum}1_1&lt;/produid&gt;\r\n&quot; + 
			&quot;      &lt;nm&gt;checking&lt;/nm&gt;\r\n&quot; + 
			&quot;      &lt;rttn&gt;123456789&lt;/rttn&gt;\r\n&quot; + 
			&quot;      &lt;nbr&gt;1234 1234 1234 1234&lt;/nbr&gt;\r\n&quot; + 
			&quot;      &lt;bal&gt;-24500.25&lt;/bal&gt;\r\n&quot; + 
			&quot;      &lt;sts&gt;o&lt;/sts&gt;\r\n&quot; + 
			&quot;      &lt;cc&gt;USD&lt;/cc&gt;\r\n&quot; + 
			&quot;      &lt;avbal&gt;-7865.44&lt;/avbal&gt;\r\n&quot; + 
			&quot;      &lt;rstr&gt;0&lt;/rstr&gt;\r\n&quot; + 
			&quot;      &lt;estmt&gt;0&lt;/estmt&gt;\r\n&quot; + 
			&quot;      &lt;opndt&gt;2013-01-01&lt;/opndt&gt;\r\n&quot; + 
			&quot;      &lt;clsdt&gt;2015-01-01&lt;/clsdt&gt;\r\n&quot; + 
			&quot;      &lt;alst&gt;\r\n&quot; + 
			&quot;        &lt;a n=\&quot;APR\&quot; t=\&quot;p\&quot;&gt;0.03&lt;/a&gt;\r\n&quot; + 
			&quot;        &lt;a n=\&quot;InterestRate\&quot; t=\&quot;p\&quot;&gt;0.03&lt;/a&gt;\r\n&quot; + 
			&quot;        &lt;a n=\&quot;LastStatementDate\&quot; t=\&quot;d\&quot;&gt;2013-09-01&lt;/a&gt;\r\n&quot; + 
			&quot;        &lt;a n=\&quot;ACHTransferFrom\&quot; t=\&quot;string\&quot; d = \&quot;155\&quot;&gt;some value&lt;/a&gt;\r\n&quot; + 
			&quot;      &lt;/alst&gt;\r\n&quot; + 
			&quot;      &lt;txnlst&gt;\r\n&quot;;
	        txns = &quot;&quot;;
			for (int c1 = 0; c1&lt;${numOfTxnsPerAccts}; c1++)
			{
				txns = txns + 
						&quot;        &lt;txn uid=\&quot;txn-uid-00${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;\&quot; am=\&quot;800\&quot; cn=\&quot;1001\&quot; ia=\&quot;78.45\&quot; im=\&quot;checkimg-${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;.jpg\&quot; mc=\&quot;0202\&quot; oa=\&quot;7896.45\&quot; od=\&quot;2013-09-10\&quot; pa=\&quot;45.45\&quot; pd=\&quot;2013-11-10\&quot; pn=\&quot;0\&quot; ps=\&quot;1\&quot; rb=\&quot;7894.45\&quot; tc=\&quot;TXN-CODE\&quot; tp=\&quot;d\&quot; dn=\&quot;TestDepositNum\&quot;&gt;\r\n&quot; + 
						&quot;          &lt;nm&gt;TestTransaction${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;&lt;/nm&gt;\r\n&quot; + 
						&quot;          &lt;mm&gt;TestTransaction memo&lt;/mm&gt;\r\n&quot; + 
						&quot;        &lt;/txn&gt;\r\n&quot;;
			}
			accts = accts + txns +
			&quot;      &lt;/txnlst&gt;\r\n&quot; + 
			&quot;    &lt;/acct&gt;\r\n&quot;;
}

String userAccts = &quot;&quot;;
for (int c = 0; c&lt;${numOfAccts}; c++)
{
	userAccts = userAccts + 
			&quot;        &lt;usracct a=\&quot;a\&quot; auid=\&quot;acct-uid-00${__threadNum}&quot;+(c+1)+&quot;\&quot;/&gt;\r\n&quot;;
}

String users = &quot;&quot;;
for (int c = 0; c&lt;${numOfUsers}; c++)
{
	users = users + 
			&quot;    &lt;usr uid=\&quot;usr-uid-00${__threadNum}&quot;+(c+1)+&quot;\&quot; cuid=\&quot;${partialCompUid}1-${__threadNum}-1\&quot;&gt;\r\n&quot; + 
			&quot;      &lt;login&gt;testlogin${__threadNum}&quot;+(c+1)+&quot;&lt;/login&gt;\r\n&quot; + 
			&quot;      &lt;txid&gt;111-00-2222&lt;/txid&gt;\r\n&quot; + 
			&quot;      &lt;txtp&gt;ssn&lt;/txtp&gt;\r\n&quot; + 
			&quot;      &lt;lock&gt;f&lt;/lock&gt;\r\n&quot; + 
			&quot;      &lt;m&gt;f&lt;/m&gt;\r\n&quot; + 
			&quot;      &lt;enbl&gt;1&lt;/enbl&gt;\r\n&quot; + 
			&quot;      &lt;emlopt&gt;0&lt;/emlopt&gt;\r\n&quot; + 
			&quot;      &lt;dob&gt;1969-01-01&lt;/dob&gt;\r\n&quot; + 
			&quot;      &lt;g&gt;m&lt;/g&gt;\r\n&quot; + 
			&quot;      &lt;bpid&gt;billpay-id-001&lt;/bpid&gt;\r\n&quot; + 
			&quot;      &lt;bpsts&gt;active&lt;/bpsts&gt;\r\n&quot; + 
			&quot;      &lt;crsc&gt;700&lt;/crsc&gt;\r\n&quot; + 
			&quot;      &lt;crdt&gt;2013-09-01&lt;/crdt&gt;\r\n&quot; + 
			&quot;      &lt;cls&gt;VALUED-CUSTOMER&lt;/cls&gt;\r\n&quot; + 
			&quot;      &lt;psn&gt;\r\n&quot; + 
			&quot;        &lt;fn&gt;JMeterFirstName3&lt;/fn&gt;\r\n&quot; + 
			&quot;		 &lt;mn&gt;No Middle Name&lt;/mn&gt;\r\n&quot; + 
			&quot;        &lt;ln&gt;JMeterLastName3&lt;/ln&gt;\r\n&quot; + 
			&quot;        &lt;pem&gt;abadyelkhan@d3banking.com&lt;/pem&gt;\r\n&quot; + 
			&quot;		 &lt;aem&gt;aem@d3banking.com&lt;/aem&gt;\r\n&quot; + 
			&quot;        &lt;mph&gt;3030005555&lt;/mph&gt;\r\n&quot; + 
			&quot;		 &lt;hph&gt;456-456-7894&lt;/hph&gt;\r\n&quot; + 
			&quot;		 &lt;wph&gt;789-789-9879 789&lt;/wph&gt;\r\n&quot; + 
			&quot;        &lt;emp&gt;0&lt;/emp&gt;\r\n&quot; + 
			&quot;       &lt;paddr&gt;\r\n&quot; + 
			&quot;        &lt;a1&gt;3041 S INVERNESS&lt;/a1&gt;\r\n&quot; + 
			&quot;		 &lt;a2&gt;3042 S INVERNESS&lt;/a2&gt;\r\n&quot; + 
			&quot;		 &lt;a3&gt;3043 S INVERNESS&lt;/a3&gt;\r\n&quot; + 
			&quot;		 &lt;a4&gt;3044 S INVERNESS&lt;/a4&gt;\r\n&quot; + 
			&quot;         &lt;a2&gt;Suite 395&lt;/a2&gt;\r\n&quot; + 
			&quot;         &lt;ct&gt;Englewood&lt;/ct&gt;\r\n&quot; + 
			&quot;         &lt;st&gt;CO&lt;/st&gt;\r\n&quot; + 
			&quot;         &lt;cc&gt;US&lt;/cc&gt;\r\n&quot; + 
			&quot;         &lt;pc&gt;80110&lt;/pc&gt;\r\n&quot; + 
			&quot;         &lt;ln&gt;-94.20885579&lt;/ln&gt;\r\n&quot; + 
			&quot;         &lt;lt&gt;36.3731619&lt;/lt&gt;\r\n&quot; + 
			&quot;       &lt;/paddr&gt;\r\n&quot; + 
			&quot;	    &lt;maddr&gt;\r\n&quot; + 
			&quot;         &lt;a1&gt;3041 S MailingAddress&lt;/a1&gt;\r\n&quot; + 
			&quot;		 &lt;a2&gt;3042 S MailingAddress&lt;/a2&gt;\r\n&quot; + 
			&quot;		 &lt;a3&gt;3043 S MailingAddress&lt;/a3&gt;\r\n&quot; + 
			&quot;		 &lt;a4&gt;3044 S MailingAddress&lt;/a4&gt;\r\n&quot; + 
			&quot;         &lt;a2&gt;MailingAddress 395&lt;/a2&gt;\r\n&quot; + 
			&quot;         &lt;ct&gt;Aurora&lt;/ct&gt;\r\n&quot; + 
			&quot;         &lt;st&gt;CO&lt;/st&gt;\r\n&quot; + 
			&quot;         &lt;cc&gt;US&lt;/cc&gt;\r\n&quot; + 
			&quot;         &lt;pc&gt;98745 4561&lt;/pc&gt;\r\n&quot; + 
			&quot;         &lt;ln&gt;-94.20887579&lt;/ln&gt;\r\n&quot; + 
			&quot;         &lt;lt&gt;35.3731619&lt;/lt&gt;\r\n&quot; + 
			&quot;       &lt;/maddr&gt;\r\n&quot; + 
			&quot;      &lt;/psn&gt;\r\n&quot; + 
			&quot;      &lt;usracctlist&gt;\r\n&quot; + userAccts + 
			&quot;      &lt;/usracctlist&gt;\r\n&quot; + 
			&quot;    &lt;/usr&gt;\r\n&quot;;
}

String acctDispLst = &quot;&quot;;
for (int c = 0; c&lt;${numOfAccts}; c++)
{
	acctDispLst = acctDispLst + 
			&quot;        &lt;acctdisp uid=\&quot;acct-uid-00${__threadNum}&quot;+(c+1)+&quot;\&quot;&gt;\r\n&quot; + 
			&quot;          &lt;excl&gt;0&lt;/excl&gt;\r\n&quot; + 
			&quot;          &lt;hdn&gt;0&lt;/hdn&gt;\r\n&quot; + 
			&quot;          &lt;hba&gt;0&lt;/hba&gt;\r\n&quot; + 
			&quot;          &lt;do&gt;1&lt;/do&gt;\r\n&quot; + 
			&quot;        &lt;/acctdisp&gt;\r\n&quot;;
}

String numberOfChars = &quot;&quot;;
for (int c = 0; c&lt;${numbOfCharsInMsgBody}; c++)
{
	numberOfChars = numberOfChars + c;
}

String catTxnLst = &quot;&quot;;
String userMigLst = &quot;&quot;;
String catLst = &quot;&quot;;
String alertDestLst = &quot;&quot;;
String alertLst = &quot;&quot;;
String msgList = &quot;&quot;;
for (int c = 0; c&lt;${numOfUsers}; c++)
{
	userMigLst = userMigLst + 
			&quot;    &lt;usrmig uid=\&quot;usr-uid-00${__threadNum}&quot;+(c+1)+&quot;\&quot;&gt;\r\n&quot; + 
			&quot;      &lt;acctdisplst&gt;\r\n&quot; + acctDispLst +
			&quot;      &lt;/acctdisplst&gt;\r\n&quot; + 
			&quot;      &lt;catlst&gt;\r\n&quot;;
	  		catLst = &quot;&quot;;
			for (int c1 = 0; c1&lt;${numOfCategoryPerUser}; c1++)
			{
				catLst = catLst + 
						&quot;        &lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;\&quot;&gt;\r\n&quot; + 
						&quot;          &lt;tp&gt;expense&lt;/tp&gt;\r\n&quot; + 
						&quot;          &lt;lvl&gt;user&lt;/lvl&gt;\r\n&quot; + 
						&quot;          &lt;grp&gt;CategoryGroup${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;&lt;/grp&gt;\r\n&quot; + 
						&quot;          &lt;nm&gt;CategoryName${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;&lt;/nm&gt;\r\n&quot; + 
						&quot;        &lt;/cat&gt;\r\n&quot;;
			};
			userMigLst = userMigLst + catLst +
			&quot;      &lt;/catlst&gt;\r\n&quot; + 
			&quot;      &lt;alertdestlst&gt;\r\n&quot;;
			alertDestLst = &quot;&quot;;
			for (int c1 = 0; c1&lt;${numOfAlertDestPerUser}; c1++)
			{
				alertDestLst = alertDestLst + 
						&quot;        &lt;alertdest uid=\&quot;dest-uid-00${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;\&quot;&gt;\r\n&quot; + 
						&quot;          &lt;nm&gt;TestAlertDest${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;&lt;/nm&gt;\r\n&quot; + 
						&quot;          &lt;tp&gt;email&lt;/tp&gt;\r\n&quot; + 
						&quot;          &lt;dest&gt;joe.dest@email.com&lt;/dest&gt;\r\n&quot; + 
						&quot;		  &lt;prDest&gt;0&lt;/prDest&gt;\r\n&quot; + 
						&quot;		  &lt;altDest&gt;0&lt;/altDest&gt;\r\n&quot; + 
						&quot;        &lt;/alertdest&gt;\r\n&quot;;
			};
			userMigLst = userMigLst + alertDestLst +	 
			&quot;      &lt;/alertdestlst&gt;\r\n&quot; + 
			&quot;      &lt;alertlst&gt;\r\n&quot;;
			alertLst = &quot;&quot;;
			for (int c1 = 0; c1&lt;${numOfAlertsPerUser}; c1++)
			{
				alertLst = alertLst + 
						&quot;        &lt;alert uid=\&quot;alert-uid-00${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;\&quot;&gt;\r\n&quot; + 
						&quot;          &lt;tp&gt;balance.threshold&lt;/tp&gt;\r\n&quot; + 
						&quot;          &lt;desc&gt;TestAlert${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;&lt;/desc&gt;\r\n&quot; + 
						&quot;          &lt;enbl&gt;1&lt;/enbl&gt;\r\n&quot; + 
						&quot;          &lt;freq&gt;daily&lt;/freq&gt;\r\n&quot; + 
						&quot;          &lt;destlst&gt;\r\n&quot; + 
						&quot;            &lt;dest uid=\&quot;dest-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;/&gt;\r\n&quot; + 
						&quot;          &lt;/destlst&gt;\r\n&quot; + 
						&quot;          &lt;alst&gt;\r\n&quot; + 
						&quot;            &lt;a n=\&quot;accountUid\&quot;&gt;acct-uid-00${__threadNum}1&lt;/a&gt;\r\n&quot; + 
						&quot;            &lt;a n=\&quot;operator\&quot;&gt;LT&lt;/a&gt;\r\n&quot; + 
						&quot;            &lt;a n=\&quot;threshold\&quot;&gt;100.000000&lt;/a&gt;\r\n&quot; + 
						&quot;          &lt;/alst&gt;\r\n&quot; + 
						&quot;        &lt;/alert&gt;\r\n&quot;;
			}; 
			userMigLst = userMigLst + alertLst +
			&quot;      &lt;/alertlst&gt;\r\n&quot; + 
			&quot;      &lt;msglst&gt;\r\n&quot;;
			msgList = &quot;&quot;;
			for (int c1 = 0; c1&lt;${numOfMsgsPerUser}; c1++)
			{
				msgList = msgList + 
						&quot;        &lt;msg uid=\&quot;msg-uid-00${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;\&quot;&gt;\r\n&quot; + 
						&quot;          &lt;tp&gt;general&lt;/tp&gt;\r\n&quot; + 
						&quot;          &lt;sb&gt;TestMessage${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;&lt;/sb&gt;\r\n&quot; + 
						&quot;          &lt;bd&gt;&quot;+numberOfChars+&quot;&lt;/bd&gt;\r\n&quot; + 
						&quot;          &lt;sts&gt;new&lt;/sts&gt;\r\n&quot; + 
						&quot;        &lt;/msg&gt;\r\n&quot;;
			};
			userMigLst = userMigLst + msgList +
			&quot;      &lt;/msglst&gt;\r\n&quot; + 
			&quot;      &lt;catmaplst&gt;\r\n&quot;;
			catTxnLst = &quot;&quot;;
			for (int c1 = 0; c1&lt;${numOfTxnsPerAccts}; c1++)
			{
				catTxnLst = catTxnLst + 
						&quot;        &lt;catmap auid=\&quot;acct-uid-00${__threadNum}&quot;+(c+1)+&quot;\&quot; tuid=\&quot;txn-uid-00${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;\&quot;&gt;\r\n&quot; + 
						&quot;          &lt;cattxnlst&gt;\r\n&quot; + 
						&quot;            &lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;10&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;            &lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;20&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;30&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;40&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;50&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;60&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;70&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;80&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;90&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;50&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;100&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;100&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;100&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;          &lt;/cattxnlst&gt;\r\n&quot; + 
						&quot;        &lt;/catmap&gt;\r\n&quot;;
			};
			userMigLst = userMigLst + catTxnLst +
			&quot;      &lt;/catmaplst&gt;\r\n&quot; + 
			&quot;    &lt;/usrmig&gt;\r\n&quot;;
}

bw.write(&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\r\n&quot; + 
		&quot;&lt;conduit&gt;\r\n&quot; + 
		&quot;  &lt;hdr&gt;\r\n&quot; + 
		&quot;    &lt;ver&gt;2.0&lt;/ver&gt;\r\n&quot; + 
		&quot;    &lt;rqid&gt;01234567890&lt;/rqid&gt;\r\n&quot; + 
		&quot;    &lt;authn u=\&quot;user\&quot; p=\&quot;password\&quot;/&gt;\r\n&quot; + 
		&quot;    &lt;txndtrng bdt=\&quot;2013-09-01\&quot; edt=\&quot;2014-11-30\&quot;/&gt;\r\n&quot; + 
		&quot;  &lt;/hdr&gt;\r\n&quot;);
if (${includeCompAcctsTxnLstInFile})
{
	bw.write( 
			&quot;  &lt;complst&gt;\r\n&quot; + 
					&quot;   &lt;comp uid=\&quot;${partialCompUid}${__threadNum}1\&quot; puid=\&quot;ROOT\&quot;&gt;\r\n&quot; + 
					&quot;     &lt;tp&gt;institution&lt;/tp&gt;\r\n&quot; + 
					&quot;     &lt;busn&gt;\r\n&quot; + 
					&quot;       &lt;nm&gt;JMeterBusinessName&lt;/nm&gt;\r\n&quot; + 
					&quot;     &lt;/busn&gt;\r\n&quot; + 
					&quot;     &lt;acctprodlst&gt;\r\n&quot; + 
					&quot;       &lt;acctprod uid=\&quot;prod-uid${__threadNum}-1\&quot;&gt;\r\n&quot; + 
					&quot;         &lt;nm&gt;BLUE CHECKING&lt;/nm&gt;\r\n&quot; + 
					&quot;         &lt;tp&gt;checking&lt;/tp&gt;\r\n&quot; + 
					&quot;         &lt;alst&gt;\r\n&quot; + 
					&quot;           &lt;a n=\&quot;CashAdvanceLimit\&quot; t=\&quot;m\&quot;&gt;500.00&lt;/a&gt;\r\n&quot; + 
					&quot;           &lt;a n=\&quot;InterestRate\&quot; t=\&quot;p\&quot;&gt;0.01&lt;/a&gt;\r\n&quot; + 
					&quot;         &lt;/alst&gt;\r\n&quot; + 
					&quot;       &lt;/acctprod&gt;\r\n&quot; + 
					&quot;     &lt;/acctprodlst&gt;\r\n&quot; + 
					&quot;   &lt;/comp&gt;\r\n&quot; + comps +
					&quot;  &lt;/complst&gt;\r\n&quot; +
					&quot;  &lt;acctlst&gt;\r\n&quot; + accts +
					&quot;  &lt;/acctlst&gt;\r\n&quot; +
					&quot;  &lt;usrlst&gt;\r\n&quot; + users +
					&quot;  &lt;/usrlst&gt;\r\n&quot;);
}
if (${includeUserMigListInFile})
{
	bw.write( 
			&quot;  &lt;usrmiglst&gt;\r\n&quot; + userMigLst +
			&quot;  &lt;/usrmiglst&gt;\r\n&quot;);
}
bw.write(&quot;&lt;/conduit&gt;&quot;);
bw.close();
String xmlFilePath = conduitProccessDir + fileName + &quot;.xml&quot;;
File xmlFile = new File(xmlFilePath);
if (xmlFile.exists())
{
	xmlFile.delete();
}
file.renameTo(xmlFile);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="RenameConduitFiles" enabled="true">
            <stringProp name="BeanShellSampler.query">String conduitProccessDir = &quot;${conduitFileDropPath}&quot;;
String fileName = &quot;${partialFileName}${__threadNum}&quot;;
String filePath = conduitProccessDir + fileName + &quot;.txt&quot;;
File file = new File(filePath);	

String xmlFilePath = conduitProccessDir + fileName + &quot;.xml&quot;;
File xmlFile = new File(xmlFilePath);
if (xmlFile.exists())
{
        xmlFile.delete();
}
file.renameTo(xmlFile);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="_WaitCreateConduitProcessCompletion" enabled="true">
            <stringProp name="BeanShellSampler.query">int counter = 0;
File file = new File(&quot;${conduitFileDropPath}&quot;);
File[] files  = file.listFiles();
for(int i=0; i &lt; files.length; i++)
{
	File f = files[i];
	if(!f.isDirectory())
	{
		while (f.getName().contains(&quot;${partialFileName}&quot;)) 
	    	{
			if(counter &gt; 100000000){
			       break;
			}
			files  = file.listFiles();
			f = files[i];
			counter = counter + 1;
			Thread.sleep(1000);
	    	}
	}
}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="_WaitCreateConduitProcessCompletion" enabled="true">
              <stringProp name="BeanShellAssertion.query">int counter = 0;
File file = new File(&quot;${conduitFileDropPath}&quot;);
File[] files  = file.listFiles();
for(int i=0; i &lt; files.length; i++)
{
	File f = files[i];
	if(!f.isDirectory())
	{
		if (f.getName().contains(&quot;${partialFileName}&quot;)) 
	    	{
			Failure= true ;
		        	FailureMessage = fileName + &quot; file has not been proccessed yet! Increase the wait time!&quot; ;
    			break;
	    	}
	}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters">counter</stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="IfCompAcctsTxnsProccessed" enabled="true">
            <stringProp name="IfController.condition">${includeCompAcctsTxnLstInFile} == true</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ValidateCreatedData" enabled="true">
              <stringProp name="dataSource">Connection-1</stringProp>
              <stringProp name="query">SELECT(
&apos;system_event:&apos; +
(SELECT convert(varchar, (SELECT COUNT(*) FROM [${dbName}].[dbo].[system_event])))
+&apos;company:&apos; +
(SELECT convert(varchar, ((SELECT COUNT(*) FROM [${dbName}].[dbo].[company] where source_company_id like &apos;comp-uid-00%&apos;)-1)/${numOfThreads}))
+&apos;business:&apos; +
(SELECT convert(varchar, ((SELECT COUNT(*) FROM [${dbName}].[dbo].[business] where name like &apos;JMeterBusinessName%&apos;)-1)/${numOfThreads}))      
+&apos;d3_account:&apos; +
(SELECT convert(varchar, (SELECT COUNT(*) FROM [${dbName}].[dbo].[d3_account] where source_account_id like &apos;acct-uid-00%&apos;)/${numOfThreads}))
+&apos;d3_transaction:&apos; +
(SELECT convert(varchar, (SELECT COUNT(*) FROM [${dbName}].[dbo].[d3_transaction] where source_tx_id like &apos;txn-uid-00%&apos;)/${numOfAccts}/${numOfThreads}))
+&apos;d3_user:&apos; +
(SELECT convert(varchar, (SELECT COUNT(*) FROM [${dbName}].[dbo].[d3_user] where host_id like &apos;usr-uid-00%&apos;)/${numOfThreads}))
)
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">expectedResult</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="ValidateCreatedDataInDB" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-136895904">system_event:0company:${numOfCompany}business:${numOfCompany}d3_account:${numOfAccts}d3_transaction:${numOfTxnsPerAccts}d3_user:${numOfUsers}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
                <stringProp name="Scope.variable">fileProcessSucceed</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="IfUserMigrationsProcessed" enabled="true">
            <stringProp name="IfController.condition">${includeUserMigListInFile} == true</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ValidateCreatedData" enabled="true">
              <stringProp name="dataSource">Connection-1</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT(
&apos;system_event:&apos; +
(SELECT convert(varchar, (SELECT COUNT(*) FROM [${dbName}].[dbo].[system_event])))
+&apos;company:&apos; +
(SELECT convert(varchar, ((SELECT COUNT(*) FROM [${dbName}].[dbo].[company] where source_company_id like &apos;comp-uid-00%&apos;)-1)/${numOfThreads}))
+&apos;business:&apos; +
(SELECT convert(varchar, ((SELECT COUNT(*) FROM [${dbName}].[dbo].[business] where name like &apos;JMeterBusinessName%&apos;)-1)/${numOfThreads}))      
+&apos;d3_account:&apos; +
(SELECT convert(varchar, (SELECT COUNT(*) FROM [${dbName}].[dbo].[d3_account] where source_account_id like &apos;acct-uid-00%&apos;)/${numOfThreads}))
+&apos;d3_transaction:&apos; +
(SELECT convert(varchar, (SELECT COUNT(*) FROM [${dbName}].[dbo].[d3_transaction] where source_tx_id like &apos;txn-uid-00%&apos;)/${numOfAccts}/${numOfThreads}))
+&apos;d3_user:&apos; +
(SELECT convert(varchar, (SELECT COUNT(*) FROM [${dbName}].[dbo].[d3_user] where host_id like &apos;usr-uid-00%&apos;)/${numOfThreads}))
+&apos;alert_user_dest:&apos; +
(SELECT convert(varchar, (SELECT COUNT(*) FROM [${dbName}].[dbo].[alert_user_dest] where name like &apos;TestAlertDest%&apos;)/${numOfUsers}/${numOfThreads}))
+&apos;alert_user_alert:&apos; +
(SELECT convert(varchar, (SELECT COUNT(*) FROM [${dbName}].[dbo].[alert_user_alert] where description like &apos;TestAlert%&apos;)/${numOfUsers}/${numOfThreads}))
+&apos;category:&apos; +
(SELECT convert(varchar, (SELECT COUNT(*) FROM [${dbName}].[dbo].[category] where category_group like &apos;CategoryGroup%&apos;)/${numOfUsers}/${numOfThreads}/2))
+&apos;user_message:&apos; +
(SELECT convert(varchar, (SELECT COUNT(*) FROM [${dbName}].[dbo].[user_message] where subject like &apos;TestMessage%&apos;)/${numOfUsers}/${numOfThreads}))
+&apos;user_transaction_split:&apos; +
(SELECT convert(varchar, (SELECT COUNT(*) FROM [${dbName}].[dbo].[user_transaction_split] as t1, [${dbName}].[dbo].category as t2 where t1.category_id=t2.id and category_group like &apos;CategoryGroup%&apos;)/${numOfAccts}/${numOfThreads}/13))
)
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">expectedResult</stringProp>
              <stringProp name="resultVariable"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="ValidateCreatedDataInDB" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382481050">system_event:0company:${numOfCompany}business:${numOfCompany}d3_account:${numOfAccts}d3_transaction:${numOfTxnsPerAccts}d3_user:${numOfUsers}alert_user_dest:${numOfAlertDestPerUser}alert_user_alert:${numOfAlertsPerUser}category:${numOfCategoryPerUser}user_message:${numOfMsgsPerUser}user_transaction_split:${numOfTxnsPerAccts}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="UpdateDataWithConduit" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="DropUpdatedDataConduitFile" enabled="false">
            <stringProp name="BeanShellSampler.query">String conduitProccessDir = &quot;${conduitFileDropPath}&quot;;
String fileName = &quot;${partialFileNameForUpdate}${__threadNum}&quot;;
String filePath = conduitProccessDir + fileName + &quot;.txt&quot;;
File file = new File(filePath);	    
FileWriter fw = new FileWriter(file.getAbsoluteFile());
BufferedWriter bw = new BufferedWriter(fw);	

String acctProds = &quot;&quot;;
String comps = &quot;&quot;;
for (int c = 0; c&lt;${numOfCompany}; c++)
{
	comps = comps + 
			&quot;    &lt;comp uid=\&quot;${partialCompUid}1-${__threadNum}-&quot;+(c+1)+&quot;\&quot; puid=\&quot;${partialCompUid}${__threadNum}1\&quot;&gt;\r\n&quot; + 
			&quot;     &lt;tp&gt;branch&lt;/tp&gt;\r\n&quot; + 
			&quot;     &lt;busn&gt;\r\n&quot; + 
			&quot;       &lt;nm&gt;UpdatedBusinessNameBranch&lt;/nm&gt;\r\n&quot; + 
			&quot;       &lt;ph&gt;3035555656&lt;/ph&gt;\r\n&quot; + 
			&quot;       &lt;paddr&gt;\r\n&quot; + 
			&quot;         &lt;a1&gt;304 S INVERNESS&lt;/a1&gt;\r\n&quot; + 
			&quot;         &lt;a2&gt;Suite 395&lt;/a2&gt;\r\n&quot; + 
			&quot;         &lt;ct&gt;Englewood&lt;/ct&gt;\r\n&quot; + 
			&quot;         &lt;st&gt;CO&lt;/st&gt;\r\n&quot; + 
			&quot;         &lt;cc&gt;US&lt;/cc&gt;\r\n&quot; + 
			&quot;         &lt;pc&gt;80110&lt;/pc&gt;\r\n&quot; + 
			&quot;         &lt;ln&gt;-94.20885579&lt;/ln&gt;\r\n&quot; + 
			&quot;         &lt;lt&gt;36.3731619&lt;/lt&gt;\r\n&quot; + 
			&quot;       &lt;/paddr&gt;\r\n&quot; + 
			&quot;       &lt;maddr&gt;\r\n&quot; + 
			&quot;         &lt;a1&gt;UPdated PO BOX 189&lt;/a1&gt;\r\n&quot; + 
			&quot;         &lt;ct&gt;Denver&lt;/ct&gt;\r\n&quot; + 
			&quot;         &lt;st&gt;CO&lt;/st&gt;\r\n&quot; + 
			&quot;         &lt;cc&gt;US&lt;/cc&gt;\r\n&quot; + 
			&quot;         &lt;pc&gt;80287-0001&lt;/pc&gt;\r\n&quot; + 
			&quot;       &lt;/maddr&gt;\r\n&quot; + 
			&quot;       &lt;ct1&gt;\r\n&quot; + 
			&quot;         &lt;fn&gt;JMeterFirstName1&lt;/fn&gt;\r\n&quot; + 
			&quot;         &lt;mn&gt;M&lt;/mn&gt;\r\n&quot; + 
			&quot;         &lt;ln&gt;Smith&lt;/ln&gt;\r\n&quot; + 
			&quot;         &lt;pem&gt;anna.pri@smith.com&lt;/pem&gt;\r\n&quot; + 
			&quot;         &lt;aem&gt;anna.alt@smith.com&lt;/aem&gt;\r\n&quot; + 
			&quot;         &lt;hph&gt;8885551111&lt;/hph&gt;\r\n&quot; + 
			&quot;         &lt;wph&gt;8885551112&lt;/wph&gt;\r\n&quot; + 
			&quot;         &lt;mph&gt;8885551113&lt;/mph&gt;\r\n&quot; + 
			&quot;         &lt;emp&gt;0&lt;/emp&gt;\r\n&quot; + 
			&quot;          &lt;paddr&gt;\r\n&quot; + 
			&quot;            &lt;a1&gt;1210 Physical Address St&lt;/a1&gt;\r\n&quot; + 
			&quot;            &lt;ct&gt;Denver&lt;/ct&gt;\r\n&quot; + 
			&quot;            &lt;st&gt;CO&lt;/st&gt;\r\n&quot; + 
			&quot;            &lt;pc&gt;80112&lt;/pc&gt;\r\n&quot; + 
			&quot;          &lt;/paddr&gt;\r\n&quot; + 
			&quot;          &lt;maddr&gt;\r\n&quot; + 
			&quot;            &lt;a1&gt;1410 Mailing Address St&lt;/a1&gt;\r\n&quot; + 
			&quot;            &lt;ct&gt;Denver&lt;/ct&gt;\r\n&quot; + 
			&quot;            &lt;st&gt;CO&lt;/st&gt;\r\n&quot; + 
			&quot;            &lt;pc&gt;80114&lt;/pc&gt;\r\n&quot; + 
			&quot;          &lt;/maddr&gt;\r\n&quot; + 
			&quot;       &lt;/ct1&gt;\r\n&quot; + 
			&quot;       &lt;ct2&gt;\r\n&quot; + 
			&quot;         &lt;fn&gt;JMeterUpdatedFirstName2&lt;/fn&gt;\r\n&quot; + 
			&quot;         &lt;ln&gt;Doe&lt;/ln&gt;\r\n&quot; + 
			&quot;         &lt;pem&gt;jane.pri@doe2.com&lt;/pem&gt;\r\n&quot; + 
			&quot;         &lt;aem&gt;jane.alt@doe2.com&lt;/aem&gt;\r\n&quot; + 
			&quot;         &lt;hph&gt;8885552221&lt;/hph&gt;\r\n&quot; + 
			&quot;         &lt;wph&gt;8885552222&lt;/wph&gt;\r\n&quot; + 
			&quot;         &lt;mph&gt;8885552223&lt;/mph&gt;\r\n&quot; + 
			&quot;         &lt;emp&gt;f&lt;/emp&gt;\r\n&quot; + 
			&quot;       &lt;/ct2&gt;\r\n&quot; + 
			&quot;     &lt;/busn&gt;\r\n&quot; + 
			&quot;	 &lt;acctprodlst&gt;\r\n&quot;;	
	        acctProds = &quot;&quot;;
			for (int c1 = 0; c1&lt;${numOfAcctProdsPerCompany}; c1++)
			{
				acctProds = acctProds + 
						&quot;       &lt;acctprod uid=\&quot;prod-uid-00${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;\&quot;&gt;\r\n&quot; + 
						&quot;         &lt;nm&gt;brokerage&lt;/nm&gt;\r\n&quot; + 
						&quot;         &lt;tp&gt;brokerage&lt;/tp&gt;\r\n&quot; + 
						&quot;       &lt;/acctprod&gt;\r\n&quot; ;
			}
			comps = comps + acctProds +
			&quot;     &lt;/acctprodlst&gt;\r\n&quot; + 
			&quot;   &lt;/comp&gt;\r\n&quot;;
}

String txns = &quot;&quot;;
String accts = &quot;&quot;;
for (int c = 0; c&lt;${numOfAccts}; c++)
{
	accts = accts + 
			&quot;    &lt;acct uid=\&quot;acct-uid-00${__threadNum}&quot;+(c+1)+&quot;\&quot; cuid=\&quot;${partialCompUid}1-${__threadNum}-1\&quot;&gt;\r\n&quot; + 
			&quot;      &lt;produid&gt;prod-uid-00${__threadNum}1_1&lt;/produid&gt;\r\n&quot; + 
			&quot;      &lt;nm&gt;checking_updated&lt;/nm&gt;\r\n&quot; + 
			&quot;      &lt;rttn&gt;123456789&lt;/rttn&gt;\r\n&quot; + 
			&quot;      &lt;nbr&gt;1234 1234 1234 1234&lt;/nbr&gt;\r\n&quot; + 
			&quot;      &lt;bal&gt;-24500.25&lt;/bal&gt;\r\n&quot; + 
			&quot;      &lt;sts&gt;o&lt;/sts&gt;\r\n&quot; + 
			&quot;      &lt;cc&gt;USD&lt;/cc&gt;\r\n&quot; + 
			&quot;      &lt;avbal&gt;-7865.44&lt;/avbal&gt;\r\n&quot; + 
			&quot;      &lt;rstr&gt;0&lt;/rstr&gt;\r\n&quot; + 
			&quot;      &lt;estmt&gt;0&lt;/estmt&gt;\r\n&quot; + 
			&quot;      &lt;opndt&gt;2013-01-01&lt;/opndt&gt;\r\n&quot; + 
			&quot;      &lt;clsdt&gt;2015-01-01&lt;/clsdt&gt;\r\n&quot; + 
			&quot;      &lt;alst&gt;\r\n&quot; + 
			&quot;        &lt;a n=\&quot;APR\&quot; t=\&quot;p\&quot;&gt;0.03&lt;/a&gt;\r\n&quot; + 
			&quot;        &lt;a n=\&quot;InterestRate\&quot; t=\&quot;p\&quot;&gt;0.03&lt;/a&gt;\r\n&quot; + 
			&quot;        &lt;a n=\&quot;LastStatementDate\&quot; t=\&quot;d\&quot;&gt;2013-09-01&lt;/a&gt;\r\n&quot; + 
			&quot;        &lt;a n=\&quot;ACHTransferFrom\&quot; t=\&quot;string\&quot; d = \&quot;155\&quot;&gt;some value&lt;/a&gt;\r\n&quot; + 
			&quot;      &lt;/alst&gt;\r\n&quot; + 
			&quot;      &lt;txnlst&gt;\r\n&quot;;
	        txns = &quot;&quot;;
			for (int c1 = 0; c1&lt;${numOfTxnsPerAccts}; c1++)
			{
				txns = txns + 
						&quot;        &lt;txn uid=\&quot;txn-uid-00${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;\&quot; am=\&quot;800\&quot; cn=\&quot;1001\&quot; ia=\&quot;78.45\&quot; im=\&quot;checkimg-${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;.jpg\&quot; mc=\&quot;0202\&quot; oa=\&quot;7896.45\&quot; od=\&quot;2013-09-10\&quot; pa=\&quot;45.45\&quot; pd=\&quot;2013-11-10\&quot; pn=\&quot;0\&quot; ps=\&quot;1\&quot; rb=\&quot;7894.45\&quot; tc=\&quot;TXN-CODE\&quot; tp=\&quot;d\&quot; dn=\&quot;TestDepositNum\&quot;&gt;\r\n&quot; + 
						&quot;          &lt;nm&gt;TestTransaction_Updated${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;&lt;/nm&gt;\r\n&quot; + 
						&quot;          &lt;mm&gt;TestTransaction memo&lt;/mm&gt;\r\n&quot; + 
						&quot;        &lt;/txn&gt;\r\n&quot;;
			}
			accts = accts + txns +
			&quot;      &lt;/txnlst&gt;\r\n&quot; + 
			&quot;    &lt;/acct&gt;\r\n&quot;;
}

String userAccts = &quot;&quot;;
for (int c = 0; c&lt;${numOfAccts}; c++)
{
	userAccts = userAccts + 
			&quot;        &lt;usracct a=\&quot;a\&quot; auid=\&quot;acct-uid-00${__threadNum}&quot;+(c+1)+&quot;\&quot;/&gt;\r\n&quot;;
}

String users = &quot;&quot;;
for (int c = 0; c&lt;${numOfUsers}; c++)
{
	users = users + 
			&quot;    &lt;usr uid=\&quot;usr-uid-00${__threadNum}&quot;+(c+1)+&quot;\&quot; cuid=\&quot;${partialCompUid}1-${__threadNum}-1\&quot;&gt;\r\n&quot; + 
			&quot;      &lt;login&gt;testloginUpdated${__threadNum}&quot;+(c+1)+&quot;&lt;/login&gt;\r\n&quot; + 
			&quot;      &lt;txid&gt;111-00-2222&lt;/txid&gt;\r\n&quot; + 
			&quot;      &lt;txtp&gt;ssn&lt;/txtp&gt;\r\n&quot; + 
			&quot;      &lt;lock&gt;f&lt;/lock&gt;\r\n&quot; + 
			&quot;      &lt;m&gt;f&lt;/m&gt;\r\n&quot; + 
			&quot;      &lt;enbl&gt;1&lt;/enbl&gt;\r\n&quot; + 
			&quot;      &lt;emlopt&gt;0&lt;/emlopt&gt;\r\n&quot; + 
			&quot;      &lt;dob&gt;1969-01-01&lt;/dob&gt;\r\n&quot; + 
			&quot;      &lt;g&gt;m&lt;/g&gt;\r\n&quot; + 
			&quot;      &lt;bpid&gt;billpay-id-001&lt;/bpid&gt;\r\n&quot; + 
			&quot;      &lt;bpsts&gt;active&lt;/bpsts&gt;\r\n&quot; + 
			&quot;      &lt;crsc&gt;700&lt;/crsc&gt;\r\n&quot; + 
			&quot;      &lt;crdt&gt;2013-09-01&lt;/crdt&gt;\r\n&quot; + 
			&quot;      &lt;cls&gt;VALUED-CUSTOMER&lt;/cls&gt;\r\n&quot; + 
			&quot;      &lt;psn&gt;\r\n&quot; + 
			&quot;        &lt;fn&gt;JMeterFirstName3&lt;/fn&gt;\r\n&quot; + 
			&quot;		 &lt;mn&gt;No Middle Name&lt;/mn&gt;\r\n&quot; + 
			&quot;        &lt;ln&gt;JMeterLastName3&lt;/ln&gt;\r\n&quot; + 
			&quot;        &lt;pem&gt;abadyelkhan@d3banking.com&lt;/pem&gt;\r\n&quot; + 
			&quot;		 &lt;aem&gt;aem@d3banking.com&lt;/aem&gt;\r\n&quot; + 
			&quot;        &lt;mph&gt;3030005555&lt;/mph&gt;\r\n&quot; + 
			&quot;		 &lt;hph&gt;456-456-7894&lt;/hph&gt;\r\n&quot; + 
			&quot;		 &lt;wph&gt;789-789-9879 789&lt;/wph&gt;\r\n&quot; + 
			&quot;        &lt;emp&gt;0&lt;/emp&gt;\r\n&quot; + 
			&quot;       &lt;paddr&gt;\r\n&quot; + 
			&quot;        &lt;a1&gt;3041 S INVERNESS&lt;/a1&gt;\r\n&quot; + 
			&quot;		 &lt;a2&gt;3042 S INVERNESS&lt;/a2&gt;\r\n&quot; + 
			&quot;		 &lt;a3&gt;3043 S INVERNESS&lt;/a3&gt;\r\n&quot; + 
			&quot;		 &lt;a4&gt;3044 S INVERNESS&lt;/a4&gt;\r\n&quot; + 
			&quot;         &lt;a2&gt;Suite 395&lt;/a2&gt;\r\n&quot; + 
			&quot;         &lt;ct&gt;Englewood&lt;/ct&gt;\r\n&quot; + 
			&quot;         &lt;st&gt;CO&lt;/st&gt;\r\n&quot; + 
			&quot;         &lt;cc&gt;US&lt;/cc&gt;\r\n&quot; + 
			&quot;         &lt;pc&gt;80110&lt;/pc&gt;\r\n&quot; + 
			&quot;         &lt;ln&gt;-94.20885579&lt;/ln&gt;\r\n&quot; + 
			&quot;         &lt;lt&gt;36.3731619&lt;/lt&gt;\r\n&quot; + 
			&quot;       &lt;/paddr&gt;\r\n&quot; + 
			&quot;	    &lt;maddr&gt;\r\n&quot; + 
			&quot;         &lt;a1&gt;3041 S MailingAddress&lt;/a1&gt;\r\n&quot; + 
			&quot;		 &lt;a2&gt;3042 S MailingAddress&lt;/a2&gt;\r\n&quot; + 
			&quot;		 &lt;a3&gt;3043 S MailingAddress&lt;/a3&gt;\r\n&quot; + 
			&quot;		 &lt;a4&gt;3044 S MailingAddress&lt;/a4&gt;\r\n&quot; + 
			&quot;         &lt;a2&gt;MailingAddress 395&lt;/a2&gt;\r\n&quot; + 
			&quot;         &lt;ct&gt;Aurora&lt;/ct&gt;\r\n&quot; + 
			&quot;         &lt;st&gt;CO&lt;/st&gt;\r\n&quot; + 
			&quot;         &lt;cc&gt;US&lt;/cc&gt;\r\n&quot; + 
			&quot;         &lt;pc&gt;98745 4561&lt;/pc&gt;\r\n&quot; + 
			&quot;         &lt;ln&gt;-94.20887579&lt;/ln&gt;\r\n&quot; + 
			&quot;         &lt;lt&gt;35.3731619&lt;/lt&gt;\r\n&quot; + 
			&quot;       &lt;/maddr&gt;\r\n&quot; + 
			&quot;      &lt;/psn&gt;\r\n&quot; + 
			&quot;      &lt;usracctlist&gt;\r\n&quot; + userAccts + 
			&quot;      &lt;/usracctlist&gt;\r\n&quot; + 
			&quot;    &lt;/usr&gt;\r\n&quot;;
}

String acctDispLst = &quot;&quot;;
for (int c = 0; c&lt;${numOfAccts}; c++)
{
	acctDispLst = acctDispLst + 
			&quot;        &lt;acctdisp uid=\&quot;acct-uid-00${__threadNum}&quot;+(c+1)+&quot;\&quot;&gt;\r\n&quot; + 
			&quot;          &lt;excl&gt;1&lt;/excl&gt;\r\n&quot; + 
			&quot;          &lt;hdn&gt;1&lt;/hdn&gt;\r\n&quot; + 
			&quot;          &lt;hba&gt;1&lt;/hba&gt;\r\n&quot; + 
			&quot;          &lt;do&gt;1&lt;/do&gt;\r\n&quot; + 
			&quot;        &lt;/acctdisp&gt;\r\n&quot;;
}

String numberOfChars = &quot;&quot;;
for (int c = 0; c&lt;${numbOfCharsInMsgBody}; c++)
{
	numberOfChars = numberOfChars + c;
}

String catTxnLst = &quot;&quot;;
String userMigLst = &quot;&quot;;
String catLst = &quot;&quot;;
String alertDestLst = &quot;&quot;;
String alertLst = &quot;&quot;;
String msgList = &quot;&quot;;
for (int c = 0; c&lt;${numOfUsers}; c++)
{
	userMigLst = userMigLst + 
			&quot;    &lt;usrmig uid=\&quot;usr-uid-00${__threadNum}&quot;+(c+1)+&quot;\&quot;&gt;\r\n&quot; + 
			&quot;      &lt;acctdisplst&gt;\r\n&quot; + acctDispLst +
			&quot;      &lt;/acctdisplst&gt;\r\n&quot; + 
			&quot;      &lt;catlst&gt;\r\n&quot;;
	  		catLst = &quot;&quot;;
			for (int c1 = 0; c1&lt;${numOfCategoryPerUser}; c1++)
			{
				catLst = catLst + 
						&quot;        &lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;\&quot;&gt;\r\n&quot; + 
						&quot;          &lt;tp&gt;expense&lt;/tp&gt;\r\n&quot; + 
						&quot;          &lt;lvl&gt;user&lt;/lvl&gt;\r\n&quot; + 
						&quot;          &lt;grp&gt;CategoryGroup${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;&lt;/grp&gt;\r\n&quot; + 
						&quot;          &lt;nm&gt;CategoryName${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;&lt;/nm&gt;\r\n&quot; + 
						&quot;        &lt;/cat&gt;\r\n&quot;;
			};
			userMigLst = userMigLst + catLst +
			&quot;      &lt;/catlst&gt;\r\n&quot; + 
			&quot;      &lt;alertdestlst&gt;\r\n&quot;;
			alertDestLst = &quot;&quot;;
			for (int c1 = 0; c1&lt;${numOfAlertDestPerUser}; c1++)
			{
				alertDestLst = alertDestLst + 
						&quot;        &lt;alertdest uid=\&quot;dest-uid-00${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;\&quot;&gt;\r\n&quot; + 
						&quot;          &lt;nm&gt;TestAlertDest${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;&lt;/nm&gt;\r\n&quot; + 
						&quot;          &lt;tp&gt;email&lt;/tp&gt;\r\n&quot; + 
						&quot;          &lt;dest&gt;joe.dest@email.com&lt;/dest&gt;\r\n&quot; + 
						&quot;		  &lt;prDest&gt;0&lt;/prDest&gt;\r\n&quot; + 
						&quot;		  &lt;altDest&gt;0&lt;/altDest&gt;\r\n&quot; + 
						&quot;        &lt;/alertdest&gt;\r\n&quot;;
			};
			userMigLst = userMigLst + alertDestLst +	 
			&quot;      &lt;/alertdestlst&gt;\r\n&quot; + 
			&quot;      &lt;alertlst&gt;\r\n&quot;;
			alertLst = &quot;&quot;;
			for (int c1 = 0; c1&lt;${numOfAlertsPerUser}; c1++)
			{
				alertLst = alertLst + 
						&quot;        &lt;alert uid=\&quot;alert-uid-00${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;\&quot;&gt;\r\n&quot; + 
						&quot;          &lt;tp&gt;balance.threshold&lt;/tp&gt;\r\n&quot; + 
						&quot;          &lt;desc&gt;TestAlert${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;&lt;/desc&gt;\r\n&quot; + 
						&quot;          &lt;enbl&gt;1&lt;/enbl&gt;\r\n&quot; + 
						&quot;          &lt;freq&gt;daily&lt;/freq&gt;\r\n&quot; + 
						&quot;          &lt;destlst&gt;\r\n&quot; + 
						&quot;            &lt;dest uid=\&quot;dest-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;/&gt;\r\n&quot; + 
						&quot;          &lt;/destlst&gt;\r\n&quot; + 
						&quot;          &lt;alst&gt;\r\n&quot; + 
						&quot;            &lt;a n=\&quot;accountUid\&quot;&gt;acct-uid-00${__threadNum}1&lt;/a&gt;\r\n&quot; + 
						&quot;            &lt;a n=\&quot;operator\&quot;&gt;LT&lt;/a&gt;\r\n&quot; + 
						&quot;            &lt;a n=\&quot;threshold\&quot;&gt;100.000000&lt;/a&gt;\r\n&quot; + 
						&quot;          &lt;/alst&gt;\r\n&quot; + 
						&quot;        &lt;/alert&gt;\r\n&quot;;
			}; 
			userMigLst = userMigLst + alertLst +
			&quot;      &lt;/alertlst&gt;\r\n&quot; + 
			&quot;      &lt;msglst&gt;\r\n&quot;;
			msgList = &quot;&quot;;
			for (int c1 = 0; c1&lt;${numOfMsgsPerUser}; c1++)
			{
				msgList = msgList + 
						&quot;        &lt;msg uid=\&quot;msg-uid-00${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;\&quot;&gt;\r\n&quot; + 
						&quot;          &lt;tp&gt;general&lt;/tp&gt;\r\n&quot; + 
						&quot;          &lt;sb&gt;TestMessage${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;&lt;/sb&gt;\r\n&quot; + 
						&quot;          &lt;bd&gt;&quot;+numberOfChars+&quot;&lt;/bd&gt;\r\n&quot; + 
						&quot;          &lt;sts&gt;new&lt;/sts&gt;\r\n&quot; + 
						&quot;        &lt;/msg&gt;\r\n&quot;;
			};
			userMigLst = userMigLst + msgList +
			&quot;      &lt;/msglst&gt;\r\n&quot; + 
			&quot;      &lt;catmaplst&gt;\r\n&quot;;
			catTxnLst = &quot;&quot;;
			for (int c1 = 0; c1&lt;${numOfTxnsPerAccts}; c1++)
			{
				catTxnLst = catTxnLst + 
						&quot;        &lt;catmap auid=\&quot;acct-uid-00${__threadNum}&quot;+(c+1)+&quot;\&quot; tuid=\&quot;txn-uid-00${__threadNum}&quot;+(c+1)+&quot;_&quot;+(c1+1)+&quot;\&quot;&gt;\r\n&quot; + 
						&quot;          &lt;cattxnlst&gt;\r\n&quot; + 
						&quot;            &lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;10&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;            &lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;20&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;30&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;40&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;50&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;60&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;70&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;80&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;90&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;50&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;100&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;100&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;			&lt;cat uid=\&quot;cat-uid-00${__threadNum}&quot;+(c+1)+&quot;_1\&quot;&gt;\r\n&quot; + 
						&quot;              &lt;amt&gt;100&lt;/amt&gt;\r\n&quot; + 
						&quot;            &lt;/cat&gt;\r\n&quot; + 
						&quot;          &lt;/cattxnlst&gt;\r\n&quot; + 
						&quot;        &lt;/catmap&gt;\r\n&quot;;
			};
			userMigLst = userMigLst + catTxnLst +
			&quot;      &lt;/catmaplst&gt;\r\n&quot; + 
			&quot;    &lt;/usrmig&gt;\r\n&quot;;
}

bw.write(&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\r\n&quot; + 
		&quot;&lt;conduit&gt;\r\n&quot; + 
		&quot;  &lt;hdr&gt;\r\n&quot; + 
		&quot;    &lt;ver&gt;2.0&lt;/ver&gt;\r\n&quot; + 
		&quot;    &lt;rqid&gt;01234567890&lt;/rqid&gt;\r\n&quot; + 
		&quot;    &lt;authn u=\&quot;user\&quot; p=\&quot;password\&quot;/&gt;\r\n&quot; + 
		&quot;    &lt;txndtrng bdt=\&quot;2013-09-01\&quot; edt=\&quot;2014-11-30\&quot;/&gt;\r\n&quot; + 
		&quot;  &lt;/hdr&gt;\r\n&quot;);
if (${includeCompAcctsTxnLstInFile})
{
	bw.write( 
			&quot;  &lt;complst&gt;\r\n&quot; + 
					&quot;   &lt;comp uid=\&quot;${partialCompUid}${__threadNum}1\&quot; puid=\&quot;ROOT\&quot;&gt;\r\n&quot; + 
					&quot;     &lt;tp&gt;institution&lt;/tp&gt;\r\n&quot; + 
					&quot;     &lt;busn&gt;\r\n&quot; + 
					&quot;       &lt;nm&gt;JMeterBusinessName&lt;/nm&gt;\r\n&quot; + 
					&quot;     &lt;/busn&gt;\r\n&quot; + 
					&quot;     &lt;acctprodlst&gt;\r\n&quot; + 
					&quot;       &lt;acctprod uid=\&quot;prod-uid${__threadNum}-1\&quot;&gt;\r\n&quot; + 
					&quot;         &lt;nm&gt;BLUE CHECKING&lt;/nm&gt;\r\n&quot; + 
					&quot;         &lt;tp&gt;checking&lt;/tp&gt;\r\n&quot; + 
					&quot;         &lt;alst&gt;\r\n&quot; + 
					&quot;           &lt;a n=\&quot;CashAdvanceLimit\&quot; t=\&quot;m\&quot;&gt;500.00&lt;/a&gt;\r\n&quot; + 
					&quot;           &lt;a n=\&quot;InterestRate\&quot; t=\&quot;p\&quot;&gt;0.01&lt;/a&gt;\r\n&quot; + 
					&quot;         &lt;/alst&gt;\r\n&quot; + 
					&quot;       &lt;/acctprod&gt;\r\n&quot; + 
					&quot;     &lt;/acctprodlst&gt;\r\n&quot; + 
					&quot;   &lt;/comp&gt;\r\n&quot; + comps +
					&quot;  &lt;/complst&gt;\r\n&quot; +
					&quot;  &lt;acctlst&gt;\r\n&quot; + accts +
					&quot;  &lt;/acctlst&gt;\r\n&quot; +
					&quot;  &lt;usrlst&gt;\r\n&quot; + users +
					&quot;  &lt;/usrlst&gt;\r\n&quot;);
}
if (${includeUserMigListInFile})
{
	bw.write( 
			&quot;  &lt;usrmiglst&gt;\r\n&quot; + userMigLst +
			&quot;  &lt;/usrmiglst&gt;\r\n&quot;);
}
bw.write(&quot;&lt;/conduit&gt;&quot;);
bw.close();
String xmlFilePath = conduitProccessDir + fileName + &quot;.xml&quot;;
File xmlFile = new File(xmlFilePath);
if (xmlFile.exists())
{
	xmlFile.delete();
}
file.renameTo(xmlFile);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="RenameConduitFiles" enabled="true">
            <stringProp name="BeanShellSampler.query">String conduitProccessDir = &quot;${conduitFileDropPath}&quot;;
String fileName = &quot;${partialFileNameForUpdate}${__threadNum}&quot;;
String filePath = conduitProccessDir + fileName + &quot;.txt&quot;;
File file = new File(filePath);	

String xmlFilePath = conduitProccessDir + fileName + &quot;.xml&quot;;
File xmlFile = new File(xmlFilePath);
if (xmlFile.exists())
{
        xmlFile.delete();
}
file.renameTo(xmlFile);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="_WaitUpdateConduitProcessCompletion" enabled="true">
            <stringProp name="BeanShellSampler.query">int counter = 0;
File file = new File(&quot;${conduitFileDropPath}&quot;);
File[] files  = file.listFiles();
for(int i=0; i &lt; files.length; i++)
{
	File f = files[i];
	if(!f.isDirectory())
	{
		while (f.getName().contains(&quot;${partialFileName}&quot;)) 
	    	{
			if(counter &gt; 100000000){
			       break;
			}
			files  = file.listFiles();
			f = files[i];
			counter = counter + 1;
			Thread.sleep(1000);
	    	}
	}
}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="_WaitCreateConduitProcessCompletion" enabled="true">
              <stringProp name="BeanShellAssertion.query">int counter = 0;
File file = new File(&quot;${conduitFileDropPath}&quot;);
File[] files  = file.listFiles();
for(int i=0; i &lt; files.length; i++)
{
	File f = files[i];
	if(!f.isDirectory())
	{
		if (f.getName().contains(&quot;${partialFileName}&quot;)) 
	    	{
			Failure= true ;
		        	FailureMessage = fileName + &quot; file has not been proccessed yet! Increase the wait time!&quot; ;
    			break;
	    	}
	}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters">counter</stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="IfCompAcctsTxnsProccessed" enabled="true">
            <stringProp name="IfController.condition">${includeCompAcctsTxnLstInFile} == true</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ValidateCreatedData" enabled="true">
              <stringProp name="dataSource">Connection-1</stringProp>
              <stringProp name="query">SELECT(
&apos;system_event:&apos; +
(SELECT convert(varchar, (SELECT COUNT(*) FROM [${dbName}].[dbo].[system_event])))
)
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">expectedResult</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="ValidateCreatedDataInDB" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-610355904">system_event:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
                <stringProp name="Scope.variable">fileProcessSucceed</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon Metrics Collector" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <collectionProp name="metricConnections">
          <collectionProp name="917712290">
            <stringProp name="-1204607085">localhost</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="-1383002031">
            <stringProp name="-1204607085">localhost</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="-1993889503">Memory</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="506007220">
            <stringProp name="-1204607085">localhost</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="2112896831">Disks I/O</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="-1270662015">
            <stringProp name="-1204607085">localhost</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="-274342153">Network I/O</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.perfmon.PerfMonCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
